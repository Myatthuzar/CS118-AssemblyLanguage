%!PS-Adobe-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: lab3.dvi
%%CreationDate: Fri Apr  8 00:30:13 2016
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 432 360
%%DocumentFonts: CMR17 CMR12 CMBX12 CMR10 MSBM10 CMSY10 CMMI10 CMTI10
%%+ CMEX10 CMR5 CMTT10 CMBX10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips lab3.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.04.08:0030
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /colon put
dup 67 /C put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08A430B643B6ED36DCAA09B41
FEFDB90E10C8A8B74EB358437D0CEBB9E03109C593BAC09CA996278246E7CA38
4F311F23DC5A7F7DB374E0E3D066C874EEE28CFA47054DC41A389203BFB3D601
BC9A4817F8DAC250A102E7404CA135B33DD66F8FF40D106F52081FBA3E79CE29
FCA5C502B38C86D8D507AEF30436472D2381DEA09B8B3BCB109BCD72332A9483
E61ECF0F89A85BC37B8C10FF3F7C0A84FB8D0F4A7898D3F8B06202FF8DCD698B
56544751347E9AA35209B18D3D416E5E034E36D9C5FC0B33B7AA0D46F3A3F925
7FCAD9D6B9E25671F9AC599A40C37B2439C06FDFDFB3E78DCE515BE82B5BE1AD
2F205E8249407179559DF39CF29120C4B92C5283B609D0445B30F3AC71A1A678
8F43D8B12D7FD722606252CF4902733EA4B250EEF3F8A872BC3764D56E8C1CAB
FE0F83CFE29192D0AF755FF9B6291C667912F60535670894051B77BDAC1F08ED
41235759C713B1CA3303A57193A074A7886C2F2431D0A9D7848C1CD0AAF49ED6
023F25F801868F88D08C68F995DAFEF56EE115024F54D4A150C40C895150BD5C
0601244883B93052094F336F3AB7AD337BB568978CB975ADEE554FC0BBC3D4B6
116C51C1A2B8B2F376CCF599B47D332FBA66EDF5F2C76EDFADE241D7B6FDA315
A5342C32184840716E2170E49B5010DD89BC122F929F28FE33300401D8C52E26
0F2EFC2AA15B013A637C0CE118F79B5976410C5217221F2E6C0F537B668CD762
57C5086F130D5D08191AD89BF0CC9DB104D21C3801485B071547CC68054EBFC2
3908C4EE86F3E9C6234F869111AC8FFA65D5D136A45A5BFF5BC8BFE4A5E6853F
64E4FB354B8DF643539E5FF9771D149CBA245760A37EB9FFB8C57E7235DBF9B2
16BABF8798BD5FB9AEC50C2DF65B10406319C0A88B1AD100202EC0DA8E298BDD
24D40F8C717434280963C407F99C486AAA867CA96C607F9257BF4F9D324A6DD6
651F4D88088E73F780C97B712F5A3E61C300C96A903B219C1A31C697BEE98757
D532FCD5AD81056597DC9E77B92E36BA0A31674BBD89EE00CE178710DE831FC6
E60CCBDEF6DC5949A4601D0CB3237788CFE6193F2A23849475FDF28B6E1F38E5
516F1CCD7C0978D60489EAB81F74A470F52CAC9985F3599402B188DED7692478
F4ADF8C9EC51982BF50318AF2B111B983F05A867ADB393C4CE5B5338E4BA1229
461EF15F046D818FBA902951E9BCFE4B306513861277CB4A22110D31CA3E83FE
6E4CF4B744BAC0D37196E8D0E38AD2BFC522800F4AB304CA26EB2116E1109FD8
5EDE658AFBE17A5EBEA1791BAE71924057DDD3F3563FAB3D3E7B1B79F3E00CBA
757C99885760E93E0781EA24D841C381E0C0A541438195222E37DE19C12946D8
4F0731940ABA48FE96CEE5883285EEBC84DA40890E519D305B0313F7BC736EFD
68BC0E60F4C794A339D88481C808CC17B454ADDB963B86E1FEFEF28BF09DCA54
FDD7C55AE8DA26E78216C9EA27934EFCA4A9A2AE5FE227A10A4511D40C4A2E24
70DFE42F0562C187859FBC4F93D7D6569FF2E0AE3C3CA3F29A7FB167E666A5A0
4EF2FCA7D142FED611E0BDF7F121707EF69895BD751417BDD31A322045E54E7A
A39B55089D130BCDFCEFDA4555EF5D745F1CDC9674378185DB2C6AF1FE71F7BF
2FC0B52EF98171202C7B112CC5178DC80C5AB7B63676E32124A13D1276751136
8578A6F5006437B727EEBB51E9657654F7ABDAEF1F3759524A8059AA7C4C8E47
F92F0155E134B2EA8AE399C8C6EF9776614FB0A6ED5588E446F4DCCF5027EA36
2216B40A797204EDD1602BCF883294D2C827E8FEC08545F103775A7B0BE6B1EF
76FE3383700A594A7FFF8C0A22D9922FDE6BD5AA2D583885F948938E0E32C25F
D4495DA0B27F0C96772247924A59EA92BBE05AC83002D39DF011321852BA2C8A
E7F7399BE79D10BB75D87FAE183E20E9610C8D576AD6CFFD53D371775933B871
C68B078401CB2C97768166BEF3B057A46BB3CB4B5395690E2CEB984A7FDB2968
8CC19C0D7360778D246FE2736AC67BCC239A1240561750E21F4109B3D76555CA
124583A764DD10B74B2A8264D0833E34D2D7908CC88A3437D1D9B00D21F5B342
6D22A53C885E1C7C28D26927C898268D5C3F2F160D0F91E139341D9141ACBF5F
60167FA1B0A4728B1CE118B5893D67F6034A92F696C582632BF15DA4FFB03332
1740485250C28D4CE9CDEF9AAE7009094C1CFD620AAE0869FEB1134AF7635CCC
5462F92565656F60DDEB63680BA1DD8B116363F252D70E36F9E7955B21FA4098
8915374881FDA5AEB13A8C19B2B8BC25BB191097C27E3755747B53055528A393
15E81631DADFA642C35B183C0832B1632C72E5D3A004E175DA20523DE4F1A73D
A8267B043DD1A3091DD4B8E51DA464105B5EDDE4C0449EB807E2E98F754EF486
46D2DA85BD5E401F4DB485814C8970CBB44D186D7D1BA2EC9C61B83A7A752D03
12F85BC4CA9D85D80825B7C1419A2B3200E102D69BE296A568700A3CEDAB5BDC
68082FFE94A13E668BC0B5926498262F413D9A19EB00323165126893039087CA
8CECCBFDEC486BA6A15B0BEDFD4C0FE250246D0F5C67E9971EC478319CFD17DF
38D644713F0B349E04296B6014D917902438F359D1F02FCBC0EF9626D49C29EE
C643DF1EDE9F629653C1F8112D75B4793F70C7A28515BB89A192AF25F2B6A8A6
C24B6410E0CE46F9D32C2D664AD04DCC755D058252170355EDF32CB5753282BA
B817ACD9C1243B060CE93ACA45EC5CA91BA06E76860B58215559FEA62657F0AA
7CD90139AC67B0F6035B6B94BA78AFF58F183804932F873AE6A551B190EA1B83
84E9DC978114E9CD1D51152B8E207818E6BF70EFBA4E1C26D308C35FBD295740
E0EA96913D313ABFE631CDA2A566AC89BA625AC8C87B4E71A120B355C4723CBE
67AFD1AE3A04D70D4F243943EDBC9F75710BA5F1D7271EB53AC967595949F88A
81D5D2E593ED26627611FBDBCC8EE8F46AC65C47ADBFEB00D19F9FBBBAFC7095
412DDE110F8F5B588E8E3C6338BF41D0CA8F4ADFC8D3FC97CF03B8391ACB8E96
6DA0CE350E1C9BA366562788CE818E2457C688863EDDDDE4EF91CABAC20AF7D7
4A6002A4B1033F78EE4A604E27205D8E6DAA2E7DE304C833A962AF785C92EEC5
DD315CF73A76A382716C93D13B8815A8DB629007E36B5A4393FDCD817D056B64
C6BE39A9ACD41D3C56FC91E364D88B56E6F9CEAEC01A833456E625396CFBAF07
15AA0FB7C5293757FA0BEFC13D50F0D71B2707050B8944AE3F201F43C04EFC13
BBA779DA3E2E70811BABAF1A94D1C2206C9EEDCFC594E53B7F42E8C94A9AB325
072A9F00BE052794C13C7098AEC7BD891634E20B65B0F4958B80D763F032EB59
C8315382CF2B78551535EE5DA591C7D58B8C777E05F7B25F3AD6C5967F0054B7
76AA819C7964B90C2DC391D8596C739370FB17493DF077FACC2C8088F2B40B71
D04110BB942EEBF63AC4FA881119FCD5A9C546638401BBE150FD842964F45F61
3685C7DC0C48F603E601837E1B823AA1886F13977F7741B303366E019939A765
F5DC4290312CC0505C79CC374EAE7C2124C2848063C3C96D6B6C32726A4918F5
8B7E9626242E0C784E220B2E267300C9AE6EE0B358AAF8B9E0A1E11BC2BC53F3
BA09C00991761DF7158FB1EA5E4574BF359F918F80028C30729E8AB5E148B504
59159B8539F68CA59F2EF64ABB806EF5A88D0EE315FFAF8803EE700948BB025A
A8FCE091917AA498F824A91B1B3605B9FE01CA8938A65576F623DF6CE022B32A
063AE37F261B182ECF6A7C24DBE07FE6082BB0F17C4579DD8BD3C6ED237CA0D1
8CC2552D46B016D422AE4EB08C4647E1CBDB40037FE4713FE1DE98F8C8293882
C96FED63F62921CCD91B11E46DF631B770B03C42964EACB4652BFF9B6ED93E53
7E207A19982223EE2C42E797720CCA515B7FAE4123D038CD9CC45023F0557863
C4199AD9EEB0787A8B712EA91FB7BF0CD8F2194A5CE79B80C6F72F8135C229B5
48D470DCB1CB8AD9845D8DC309CB28014972A72C90960A99792381FAFC76FF5D
86BF02330A5289507643EDD66D805D8786E765
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /numbersign put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0C3FA72C8A70DC76B5B36B2EEADDCE74
23CF794B66E4DD3B35BF99893789063BF7B01D5F186B2FDE518B2CF2EDE51F81
38244BC64548AC3433A80B86D6A0CA26D77F403C06D65B7394BF1FC7D06D37A5
E70ACD844E3367DE4DB71312CBB85ADD21D5A1F99BB8427F252D90ABB66D7154
EA5AF4A165DF6415A0880AE784071E6B3E2101F0B663DE14DB1ABF8B7CE0E6D9
D24F9CDD9F80028D37C9CB4067A28D41E879AEFECDA71F649EB3C250BFF809D8
1E427E3BF24E85C75F080D93E0314883988B3A4A2B72A1B4A3D2189AB6ECFFBB
C58151AF05AE335200711ED945E18B4BBCE24A8A162BD9BB26137253BA8B5819
41E759A7CA7CBA129BAAD438E87189F2F6AE7C86F4EA099DEB23705A500332A7
4F141D8778EAF3910486B2EA25AAD16B60DD804D0E5BAB0FEBB77BC95EDED08D
B8941E040D99E8F44E70FF842306ACCF65C0AC9673859DB9C3A724238CB8CE62
255BAF0145692EE3B52643A0DE3E667AD03EEF6C753F57E34AECAB0CFEC7B07A
150D7151E57BB3A026D50C7A88DF5F480147D87DFEFE463F76122EEB5128796E
46CB0AF4B537987C2ED552B37D83F393222659DB735F2A293159AD84AF082B95
6F1454471FC36D805485D619D58FC53FBD6E3F72660ABA559B91ECDEFB267268
86A75650C3919962B0139409A29F5E3FA70B901CD5D2C49144778CFFF1D5B63E
099C92AABDAA73D54689812279C95FB7A4F7E840DD53DD3197A4E6D3099446FA
C0032FD40411E8F3300A8A8934B5216B01D916D41DDB32513DC4ACFCEFE43D6B
22FEF13D3567B047C6B35C477ACF2E172701FDB0FFFBE01DD58D7E54398EF4AF
DA5A404E194BCC39BEADEE5C76D7CD1E602793B950256F25871A9760C80B1EB4
D1E1179C390BC240DA061C9D539B20F4FCFB72DD0C1E860DEA2988E749819787
F04BA7A9CC3EDBF9CDE46895FE31EF0F8DEB63E295E8826BF920C8FEAE3B2080
8C98DC43DB22C6537028798198E2D3B0453ED725B774686310F635AE6153D9E1
8A0514882D4CCFE9D2D2465513E42E548F64A50ED78AEC9D62E0F9CF61EBFC9E
E8832D60E91796C916FAFE58F51818B80BBA52C1C06D94E602481654E5378C8D
137E3A872753CCDE4B2618C031CFB13EE91C91335441C434296DDEF61CDFBF8E
8FAF25DB3B6D6796FCCE2711938D605AAC00F0A58DD1A03FCE8732DE541E5E8A
41FC87E1FCA5CD9B5E8D63E7A7D6CEBA67D8A83EAFCF490DB7185AD55ED0F43F
9A1290E91C463895BD12E8A831DAD661E36E1B01ED4C112B8E1D0991D0294BB9
A13B7E9A8835B12A7133E834379B3477DAD425B7996592FB0395E3B4FEDADF4E
23A07F6C0E1387DD54F5C8BD071C4E9E4CC98BB16FD06B69192A2146790B67AA
56FADF3E66C9DE6A975007BF6EFC3BE05801B2FFB32162A41F22B8CEC7D01555
1B07AAD8C85C6196DC28076CF4C4A1C4569E58941EC067EC4C03A2F8D4D19690
C2AFC60AB75F8D99F67B642948FE9603C44A0628BA71713071076559268A3CF4
9BEB5AF687F948EA6965A64782EDE0A00E5D69C1D5C2AADF0E968B43D87C056B
49605589F43F8AFE4414DF68D8217BBC9B8397B3612131A688DDB37C88A024D4
2DF89C8D4D734A0B108FD2BEB3D335485F912CBA1C84227A609B32509552AD1D
7CE7FEB40FEDA68F64D2CF9B4EE9D602DCCE2DAB9B3B10285434E73535387959
A66A113E066238B452483E792801778F393B238365C2E83CCE6860ABBEFC2D01
2E88A403E359E0C58EA928A31F2EB4B747BC6C90A3CD9FB434F4D12484E03E14
C9CDDFCB11274789EFBB83B332A77E1A6771D89613992081129B317774148DAD
F08503BF960BC3E90814B8D1B785E94137B4F168CC4C49FE641A76F7F4C0C773
3A6B904FB7F0B9477E6F64C0AA0CDFFED8F6CD104F501B12A80709F7C98F6494
C9CCDB789ACBD75DD3D914DD6A8BFD29DE36A1D32DC13EF7A1591508388F31D6
5CC3C349F8F64DBD4455854323FE00320EEC42B9AE6684404F1A102728CDF7F1
FD057EBE3F8D731907200D9AA5D72F9744CAC5F1C047BDAAF9158C88A253D747
74970B11342D30A798FFA9B2695F6C01077017D8F2FF9F6F88AD245098A9CFAE
5B40F8C185CD6EDA68951673D6384E6CD12944F86D178D462526A4E19A8C02D1
BD76F1DB27CEA5D181D7E6BC517F279F2B409995B5EB6A882372354B80B025F0
1EB2EF0CC9FEC9682F7694B2E7F47D34C41F32D6D6A734CF2FA7D9FF944D4C18
0DE8B1F9D1CB4AB7D0BB2D3539F25A7CF01A66276ED33A96B87E96BD57759141
9E8DD0EDE5123208C406B5837EE4456A982D760448BF0A28301B463A5AC38D04
76499C6C2DD120123D08B6AC964351632F4475308B0EAF772979E48AAD6DA7B1
72363D82C0B0B6ECD515EC314CFA92B0E0F020E6E181E19EF48ACE6531F2F2A7
48BDE8B927C96E4A19508331E7908F16B9080F5371E2209F83F340B70EB5A4E7
E0B42175CCFF15B6ADA1CD04623C265531BD241735EFDC419077B3882F31F29C
281A4421335D401ED8CD24D06745B8D5605F2E37A4744EB756BD28411B4410B5
C06F3BBEC8A5DD43566F7F0055B28D9CA5D503FCC4D806B04184007DD6C2CC31
C0673FB9879720486543056E35C8FAB7C4E22FD91ACCBB491D41DB775E75B134
F51FE9C3D4727093CFEAD3E55F65BF26AEE904A6F0E431B8A50063EF09EF9607
CA7FF0EC21EB6D2CFE3CE783D1708C7B09F9A92B658455FB81B9C25FB907C50F
DBC4B919AF9DCFE7C822301F9D4C749799963EFAB9552ABC4F14ADD19C613A86
9CE5E24D3E2BB020C5A23E03EBEAA640CF23D89D1C2F0FFABD28C6CE183F72C2
571F46E81CE317A0B867554FC413BE1564A034FF2F3B60508154B08981B62A2E
9974E92BEE4F61DE81273E2CC87AFC1A42FB6DD5741F1BE6745094B9435B01B7
D7D3549F4E4904936349EF09D6DF0A357C5E851BBB445740F74C2E11059F78AA
A572DB1F43BB2E14E2CE057911A593F67AD9F0942E0AEBE6BD8EDB3428EC9CCD
F6390F425E70E3CF7E3C280CB225006559C5F5DFCA812225420EBFF781E576BC
EAED3E72F921507EF1045791E92C82C679AFBD8583D3E7FC41F18C303C5F89FC
BE5E4F9536AAE04E4ACD3CC38EF1BA84AF96EA893A32176F02920ECB794A9D4E
141C809876243F8579FA9AE5440457BED544B59C4EB0008F02E67D80FAEC159C
1F0467D5C8BF6640E262A533A0F30C34C9C88AAE9928BEE03969B76512ADBD46
BB138342EE44ACB6FEB175D9D81C3B14FA0AA982C24F6A173C2A2B422F6A584F
01A413029073211D0147F7160B870FACCEC7FCF97DD110DFE0254D9EA2597D3D
EF5E528C32A8E4FC08ED1A7A70F4AC1973F11346517936E62D7B6696AB147C6C
20D41E1F75EFACF92E77D1880741555F4BB296AF00C56ABB764F600236FC1A60
C0B01D34522194E1E85B98B374A992B66564BEAE4392E946DB01774D6993EC53
1161D21517AD6BFDC2CB912E7C6A4E566B77A5ED94DF78B63CA0057ACEFC16C2
0CF50D28EE4DB09B3F81AC692FD1FA9CCA1DD68E90B7126F554173809BB6BF38
5F78FF50E3CABC9D5C5CC791A16ED86E07D8E4E5FCF125AECFAEACE40F6366D1
D85DEE9346631D56B8A941CB12A28198C882146DDB43B2D56C0987B2231C9229
D2B290C94196F8F238999EDA933AFE030CBE3046712F49A90D24408B59DEF866
03594CB5CF73AAEB95127A41DDBCE71897A3940F13D90EC970420D42C7DB7746
83690AAC4098DD10BBFC930EBE73C08DAC4AC957BCC78C196AD7528B03B3FED9
6FEBD6C918785CC53BA43BCF286DB5F611329AEC61D4D71A1679645CB0B74086
9A31C6FF28BBECAB96B186CBC95DE81C259ACE86DFDFA05D4AFDBE1389C32970
EFD3CA629B442D05F591C85EB30ABE88C4EE7B845428C4EE5874648CE109772E
597F1478560C1101A455B9E8572D3CB08E14692BE26A2C419159F97202627E64
503E0E89C031EDD638DEA8ACAFBD8A1AD7EF8155AD31F8C9DB2DC0178FA00F9D
22C4B9A2126A5A7FE995BD8EEA88CA67465F785CA3C2CED48BD1183D4E7594AB
2FDF23E8C684DB0A8031B6942275061CE02228A90A33F56212712807270BAA78
1686C84BA952F087BB016418884A8FBD10510511320A14BFF0126D6C9AAE62A9
3A51996F774F7D1EE2B8BADEDCBD7E9C23E37D77B69C6DAF7610FBEF3FCCCCD3
E49376CD908547BAB0BFFF075501B420CB6F40C13D12030001B96FEA8ACDB545
DAE389584FB9CD8956E128DC5789C68C0BEA2C788F96964347A6FC7CBF1F7EB8
DB70BF5CFC1E5015999EDE0E6269C4DB5732B83BC88F83C0DE541492A0205C9B
5C15821992D2D503F6B895AE2FB7F49B434B43387B3B0CB1DE874950282F423A
7B3C6B4F3F6A5FB0234F8AEEFB912515BE156783B1B99B5E62B02960EB293028
D46D7608AE1B6596BBB734596379A991D3A327DF01947E3B59FC3FF5D1F33A51
2CEA2DF414713706B9BB08CB56DCBD3C97FC1F2C46195D47D19290FD066972ED
A9C5B3B9DDFB2E7A7E138F14D04D4D323611CDC5CA9D2274C77F428DC1388B72
B1D89C0984CCF1F8B7BFB0B7DD7106CAEFBA046F719BA1DB0A4C92C78496D05F
A9A5249CCBC980D662CBFAB1B3CD3878AD3E2579C806E138CDC168E7C2D50190
891D3DD0F239D622EEF68CDD5EA17218B58A5475CD37D5B70D27E73B8CFA327C
B9B718D9ACF4139CCC60A0C5EEECCE240A8B612FECE13DE6DA2C81CD3DD2BED1
23BEC0F422D1207F4E7E705C928BEB455E159C1CAFB4CC2F29D28D728A32BB31
2477EF610C8E849BDF00ACA533E311A38BB8FBCDEEE2DD064CE3F72564493CDE
8D713095CB0B72426DA2B67B323E7EADA32FDA205B80A6BB70E20EF24D765AA7
F123B0747E0B89DBE65B4625D8AD8A230C54298B46427A042EC267DAECA78111
4ABA2A8FD56C57613361C5F050A98EE85EBD309672338FA7E25B2A7220E516B2
F18A8485BB3044848E4F2A3425D845E3D4C044C4A1F4B2278404AF67A2C444AF
773B60586241BD16E40BDC4CBB7202984E274A832053C4823651BE793DAD78AB
066284BFAE116A7601D740C0686E3F7333C567DBDA22D8FC02FB9C0CFBC83F2F
BEDA7F41042F88CE49AB158134E594C52A4C14BAAFDE2FE9216A1E2473D6F81D
76DECBA53B5D87AF074213C19414122AFA7989ECDAE5E1EF80ACEF076D49C3C9
E94A9D400E42B9CDE5DCF5840C3E5496FC0673BD8B0154931BDA18C43B965183
FA366AC90E0D5B99B34950EE26518661DE5E8CBA8E1014E192EDBFE3DF69B3BD
FEDAF00198549D891312B323B9733F17D8022E9235DB6F5EB23E53AB0B83FE20
0F0B3BD1AFB1C6B2B61699DED055E7EE03EC9C7D3FA1C430E7C870FB6FB680CA
CA351F0923F6826977F68B1EB1F6119DD7481950FD3A67613206D76CD5691CCE
B00F4951F0D403DA0A760329FDE8BAB39D5F28138464BB32A2095D9BDC75A171
B098BE112E3B4E300F300E894A795A2EC4BF3BFB416583350BB9F9F0533868C0
8AF167B62924CEF24FDCCF75C1B346DA6FB24B21C8FB445B77FD38ADF1D15D6A
0C6BC49D21C997F65B7F942AC9CD9E9AD7C99F3FF891A248536FAFD32E58EDD5
65939A280FC8375CD5DA9C414981ED52D7073E0244627D9016E6F0553D362499
C97DC4B870D9B0AAE45F68DC47ECE8FFEA2A97CEDCA21E4F24E8C7D6409AFCD1
112FCF06BA8D7A5E915F2E0792E31FC571843887A3B8D2F32E13237FA905DE10
3EE92CCEF19B157076F465C5800AA7ACBB9E8E78509693D4A0806B71555A9630
2C9780C6476687E50173EAA06DF4240DCB4D3AF4EA805C258B66939AB4EB5F66
32AC417F8F458E03FC28673C66E2359723D704D46DCA282FBD9035CFC5DC2BC3
80B63EB48574E99DD55DABA9093C013A181F3F71FDF1CD7A0806027684F951B3
01D156582BD64ECADE576F41B7E770BF087F087E1AC72019C1F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /quotedbl put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 50 /two put
dup 56 /eight put
dup 98 /b put
dup 101 /e put
dup 112 /p put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB2870285EF1B979F52C0929C9CEE82C6
AB380B983A7CFD19B9DB654E86C834FDFBAE394BB7658B2584E069121F3565ED
ED9646935341BD381B4C4E30B7E79577BC07041B903BF6267C6283C7C60A1D9E
7E9F91AABED187C6D5BB3659B7E9A7E00AEF1C2E77ED22D3BE479644CBE0FF57
D58290F8828E75DEDEE759A2BBCAC7725FC4466732E548346DAB2D48777BA201
37CB99E97048161FDD3D79BB1648BD39E1555A3DF8D3666728FD0CDF7BF8C6BA
FEFADFB285A85DDA5A08A8F7E99982084F1533B65ACE0E766EED2BED5D5C4A91
CCC4E24C50984C346A441E0D4C2687307061E7A19A3AF4137889983657F78257
CE77F3405222BA17142CADA9701D80C7C70A0E50B4D1E466399179E939E8E50F
7BE4118ECC2CC40F691AE9748D27011F78FE6D542317CCB82B906D58ABEC0C14
85BDF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199EC196B6EA657FB1500B5
1C672DDD9181CFAC6D5546FA3A44BF7C85D411526108BE7B72351E48E30F6EDA
69B71A4F82117B33ADAD9AA04C4B6A9E56344507DFC06F8B148DCA86642048F2
BB4DCFF0E1BF468D27DEE32409658445A73832470314C49EE7D7E13ADCF5A1BE
5B74C96A7C7E77FBFB92183A182F9A56C4A9F4086006E6F51EF111C1F3EDFD1E
E09953F10EFF5F6CDA9410E404F652EBB6A8AE4DF924A93308654F1AEE0B9E9F
81DCE423ED67D8077EC4429E9F6FE39D6CC4DB91FD3DDBCE4060684BF01E1B62
43EB49BC46825B83A4BEBE48722C05644840865AE2A6D6ED89EB2816F6F37C87
3C11E9D40A2414485EE51C916E20BAD2C45E54E14CC6026A6F68F5F70F441ED1
A5D7C020A76E6A90433D320247B1194A5775D3BE938814FFD31B7936113CB574
30AF88A3F8513251E4933B6C43E766AF831C01CD20D5BE269BD57FDFB4019127
0EE3BAE5578E6B8C01908F281BE83668D9715871C53A42F1F22D7BE0840C35FF
2A964A6D5ABBACCE69775DA6C178111D5BC2A9EC89E2F19716811BA35FEA5AF6
530FEB22A64441FF6949A8AE1753283BF2E9B0A86139AEFE75D29464F7A66AC0
787218F676D60FD5560B7E80C6B9418C1094CBAB96EE405DCF58E3A569DF0709
2223D9BBF6760D67B53706A450EF53FBB966763DE87DC6FFE245B4D5889C9730
D6ACFB73B7ECF503EA4B2E83FCFC1E029E64293585DCC8F91CC8B8E94D2D8BE3
8B81A7E225278BDC2BF0038E66D2C9ECACBB3BA33A16AE5CADEF307DF903CED6
F07794B1D853251462B4D85EF2022EA1DB12DE17BED15E6180B4FD4920794D8C
DA03B7F86166C6E95B3D63FF2D022DAFAF5278CA80CADCB0655FAF3BBA111815
56B22414DDD6C9781AA352F91809FF91243F18F9EE020A5F6C02176DF5BF47F9
885E41864E311EA0F30D2DFC8DEE83F6A664BC94A8903EF51E091BEACB8ED266
CB65288944A535129A8BD64E64461E89F93992523229A14E0D9027A9E6795A38
6B4E3D270AC8576B6C9D4BA8FFB87502BCB11D3BBDD80706727CF0F54A4F2F58
7159ECC05F9FE7EFFADE688E89DD917FF8BC3F2B9A920ACF46814FE0653D003F
4AF77ACD1B3110DFE711E9880E0979F606DA8804A0A299086D15E11748BC458E
CB2FFB5421B6DE423A1EF22B2D0A83C48263F887FD33B356010BE1C4198E61EF
35377E26C7418C9109DED70C2177BCDA74BFADE0E3863F1193839C6B39CEAFB6
FFE914CE6F54A5A6CAC1DCE1FD8B15622AC1F6C8A56E709F46EDD935018D616E
4B6C65760218604DA7671DB1A7B638AD6B9A54234FE345E1F0CE798DC546A503
5FF0FE37AF76EE986ECC5B669132039391A0ED0E78463B73858600C7D9DC5446
94E25F259B039558DA317E8FB5E68B9516C4C99F5DF780BEAD3AB69689DD70D0
2A522C41BCC160FB1D79C130216C2D17C277A511FD78EB8937F1B4CB61B37C32
C06E22B1C7070764342165F8846C74E6FD49A392C3C46C5FC40BB41009256594
C1FB18CC4B968D702F945C0F152845455F6A91382174F0109E61B780DDCB7B8A
63E3BF7021210D1E4FB511A37227B8236085547A8B0AC516FB54BF0708D97515
CB6CF112C2A89D2D44816E907412B203498A3906733A92966C2F11E260A55246
56A9A151FA482F221D218FE10A5CD04F1526CCE72033B37DC84932ECF39E2A1A
3CBE12D3C8920FE4FFA7E954C82C369E282622FA6C76F04451E1282A2432E88F
F45D68C8AB6FB3AD6AC55575E66721F58FC39D634E3C670866B4559655442B7A
3C1BCA84112F5D3A5FDFDEA2FF7A3AC7E84A84BCB670611520F82B54B156921A
AACB9474F3E847DF66512D014D5C7ED296C3441C951FDE250B9B5A29475E6D8C
7941A079B1FD89BA0DF0E05FB4FABF6741F1C32CB8F4DA28ECF71D39D7A2B7E7
B9B446FE14AAB91AD12944821D963DC56A32A8B260554D545AB2F06F854F3246
0B26A90CD6D4F66F1727E3D082A572EFB5EEA80AC283D8C4D0F00155DD92644F
A8E1A12B5408DCE57F1872427DBC7C1208FD5C98BBE16C2686159B8778D82378
D81F86655E7B7AA9F2B0473C71826046189BD0022AD899DA5D7E7B1EDEC3E898
96156F288EFF46BE6E307C7D3646EFE629E0EC5A2036AC9C934502E1C1AE8FA2
D2308BE53D441AEB7F5D1598A43847A8049A3BE6202E897776951C620A241376
E7B99C0EF3496BBA673C8DABF8321B63E47A053F26474BB1986348122999994B
661E36BFC2F15C34A8A4DF74A8EEAA9D0BF47B5376DC8BE1C3D93A007583BA34
EB94E4D106E61345AE24A3260F314E476EBC22EEE953959E571BC21FD7024A94
5D15EA994F99AFE72D80B73F568DE3A81E4EFB739BD50668DFFFEF6E00FB8607
89F37CC1BE4B73C2DCFDB57DB52114B501421EABF74D61DE43CD359963E69540
24CAEB673BD8446B8E447C8D39E34503FF5D3B59047C2DD0AF2AC554620941E4
B3E380D288565525B14439ACCB9107035CAFF4A2F44B73E690F29022BBBC4111
BEF413580F75B4AD0772BC923F73CFA033891B3CB14B119B850D2EF119506DF4
CFE0826EFC7E1FD6EFAF853B0B8FCAB50E257E47D3ED8F801D65C1D4E25E2702
6A60F23F275BF8752E1D0536CB38285F6474BFA81E4164F827F3594CE26F6411
B3A853DEE1EE8F9661E1F35599E7759E44F7D1BEB132F8F784CFE5C19A19B18E
23A3936DB32B49E990364918E73DA194857D69A4EEA81163539C3BFA3FAF3780
D45E4C1495CDE373981032D3AB2039B118A2F8510865216E465D31C35E6C18B0
867DA2ACFA39066948F2AEF0BDEC2BCEFCF1FD61491F9927110F84AC53A86313
113175CA6D576E27C2FFED914371ACBCAAE240194B2A0AFA9F8EDBCB9837D44F
8071FF3EB2B42BA2CCFF8613AE5EE584BC8357FFA6641D5710A65E8FC37E1970
011F32AB15E26AD2BAC862089F194564CBB38D4C895235563BB95BE714CE1804
3E7C5D0C9EE08694EA5A3873CEC6FBA632534DDFB746CA5578A6885042DB052A
B98462CEEC2E6F946EF1D2018F0D913382E0AAEE9F349D2E674CE9547D7615BB
25E49EB0A776BD293F754825072D86B14C1A0D64A7ADC74C89BA15C30268F2FE
2985C0B8301CF4FB5BFE0915114A8F6B5ECC356BE97624F9B0969E17C66A6068
3C37CDDDA45315F2A8556DBDA2C6FDC0C320CB04E8DFBE67D265132FAE459996
2A661B0B4AA3606DB190A1128243FE17FE24FF3A3E927C16E0B81106024C129E
5A69D861A876C88A63F6D85CDB4FC01112111636349EBC164771665269A22976
C7B784CDF4D6FA39367F56402BCED4A9302D3CD58263738977214BAF813CBBCE
FC22B07807729B3543E3592283C67797B4184C80420463877564508FFDE40D54
266F94300A53EB75336B196E47F1CBF558D8DD7EBA507FB217EF70A3F9F9A10C
039DDA0DD3D0361CE924EFDC31ECD763299C725816C53B600F688394C5550D03
A1D07F75B471E28772974E8E895FCF9A594A6C32E706D254514B553260A363DB
4713CA2635AE3421349C49878EF05E8502B9C61B5C63EF089931A2B56C04E90C
B804754E20D67DA45DA4680DCC881BD7A5AF73DC0C3072B21A941B53D62BB5F1
45A635AAA44742CEC676F35F86FA6F02E54E3999E3A600E5A2C6B8F1A77C3195
E8B49E31283A7824F8C4F829D198098B8E98A49F45E4D60AE86AA5C5B4D2DFFE
7217AC70D8D9D025D82B2C2B76BF0D588FE377CAE15F0F7883C204258AD254FB
420F96036A4484DB6F3A3A017142894772E1143EFCD88A66B8BD2C902D04B91F
230A430C31BA7122C5555F2C995D24BEB13CFF4F3DF347BB06956A55F73F2CBB
22228A1AC4CA438B457A973C962FCE4C3D107688B6E70155E1AC6BEB03B2E535
DDF4228FA3837D90EE8344ABC09F95820C94CABB9B8065B7D73E7E36312DD790
96906C9A6A4274585138169B6D9D94376A81720D8EB7FA30BEBA572FF34EA9F9
4DA12FEE81CA8F9C0F5AD6855B6DE6D7B43B0785D7D793263ED8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.0: CMR5 003.002
%%Title: CMR5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR5 known{/CMR5 findfont dup/UniqueID known{dup
/UniqueID get 5000788 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR5 def
/FontBBox {-10 -250 1304 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR5.) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 51 /three put
dup 65 /A put
dup 67 /C put
dup 76 /L put
dup 77 /M put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE26BF1F487876AD1
16184ABCA7446A2352AB37C36E9C9BB67CEE105C612D36566FB459D6ACFB1DC3
7A59448A06EBA21F8824266BDD0ACF9E356251A897A920C39F1AB236EE06C039
8C4C0AE55FCED464E19AFAF548D454FCF73F6087102630AEA03E622AF2596870
1353925801642BBDC11F09963F4ADF037671B73D48CD9C209DB4D5BE7F4CB381
94887E8365D25C45D1F87EFFAE360104ABD3235E4D2F4BA163408448E814D49A
3E7C171B8F1275D49937C3255326069007B302844EBF2BC1990DDFF1A34C2770
A262ACCE874DA1E0002188D6A713C79D5E9226178EED27D6F4E4DC24ED2669B2
3873F42A48E5C1365AAFC83FAD8B849E5D7E52BFBB01B281005A9EBEB4EA2F35
B691489305BCFE5516DEFBA092F66ABCA2D739A9277AC69F74F786045E63B0F8
66D545B12B0581AEB579D5E1E2A412DB8F66276E05F131EC3B9F543E11F40FBA
8CC47071DB04A5D38A707C9F825527521CA1FC412FB54DBD72E912BA4EC8F747
306A65040671237C8FE84AB6D6157D96EDE13B3A8FBF7140F1A9DA55B666953B
C7FA638353F278D07066AB8DDF0DFFC832F7025DF1AF9F894D52E9FA95EBBEF5
9D6B97768FEC26E845B87C6ACF5395C75B894B5A1F50B248BA33943C5AD6CC2A
8D9AC65C08B3206E7F5E5913CD0D54C9FF741A4D92B628F85E43F52082397891
66E6F922E0BFA2E45F0072217011D4B8EB40893F151E4E2E92ECE5862C467D4E
3833311B08340AE1C0C692095AFB739E9B9A4F56BFA0F0B2AB8455A7470C22C2
0C2EC285026195CB73EE2A713ABBDE4945AFEB92630BF852DD4845FB4C9A8C8A
0C8C971F29440B4A786108D0DA1AEFDBE03568B6B2F3953B4D07A5B7D6FF564F
6CC0D8C08CA459D556154A45133BD7AF70C7D8F474DE66E64FA112D776478A83
B282EA4E941CE2FD6D8F7B68D129CE0093AAF7C1D345C3D65BE74EE9391C9B89
2D4D31764F1BA81CB12CE46D15A6BF941C9F0EACB4A2DECC8F2F6B85FFF490D4
ED7BB6C7CDED10F03F68282B2ED20809F95840A904020C98299E17C46243D9EF
05B5B8173BB2E8CBAB3AA9B8207A9EFE6366C91A7674DBCD9FAF12A2EF4B5117
5687F3DF1244F5439ECD8AB0587F492E990DD7B516C664AFAB76CE71084FDD70
E7F5A38BD46926615659488D3548C5066C06E443016DD40275CFF3105573117E
369C8C34E48BEE832D93F0ADA7674FC6F5A64183DB2B70FF166E02E044B7063A
41D2F396A9158A26D3953F12982ACD1D7593F474DB98ECFD00EAF57FAAF17C7E
C1E4775B37FCBCD6DB1B5BC6209162E57E21A6AF427043562D9854B430A0BAED
20D31A9AC334C87875E53E0B956D33111955459DCD98D54E1BCC61BA58CDB41E
03009979C0A541FA9F69B55D3F3750515E5F268A7B55254B8A44CA732F2B9242
18F34C029665B31EB68331B0147607645983340D15E322E3D0532E6376D40FA2
1041F7988EB9F56D83946757786737D8BB4A996EA7933E79BE61B4EA1115AA4C
286B7AAFE80AB7C619329AD5FA772A6279FE85FA6B623138FAE1C6AE3FA45AB0
95D8020D2EE2979E8A87D7E7C5DA2E6B701FEB4923F401F892D83A4928807152
96CB664018AF24E829E582FA8B4F0E07387BAC53530AB3AADF74404EB2F311E6
C6A70F960FA962E52A30CCC6E15097F9B7BF011626DAD38EDF78745B60C0818B
34663683577D897B1B6AEB240F3A2AA29F1F1800FE0A5C205B35C6A6438259FF
CCEC942AD2D7C3CFE01F956B795C0349DD5380D0140D3BB54FD99EEE5171DAF5
4FA360A740589A1F8AB4FBC275CC06FF89A8350F4982F87E747501A74B7C81A0
0F40FBA9D2875022DC3D417FD623D89FB6A0C0F1B930ACC2117C6CE94AAE5844
0B5C9DAD579B7DDB73F2B26B05E1AAE30AF69937722E8360987AC0BDBE305B5B
DDBEF5A6C03BE1743C518E6B7B58A85AC961B8755BF37688E37DE0632BBE06E0
53FAFAFBE52EAF276365A0484A1A682C9B9486CDCFBFBC4F4A1D6BF71378F014
56DDF9B15A5AE0276827ACBD9AB04D685F52A62BD3DA33BDC2A262B756B58C26
4F3B552841B81CA60C951F400551166C72B8D357D8122685FE97D14AC22AB6FD
2EE4CC429D580AD7B8D12A9C601FEE5D25C98BCBCF96C87FCFBF28419BEEFFA8
7A4FC7B6E5FD377EBD5E743C3FDBB7554A1FB9663B648B15C4119CA952A8263B
278E5845AB929942E1A0FC4CC413F36134884EAF3704865C1478D6988880EB54
C5C5C1BDD7CB0548342B9C7B6F94DD6341C5744A9A3C4A866F620BB70575EABD
AAA42E3B6E23AA029080B299294AF2E9388520367E964A3A66A84628D75F1BEB
C7A58C92EF7335F30BD0A26D072A986635318E0473CE3CD5B4F1BBFF6E781938
EE4E3C11AC27A1BE0C3B55586A4565E4B967ED2EE4674121A46DA1C32C5D278A
44BEB43CCA246B730D337918AAA394728814C726DA4F9C40AC6EE877365976EE
A53276A818CF25E995CAA34039339C55DDDE74B3C11742786C1E9FA5C432EAC4
E184F35560EA31D687D005843B02F9252C2A16F9E4C31C18D0D45B7D5F63D589
3C1FE3D33C912B9CD79DBCCF9FD8223FDC18D55762F0DB2DB241625B91DB17F6
206120D6300D317E82F3DDE6D2D0825547C08BE7E6FF8FB54D4DFEF2F4E475F7
F3838B4ADBE49F8C41409D85085DB5A030858AAEEA5AB9CD2D1172C8D0EE31AE
507D8048E123AEAB05979C872ADBA4833D36626166BBB2A2CEF2F3E641DB429C
AB15C97D7180E8E6AC0D871E20678516ABAA4D616B51C132F41E5661858B8C2C
ECEE4A65A2B0FF310DFB531B213196D2E2AB015963246F44E22E603E741BBFF0
16DBFC284906983A8C15278A36F5379F46C152304DADC8D90C313961E5F58180
EEEC5A15131E5C48AD27F80B77EB0370482D528735FBA3E6C0548BB66CC222F7
CCE87194F565B9EF7F32E656E6964501CE32462FFA6B87087EBAF45D454CFBA9
ACA808C4397F3852158F1C0AE44772253ABEF6D278F726A03A9CBC4330EC80D0
117F9131C5974445B81093C1D6E093C669CD285D1BFE864D53E5F140D40BE4CC
2689C42C50C4137DE564374B2130609785D8F519E0083DD24A44DE24A68E4071
4A2122AB8AB9649660D1C96DC58F37F88623528078BFDA3BA3085D527ED4CAF6
25BA663A61AEC4938CA78C49623FE0EED33DA2D08CC78F86A807E791BC9CFCFE
8FBFA55EC2259B64C31F6EBC45D2DF9B47EE09AA54011D40F55B6F12F49F2266
EDDB09D44C521EC9568CA7E62283C483A436417B65B4FCBC7EA32AC6EB4E7B30
080816F29F06D6B09E5506D3149C5D758BA85D820357D4955B0C1FFB383E10DA
4D61774D3B23C84A339C7348ECA6078080FF8B436B2261091DBBDC02583E366A
622ED9F95D2A85BDBA48DCE8BE45628A4ADFD5A48869800D9B54F530F43A8F53
F765F5D5C44A9399FC1B9CEFA343966118DD11CB102423D46BA0F096795AF0D1
BA33F089AD80A104DE7FDF8A6E7D935E6713963FE3C57CC673BCDD423DF3DCE0
C57EADCA2AE4DBB30166C2CF1F7113DF96A27D4BBB23ABECC5A4795F1290F4F5
5293B5870F892C9A32C776AAD06D78D0514F047373879CFC5AF9D624DCE5BC8F
7CEA5055064050AAB2F24A1C792B2609FFDADC6AB8D0F31A12403CF3436A1E1E
E24BA5F92587925C4D6795A3FB163245FBF054BB1B0FF01FD63DBF7C192D0F31
33A17E7764699B669A3ACCF7C36849EEDA395E7F55174023A79904A766F21D58
3DDB7B4C2808DE7FFB8717658084E70DBE046A13BBF1F9BB97B3AB527D68DE8E
924DE65486C3B883CD65A95901B0DE57821CB6C6AE37644E02F5CB0163617113
C91D2C649A0BA10736F3709BD504F22DA8831A09BD0B2D6790A498F2FBC2F642
7845796E606ECAB2356238AAF40323D71B236CBD1E3E43BD5443F304D52F3CC0
28DB5D33A732695AA09C0449C53C656704D820217AC035DF45F59AE445946481
E5BFBE5D4EC0A42B5662FBEB9FF6ECFFB5E8517312F56C91A01824E401E7203E
258C3BA073C1B2532B8312F5AE29E37F5EA71C52F171593B1370D4ED5D7341CD
567390ED5B75D612D5873BAC518587525A591164E8D36D2BD89F792BD9EE6ACE
99FB72B23CB2445F12B8A6A0876EE711166C9E34897D370174C17A2495D58B4D
3DA19DBB1AF2E09C72FA42AA3D8047D05AC4F6A27F3EBF32ADD2AD2FF26EAE05
A9AB34C9287EE00E8EC29C6603036D365AE08E00D1C7C410EA2551696954EC92
92080C8FA5C9E67698BD7B895C82ED29391E015F83E0DA145384E223319CBA74
19494F070649E03CE9FF905619C6CB40F562DA49C1EDD2CA221DD7D3DAFA8279
AB50DE1C059CB8D5C9FA8137DA711B9D30F236526AA389B2F79F3D5BA6ED9534
8852BF4448DC1B72E361A6A2B94CF865BC9C3401D995529E2A36DE755EE001FE
C67B184AE8241D08AF88D626BD2D8AA12EE791AC4253D4761A21917C7F2F5AEC
795CD14B33F59DD7080C7654DEFFFA669F50FB1AC8C0F2E60201673A78D03DFD
DE0CB142F0F616C4051772BDB837CB4CE87A0C8D61E0FC7F90517EA0F5F6B1B4
D57143CC0AE7CA9521C1536962867D6318DF1C9CE6476CEB9ADB21655D379B26
7A0EAEC2D28430C14D38764C493BA4C06EF4BE6780131F2FEC066C4866E0B258
51C48BEF77011A0B5763CB3D69A50BDD50C2D7EFBBF18BF42544B1AC196377FB
4826BACB3C16DB805D38C34F9E92AA9AB5F9A9B317D8BF32AF8A758017269914
DE3B748625D319E571187E1BFED9CCBE11ABC18C0C6123D24D2C7303DE998847
0F6F644748ED225135CC3B957EDE8567AF3EE47F5E942EA9293F7BF74260D1D5
A6F5E56705E12C8379DED158E66DF54349F0504EF584C6D05C44CDD8B720809E
3DC36FF60BF55FDF1CA8C968E68346CF43C568E0B3175CB7D55343DE21CF9730
C9DF918360036E4204CD024A67E764D3CC7677E5B229C1B909ECD1B9042134BB
DD8E47FDBF63F212D401A797EF60011F52EAAFB88E3E70E007BF19826E40FE4A
73B57D52FAB33A737B1341381EB2ED307E0B83B45D6911E04BE623DA82DD6BDB
2DA096827E6A498A8D503668E45926525789D43D1BD5B896B487C0CE04FC9DAA
CD9078D0C8A0639E27F0DCD82C552A7FABA42BFFEAD66CEBBD4D2E4B4A1B40A7
B6FD119D37FA26C14C29A70E2EDB3253A1AAAC2650009CA3B97B430B1A05F2C6
F2120C8981683D0976BC42FE98AB2D33014B983CE1E2F1E1AC4A524249C3CF13
4B36652F96FCBD3660ACFC2F9778B729AFE2CE1BCF473DC5A846FCC3ACBE455E
2C37853F5204085ABF3BEE50C28D99312A078CE2F6F4C1D2D3017F0E5BB5B614
102BE45CAF8108407EA970111B5A97CA8C7A64C70D52D28D2EDCD27879B1003A
6D168CD054E87C063744CDE097887CDF268D89180AF8BB4F170804AE5DA779B2
1941775FC32FA189038D6050EC0E400BBED364E0CCD8DA571E902DAD812988E2
4BF761F472EBEB411388FEB6F901777D090400F695D823C758882CC008D889E1
02678FF81B252C33C89E3B04157C889D4F0F86D432F0B3DD7811BCF01C2FC041
0D4B1DD9CB6F2433F9B34E7E8ED8BB1FA4F9F7CEB5354A8305C372C2EDEAFE5B
4AE23CEF34AC457961B15CEA084E31B3741CF2EC317DF484736EDD688737C380
6D868BDC02D1E63A52D21C8E7C1FD1BD8717612FC247293CC91E0EEA08D5F805
70217761CFCA0F9C13996DE0F045F28DB67378221722416236E4DC00194E9C45
A3839F4BB53E226919C2CD13A44E4F67334454DB7E133B2D308925CC2E275293
F81AFEC4DCF49230F22EFA19F48CAB7E09FA727CC2E11E5A5CCF57307506D5E7
6DD1D26BFD3DF97E73C2DC019B0A75B9D6386469ACF1A00A5AAB55F99BA1DE49
9883DC4FB0E8AD9421B105E050519976705F7BC889FB3B6C2921D2E198FEA294
E192DB3738EBEBF6485075728A0E16ABD53A25BB0795A21B65AFB6ABD7EAA3F7
1DAE1BA012651B4BA0ABE02F3CCCEB9E92979F17A3338A376C57A1F13E3C90C7
9DE8ADE421329A57369CCC2BA622840B79C0DF098EA42B810C596DE85F51EB9E
C8F6FAA598C73F359FD7CB1D337E3B083833389846A99C87885A7537D35772DC
A7EE51E8EEECF4E4F38AA04C3F4C447080386A41F1461599739D73C58CD02D65
0899177F7D707AE793B4C915C590AFD6E6810700BC0C3D14B67E03129A4215E4
953B88C7A9FF1AF4B6DA293E1DF2EF5667D408AD3F2DFDBA46EF95A1D8E1CA29
FBFA01A4B965D1101CA6C0C2BF4670E94776753FF52C2751AE41872EBE3DC66D
EE58BFD3BF8F543802C7614F64E7A9CC4474DAB5F4C59F8085FD523C91F0FCE2
0CAEE1B9613064F9C9CE9556C841563A43660E0E71EE761F0448C41589AD0312
958167F62FB166655800150F9E81A558949071F01BB11C9ACFB2ACA4F332D2AC
598AD5ABD3D5EB17AFA97456C0DE4D3D872750F548C357FF34919A3EDCFF9658
F3DBF53BB3D0A204E84702DF6FCF5022E753CA92323ABEDC81071ED44C306A7B
C10D15F905672783BFCDF28D97EE156E293046C09595159C735A266ADAACB887
7026C404951C27B88CC3EC1A6F15F016D55AE6B5DD739914DBD6861098977064
762AE2867697967117DD7E3CDFC24D046F1D83856D49224191CBAE95C2E7B9DA
4DC5ACB06B9F637312C1378941EF6B9D966E84DA69E66C43EDC0564D4A9B201E
5CCD830900AC4D4EEDBBA4AD14ACBADA20179AE138CF35D6F830801D7F9D1F3A
B48B6C2EA3B77E7EE42DC0A26C7FDA6EB64DF4136FC3AE0FADAB84CD30392E44
49DD3F7DFAB77AC2E3A8D16C9BC002AA17A9C1E9166A21648AE2AD7F9DB250DD
2F3F480844C93059796E89238B0DD470329C2AEC9F178B83D421063BCC18CC35
2C562DAE86EBE6529D19066FAB70C8E73B260C71924B0B3DD652AE37DC2ADCD7
A3E3E1936FDD259A3F32D669B6CD82D73436212D6CCBE436578139AE07BA8C5F
07A8D2158C8F21007FC0B96E2B3588466A6FAB4F70363E994AC4FDC2CAB3A478
9C98DE079DF219648A6219EC7040A8FA91BE9D9451BEA89906677866F50B6FAB
E8FC00E826B115CD65FAF738492A919CCB657186BA12260C2816C44A632285CC
25CA1D797DB0D901EECA675FFA1182AD6D48A8A96402D07A288CCC02F8A7CE0A
39084DA379C5FD08743060851BD02A3C9CC298FFA0AEAC5F5E1928C46A6EBB42
7D2AF9D32BD0117A8CD7B453C66FF39163092568B5A26F210900D466EA5CE01F
14BC1F57BB0D3186BEE9BA1A5648887CAC06E23057199A31781C4C37B1A07C32
B8AE8A40F5C481C8D2854AE5C2C3C746C4A2B48189A373A438F512642A55F2B2
3CCD2D5A06A1859B50C1C3352B1B5B56E652F00EE79060842A33A8CBD002E777
3CF6C051A6D5F02E35480569E9D00493C494F9FB977E665AAE4468E6DBBCC950
33876A21B75095CF391E09E814D7A03EAA19BA0D7A560610CC36EC3A9CA39CD1
4A359FBC14B07975379B68949C9FC2DFAF037C56C13802A7F66C809549EF2FC5
25EF3F517F06F90EEDFA6F8A3E5F1F3531A5415F3191B8FA7B0F28950A20A1E0
6E354480D09729E3A2D6796DB81825DADFA4580FDC7813B7989B18020C3AB1A2
87ECE2C5184537D170C7732BD57F016B69A3833636F8B33B0C666874FA18C55A
BDF37C050AFC19AAA54C49F6F0B59060E1CFE159231A026DBAEA293CAE360FD4
711614B2927EF0FF37522D515DAAC753002AA6E21FF62768651196F757C408B4
506841CABE171747E211861348BFA5BE91BA80228DBE62EDD18DAC476DE8F8EC
DB9445779179368F8A74776D9E86917785258CCBDB883B1F2DEA28E469E2FF07
E68F50C828BC2FBAE79527F0C7004DB4F935DCFD3C8933CBF9BF5DEEC32714C0
79D2B9FCF3DD9FEC9D48059909030721E8CC5D324475E5C9E739BEFBDA9EC9C8
F800F862999D20CD6BBE65B15F4E69BD5B50DB03798383BA83A95EF19C9900EA
C0A209FCCE9B53631462D21A0093D81FD0C2090DD396819535578D6D3C72CF1D
B32700293DC66A75CCA881EA2EA898194906C1EFA81790E3F834D160F1429912
43C7F4C0DAA30204CB7959E4B787626ED8F06AE4E0643B3BE98868B4DB98E86A
25738A5FE7D15DD44EFAA202DDCA55FFC99517FAF12042BDAD1131BD2B769569
1F43B7878C8EC5F99F4E4A3C202A378409259F71A1228B2328431608AF567921
90C52A33611B2268022BFC79A8164484E96D0C6B41E49BF7D33211FFF05520B1
29EBB141A0E93A815CD20D036DC56440E52C6A783537903372EE7EFE39BE1347
76FB5CBF96E23AD59CC972E03395FC8BA6F8554100FF4FDB07493B8E91C4287A
3ACA5C715E1F312E96DCFFD5EAF5B0CE0E81D6625B23760EF586F8815240124A
947A2FA86E0D3E78B44F0C558B616632A91CE7DE6C15BD67EEBD215847BA0B41
523C0EA5DADE501AC55BE69F058205A2BFD95566B8CF86C1DA325CECC6F058B4
BD1F3961ECB0829314955B99F9B79E741BB67688180573752A7AE26EEC9B9BB2
B8F37F364D5F6B11AB02576772F01A143F65E84A838F11D1062F00F11B0458AE
1A338BA7BB40E75A5C95309BA80A3D7B09ABA5A09812DB52BB3F40130818BB9B
B40BB3DB2E00B91C649D5F844178180F1362E6B260EF43C531CF17861C4A0274
634462E3E51D4D68C20AC2A9650B6C565270BDEA716A86A2C9622FB4D17D1AA5
6EEEC55F780F19A29897A6B87E683B98051A56717E55BFD675DA20523DCB88EE
39EA4C17B45A78C317A5A8D149463E7041599F877BAD721735C4A9B576E36278
C8D47CE30B0E9143F3265349EFE16E1137B63E7AC92AA8D5167DDDFA628E2278
F3878F37E3BDF68341C850E8BACDD942E049F42F0030657970B49A62A3E01822
D86EDE18748ECE09AAF3CBBDD4438D6E518E5C4C2A54ACE98DDCC5BAF24DD85A
51BBEB4BA40056269AAA0BDB0FE787F1B0089C6AB05239CA3DD696ECFD6D06B9
A5AF1DE58AFF9C17B0C46EC7AEB7A7B902FCE6047B4BF112923FB6DE73E669A5
61AD99B4342C3F665B538452AA6EE90E4C784B4EF1EADEB632CA20B970D66498
75B15233463FBBF65C55156F39D04172FA13454FA5772F3B4B745B7A4FC01D82
7C44F28D198BB7B8C2EEE56E5ABAC5246C8EDCE174908FC1184B42139FEEA327
D28C5C73FE0FA2CBA8B20ED2CF3FDCB3A9AA531189D620A7AC1B9DF176862B5B
48F8EDA9687ECB6CE58EAB385F8A22AB9A400B41A0342E54BE456024F61490E3
7E276826B26A5984B253BE3F7AA4FE3C973427720CC56D8D3CF8DC309603B43A
BDDB49A300B68D842E777599CFB73BA300BCA011C5FEBC3095A1A89DDD6258D8
1D5CF7E77D2083B99947955ADADCD49A5C2E39121601009A339653D27455221E
EB3227A6810D3DE24B42DA58FB399AAF8B2413125E19723103930AC64007B0CF
0BD8DE084765195D65C3CCC4058D1D8F7242A0CEDC650854FFFD97A72449E64D
451B84567DF44B2923C25F3A71E144B916EA32F85C9C8F49A3705431089059F3
E91D24AFA1B8421E1C7672ABB1281E817F09253EEE27FFA616D862340F805984
62A1E9898FCE70FD4E95EDB6D79B8C257522DB2A2CDF418A3695659B3CD6F270
5E6B26F80EEE7D58DC18DEDAC4EB6860A592BD0FF7E0542DFB192CD4ABED9F19
EF4A1F69B3B9D1EA4CF80C77A936CCF741B2F53CF89C3D80579FE0925BE6F4B3
AFC4D877325014BBB6F71C79C0046FF69AA34294034F308272B0EFED5C795328
6376E2C7AD42637FD09585B12339FABABE20CE7642CCE52DE1B347AB0ABADF9A
67C109AD090ECBAF5BAFEA4969CE3ED93D1B39CC297E79F150D35374BDAA80E2
1FC32E9CF1599E25A83CBF0D381AB7486336D991DB3DB90FE1EC56E6350A3F94
F7AB49C0F3A3D8902BE1EAB37D250051FBFFE0B9F9641D45D3B7F9ED205962F5
FCE27D10FDDD6014529E66B0CD91EE5B171E6C21DB1C92ADD8868838D35A63EA
61061B76BABB9565757CC76F690850BD635DC2BA9D5F2F1CE56ACC645A127F5B
BC3B9D003460A8C5B40D59645549FF8B34477EE7E69F3FCF2D6A8D438730DC34
949D34E11A2F70DC2ECA30D3AEC221E40B3E354A8F91DF442C43A9B80216F0D5
7C6852951E64D1CA0F959916474E6C186E2D8BF039EC653144D8F30BDCFA5A05
09BA4A60B286912B04D4691862928F63478C5FDF8AD46B630A31CEFD32842113
59D1652CD8A8880FF7A364DB202AFFCCAA8D221FB2E4CBB140F8F84EA244B40F
EFC4BE50BDA67D3D2C7F2EB9FD9B17A0186E1C1F1DB3FD000E8339045A256647
557EFBC166E9384CF3BDDA89C52FF939F6975DF12DC55377B7D97ED7D16786FC
2DE0C8A0C8A6B604EE7E6B68ACD03A3F6BA67F577B2DCCDD36C4954EBDB4655F
1E3FA621FBFE8385F03EE6621CCEA2357875940C359F69835461B218DE9134D6
F8637F00554117D2C7B23A1A79DB98B9D712BC263603C30C1F333480CC4B015B
EAB8D0A23AFA828D4AA1FBAF363B8940D3E2EFA43824F3968A74FC326CCBD05D
8486D88A60AA5ED24FAD5D6A4ECC0906E6FBE2E2F015B0722AB3F362BCAD123C
FC735ED761FBB7AB43487FEF90B519CD7FC468337C110C79A287FDE04B06460B
2B724C7425243486C4165939B042210018E02A54FD1217D8FCAF43C376811174
DE9953A3A1CCB0899D5643F081B9E847A2D542D77EBCECC408E583D6197F551C
355AF01070C764FF7289C76B1634399915CEB143795E95164565FAA971606ADB
98767ABCDDBD94113FF93E9BE2F94BD0D8BA6C2B4B424B9CD43CAF0BE1E2B326
0EA62FFA5FFC4AC2105E3A1260A27BC1C49CFCAC1EEC68EE1CC76EA2C8011093
BC871BCF3E18EC7BA4DB02AF02FCF2FAE9B2CF2E1786B986201E0F3A054B4BC5
735C63521F1E90A5EED0AA43FB4BA2FF4E76B6F1F2F8AC5CCB452FBE35FF88B4
7DEE3DEAA2BE65C3E1BC72CF19A62241C8741158520F31B4B3B583D8E1FA488C
EE85E1903632538A3A83BC1DE39F28871EBD4227E184E5796905F2E4BEF1AEA0
F1C6C96610D8EF8931CC7BA4DA484344863CCD0B2568834BCF51FA24636AFBDC
0216771CFB23E16D560AE946C599AFD4F5BD79D17225610EEB0247AC8F98E148
258EAC6270FF4FCE5C67C8C31D20D6CFA5206B5032DEC684341EF45830A05FF6
B866B44F64D1351AA44144DBF7F269E201E9D9F6D879E63317F30A38F23545D9
9AB76D27EAA5E7C547BD0F306004597F22705E6708C330E0B2DE1B0CE6BC95ED
6366890C9312920EA04DE70DF83798B1071FF67ABF4CA2143C075287E52F03CE
1F13FAF878C43A23CFDD6936C1CDC614C9FAD335FD07035EFA1C45B417171AC4
EA46E0FA73157A7D2B53804DA37544561B0884FDEBC117E0D0F6A58F6791BA64
92636450624798AE8F5670DF9111402B2501929894B32228C7B90A625ADB8AA4
28A499BE1C68F49FA1FBB6A72B38DDBA42C69090C1263B09600CC25533176CC5
947D12797C73F7CFB60DE9B07338A1F05F49A2628171A2820119CC67ED51161B
4174E9B931DA5019ECD8FF19D41433CE1555B2F4CD225707EC77D97776B2A8AE
B38C5F587A2C951E6E50E04623982F0358264EB1D542E20A4AEE6E2DFE420358
23F26A8250E59E42368C0CD5DDDE3F272ACA7F15F54955D4D00207021C3989BC
111E3BD9B0416E6B8132F74C9AE3C703BD79A32AA80707190C3B0C5E6CEB722B
E3BDB4D7D9056F3A58280D1683434E4C150F533A208ECE4DD1414A472565A72E
096E9039CBCC244AB4595376D467B161F9BB6FB7A608AF3DD52A143EFA3B2141
5A762FE6F52F4C312E7A80AA80E1EE808753A9D2066C043C32AA37768B18F2CE
A394B62A5A08C80A434CD5E3863D5F7E3A20076CBE8DF5ABC31CD6A9F327AF23
2DA442E45205B6E139C59D997FC5269484FDD336C5B27D62E80A71B0B88C1101
6C9E63852A8CD044DCCA2D5549B77C97251B68CB13DDD955B0758CC813E0ED14
86A04D0E961F8488857A7FD5F05126203C00D51B3369B96B6D9CB7103EAB2B7E
AAAF41880ED8D867F632DAA2DF67917D1F4DB9ACB2125091841597712EF7AA2E
1252C124DDA638A829A6E48F72ACA5353068D175EC05B670B142DEA571F0A62F
81FD8AF1D30048A90B28A5F8161BB6045D10E23CBC006979877515452C4B261F
98B442C24AB7187E5E13CEBA6A11361B8EF23367FF351C37819668CDEF99220D
A4D80039285A0C7887B371537FD21BEE9BA7A62A5A6A73B74B97E8B9F0A0E733
00B41F97C4398519CD887A5AE7DE69EA254ED4371879455A51D7B6C82492E767
49A55AF5A23601DEC88F1CA4909CC747DE3D085A61EEDA7D135546B654CE4898
4AA3BD218F7C95E799590366E0DB67980115F74F535571E3FFC34A5E6268655C
1A1F34EF16101FC74D059DFD6302323855D639EAE1ABFD7342448D63466830E5
3B2EB20D63E62B4B499466CEF1995F3B4B00F3B6CAE7318F5E55E8D643E8CE7C
6414C12F17940F499D4CB072A048B7A7B17567A9FF81EBE2FC1FF3DED28CDD7C
6DCB62BCCF68092DF304195138207A2C6A280DFE72132DDB925479F94D4C656C
406A5C7F6645D3B06E62A2A7897E93C54AF78A65D14D7226CBFFB5D4FD9B78F8
583BF28CB2E6B965D91FF5EA31B6637076489F5941EE116C63234F956B216EE4
B3D958E16346F0E8ABF65C33BBCBBEE1BA0BCB13A8B9ED5DF098370F1E4E692C
94A1440341DFAB8EC71716B0BEA076B042212F8E4915F9A82480BCDCDAE5C363
7653261B1EB6D26EC0E656B8A6ECDF281DFF5587E31F3D45FEA06B63CA33C0E2
259F9EF8CD1E88A0C99B12D93571504C6DB2FEA4A7990CE6312DB54CC9E1E3B7
3CAD4AB10852EED932E46AEAA30B3FFF089BA687EE053F9FF8D07439F3306AB8
9BB34A8A5E8B6E99DE9C6DC2054D4ADEAE0AC47C5956C3EAD710BF01759EC1C6
6CE5A3EB8BC9F1E0941EF0F9A1C8F1EEB368F3B1662872215ACF283C2EA6B072
98FFFFF5A915BBA8B9F1B58FA00E06FFAD6ED849AEF7DC3E402666121B07AD77
75153B6ACB7D0F51039242DF0090EA4C044DBBFD8326248FB04666E24DE5FF5E
75E42E0D49A7F6E79505AECB038BF05F7964CF4CDAC4AAF74D482AB3685CEB8C
103DBCF08FA3C0867B8CDD31161B03197DEDCAA24AEC3B777A1A40B26B2065DB
964B6FA49EEFDB63B6498A9AA336639674AE86FD1331714DC5CCDAEEC7AB2152
2596C4D203C650985E199989F14A28BFF9F8AFBBE0DF8FC2C984BCE0CF98417B
F5752BFD406B6AA37815A7DC10C285A228A4D7DC37C92D4DBE24F42EB4390AF5
C99483993921B71093E5A4AD0CD4D03092B2BD84369A09048C3694D987F5C1F2
6DB138C27271ABBEA07B3F52E4EFF54F95F6BD61FDCEF078BC47E8CDDA004533
C2FB5FEEBBE4981167FDE8E651B5421BE5D8E7F1792F3E00508D44BD37BBD553
246EC23CBFB6FA339C61B74AF892A6CB4B8415EE0B59684339958A4269C84722
1E71BF3432DAB4BBCB0EF157D84E49C9A32A8BBDDFD4498DEC9A13DDC39C1F01
DBD410330FAE1B2F71359B3E4B6E64F09974ED6BE1DDF33428FC5977A50F192A
F5F2999B921E20501607EBB365753548B14CF115E2E7F9086E47B56F34A51F53
F1ED
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 26 /braceleftbigg put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F5B970958CA554D9DB879786C39AAC8139A032
6651A999D3927BB2A16D73BEA8CD512765A19BB5F5051B531D3194167C8E5991
02867B4505AD3DAFD71547A16A51FBC10F2F4B2C3DAD1D3AE6DC9F03A50FA821
8E20384B02F95E6C201A2CDCF05484140FBC2ECCA1AE462F25D4909EDDBB363E
02A3F8371C2BF08039ACDF2E9C8459ACA22D0D2AB0CBAE7101950CDE7EC3CA4B
FC88E6FDC453E86EB7B4875AF2FBDF842FAFB6BC4D8FF23579661DF4E803208E
0E86F63BE56865164DDA2CB018535E2BC0B78EA3E10C968BFD461948E9E9E476
F16C11A6C4894CAB1CE31F464A53619EF796CF35054FBC0E830FFDEC58618453
BD159444C19D0B58C240FFFE342BC910F82CEFCCD5B2B779C674E2FA569CCC29
69F9A8229B770486DF00ED802057AE1D06278E8FBC23E73CFCFA603807E26F42
2C673F9F78E1E064DC00D11206B544661807C2693B994A824A81D1161726AD04
D7D9C1F9135F77F6C644B11760151A65
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 57 /nine put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B9592241DD136479A65905FD0062C91DFF7349874BFEA5D9EA
2F610ADB9AE7757B2307A1BB9D6797D9F9C4844A59841C7C7682105E23A374BC
A91885E7410F56F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BA1077D7CC62FD
EA43428C6F79C332342E15F75B08A1ED360B3511F823E75AD49BA7AE63B19238
2AFE8FAC2715E2FDC895E95036D23127557837506A3B542B0E4651CE2B89C252
31EE8ADC26E2C04E8E30A9CA12F066CE01953BE7867171FF6C7E834742C36C3B
58E74E4B482CB85FD4D24DB03D753F260A585D552CDC9E1941446F2F5B45FF24
2DA4932B973139F328E7E92828B900BFD398B6F41DAA0D6861C66AA7F5E3299C
87A5925CE0E0F9E09AAE0792954A1F2C0AAA8288DEEFFE579E38A3CE8A943EB4
55322A87C1634074EBEC25F724DC1BCC1BC10458CA6C4395659B0DB6B612C151
557CC669D8DC37769E59A5AC6BF061C79FEE265DBB59520EB8FFEA273601D1E8
2984B8AE31AE343F37D03E2BF97DC48AFE50BB6138C7B9F9B5E28672A37BD8F5
8F8C98DC43DB22C6537028798198E2D3B0453ED72487267D653DD50F1BBBDA92
833A987A95FC1F275B90B581B4BB62B6863A4CFAE37F715EDF3EA5A33679FEB6
4847ABB4B3D170C275B9F1AC3156D731198DACE0B051674E85B758500AC9FBEE
ECC75EBBD85F8D62AAA328FB09C6526F853077AEF7EFBFC2B6A29D6D508B1E19
EAFA4C67EEE44045B9F15B9762B3DDF5CE5C18B23A5C2F73A1F6DF7F8679AB78
843AA41FD2A7DC02B45B729EB76C66A89F5F76E5C4A0C0563B1EC5E75D72EE35
A7F1FC89216B60D82F6F2B8DBE85E4FF4D63712C689E696F60B52AB622C2A4F9
37C380775EDB72638D3F81F61D8D74C76D813DDFFF35ABD9A502F2BC7FF65754
2A8660A5A53E0CDC2E8A95B6E33CA153EB711DC796D313C8183D707D3F0E3EE8
BA65E0FCE3F1C07F3D93F77056688B5496AE35A6BA0B59619DE786471561FE5B
721D4F7B490FB5485BF7B79D897C0828396AFE9CBBA7A1EB4EB59AFEED0A400F
F53C409C626FCC8D058DFBFE442372B08A3124CA8D553818DEAE44E957169199
1176F56B9574C4F00CACD6246FA6078355F2337BE81CF88EF1B4ABF118820254
263E3C10FCD1F1EC8FEFDCC983B13E5AC418B289D3EDBE86B80528191757BB77
E37700D66FDDFC890B35AFE4DE9670467B5A1E6D748E3A08396BA6796CDD7D5E
E5949236930A173A205C6C609E1FD66B020CDC063B34309B96F79A0BFF749427
D37193E3DB7533C31DA1E79BD5F165EDCCF3422C41B8C38A2A054B57FED28031
2DB2C88B25DB852A163DCEF9F111BE9D14349627DF855C026A73E52351C27281
5D47CD6A5B2ED1DC997146A22768AC82C7B98DA3406455638F8981AF7707EEC3
B3C5AE4807D2D2323CA0BA3959EC6B5D1B31527E274BD48632AC81F019E14E65
EAF7E3C26DFA63B537ED531EF73DC0F75F4A6EDA39C26603CAFAC6C3084F0265
7F8ED654548B36A9804CBF93832746E0F1F37E6D91D2B85CCCEE3A92904D1598
E83526C45D8BDE14235BD4EB20213459C0F6CD4324737ED9957FDF6BFF93B9FE
D0372D8DF63481255FB07C915411AFA06B3C3D0E4E3E15E5CF2FF021CF6AF459
6330893FBCDA8160C467A7EFCB0CA56ABC164CB4DC953DEFC223DE86F9DAC374
E9A17AB678698D2B6F11332AAE28B734AC1ACD31713A7D8FEA52AE1C01905E07
5CD64CD13839C4BAC14F33BF9787B1A2CEAE7453100566039B1F7DB5DFCF2450
270BB75F181704FC3ADA152A9B3BB861E5BD60E48CCFD9E1AC3B55F8ED2B9885
FE84047D1E67E93109D7E964569E95281FC5F9C1C84579534D13B1918647B4A2
39A092115929FFC632CCAC5A00DD256336B5AFDF415DC03A88674BDB9075A799
58BEED0281A71DCD2A916E130D62C09886C8B6C02653E7F628084536340BD854
D099CD6B77136D86FA4E508D98D85E005B5184BEF4457C0F340CD041568232CE
F707373F7E96B1912AA1476827F1E9FC48B2E76C492FFECA9C6D7640CB65304F
1136F27F1C40FEE5B24156E089F0AB90A9B6851005A5D77F7DB7635D35193F85
FD3BBB33BBF571B643BD5AF1F553A13C995AFF7FA5F4A1DD0C07378028A47A3F
1D81CBFF4BFC5D5EDA8C89278C917D54F896E995931F3308E1B3E63D55D6D375
51AA94D2913857E04A1F85CC3970AD5CD47E0A2AA0C046E47D04B0D18DC8E46C
2509776CD62B7CDC2FA3DAC5E0CAEB99341E7C828148A035BE307DA59807F305
5E549C9D716B4E624E6BEC91EFC81C0CFDA6DC220AA3AACB4C00F71373E32541
33A16B178C785DD340D0C35DE9D6A9BA38CE92B4532DBDC4574DA45DADB1D21A
195B84CDE121B7857024A8F1F838A8DE13C33790F8ACCED6A27BC700789B2843
134AA1B7F1DA7458B910374B36BEF895F5E8786F67F4497797C7F64E0AC1502A
A7D4E44BCF9DD35A724E71ED2DF3136DB7206313E2CEFFFCAC342F6B768B5F5E
1922C3F221D8262BE30354F24AAA820A94686E7DCC86A7D894486601A59B741B
E9DC0BEDFDDE119C74BD4753CA5F9384016D8888A992630D674AC5510E1ADF1B
070810B0403F9125CD2684CC91580AA177D061D4BC7087A29ED7EB56D456721A
D40208F5B75DD63913854ACCAF9732204FC8ABB0CB223F0F98066AA72E29B609
0679575C8A8AFBB96D6950D1C6ECFB9F43C1CBD24061D151C4C1AD8E27758D04
28D36CD9AE66F454584D311828C658833A51D433476E4E2807DC6F5E10D09C99
6517CB6DFE98511493159AC8B4017F1AE70D4AE67ED287B69B93767471FD6B0C
422407F904B10E80264BF3F85E7D625804BC25A9D87C65D63C14BBFBF82AB155
58AB504E26256C8D124A14FE75456D037748FC0EFA8A768F30F5FA85DDDC5510
7520EB967BB0968A4B741C196751EE6D3D5FBCE67CB39338E6C9D8495F4FA72D
9A2E8E5B46D136266D12E76BEF0AE3572CD8F5A54A3095AC31A90DCB51167BAB
1A97DBAB82FC948D75404C8619B288FF58BFDA1F10B8E1F4106909FE83307B57
1824EDE44577983E41703EC9BF2530DBBFC6CDE3D8143FC01301C71D9DC73A81
67AC2D16BCFD73E172D6A9AC43B2CAED1D3D8C8026638FA78C071A91D76A6073
134CA4FDBFBED0E0298A57C503BB09EDD96CE921B48F99272BD82F18D84D5C31
75121E08979032AB362D65C77F144AA4E6CF70D08EF317B58227A8CDB97A32ED
A7D5D44CC429D5F313FC7FE64E67997A4EF2E00ACF4E0720760452A579B26CBD
FF88A14A6CC1C904D24F6AE7E36CB9E690D7433ED58D4D06D0C6EDA40436B754
9E34125F20180C2E28A337DE7ACADCE04DEF34079508E7C4CB4FC34C1B828768
6E3D4DD46A090D418B4D9DDD260B538E9D9F1EA79E3022E025F8D51CFA8FDDE7
F586678EFAA14DCD17516D76F27A294EACFA5C74F509C9B79B5E169EB0AFC5EA
B96118D625F4B5F622FDD055BA4ED140E8A4AED6ECB5F7A5B17E9D7B865F5BD8
19059872D973458BDA9F31F188693D063A735C86CD53EF5CD13FCC125F364201
28AE4D00163842CD5F10FD3023DFAE184E8739FDFC9CB17C876CDF18F6C1F6A9
485CB81D3D1FCD4958F44038057CE3368C861317C88C29428664C5A95ECFB5A8
DFAE348D81C866EDC867E0231AE9A929E00A0A43C87FA17048AA374CA1EEE11A
21A5AE11420D7D063539C15FDC817DE8CDE44174A5BC1C9D00275D3FADE48FA1
B4374C729A41694349E01328A77335F5D450FB3F4DF8621FEB56C80DB2F0CCC8
30AD37EEACEAA7F6829CD64791ECE3A25538AB4E5EF0278DA95EC6DF8642E3F4
DFC5C9F9B6737E1EB0301B0CBC8905887C4B56A159D844A9914DF3E56D335825
40899C760AE710C2DAFB702873BABC12CB76A3C5542421E868AFA95DA3312091
58393A4DF5FA8F0DAC9ADCF5088D25225C4500CC16A869791B5D00003C7CF6F1
43E1FED1EAD03508C1E9C5C1C6F0851EA3BC463D6188F7D57BC21BB72072CCCB
B8360A4CE28326D81BC778A7A42511719F4BD8DE465BD447C8FD3F48ED64A64F
9819BEF2EA62526F4EA7AE7754840813CB8750075E6E7CD27FE657DD18065B5A
FC87079632F720DD9CB8C14A58DAB70E0ABCFCDFE4B4D2CA38CEC5C8786EBE1F
B6A019DE2B275166F2A31E6560949308C455C9AE508082C17BDED2B8F8AF3E78
13CE79DCFC316A7670DBE5220707DD6F04F94DAE1D24039EC6D63F1EC54EFFF3
0F9AA19ECD81A8247527618B34A123EF7350DE82A178D1A30148B73CC90558DC
A77D859792517356D2CA5AB80A2187D13BDEEDC9270E45ADF6B781A892CB8E1C
FBE3988829EF3BF65DD590EE0474DC4D52959B3FF7551E0F2B3688EA11489CC0
2A1D3274EF8BF7479C38373B97C124A5F120253EDD65FD2D1EAB12C6DAD2E959
C8830EA9EFF7461A731A11F4437870B75716F5BEE14202E34CEC934F99C14E77
BC7054F4BD61DF1F92C9FA4D7358B55F03BB7F592A7E901E015D11C3CD91786D
31008944DAC291B0DD3B8C849A816EB69C8E292617D1D99283751D3400DE42C9
7F1F726E840948D7DB9793C0E2ADE8F14440E85172F9B27E4F989FA723B9FAF9
EBA4E9B9A7B4265C1964D83955C22664B910691A5F18AB0AD6EE94FF42F787B3
8DD5578F9A76B1A9F1691910DB3C48DE5AB32C0A0259BD76A53FEEA2D04C7A14
367FB0B190A3A848B03AA8ADC607F0E4B11B1B3C178225B2E84C0D6CCCFDC596
BAE4A63338CAE7CE8A64B0587FE47527941F1806CE40D8E685CC8181D19A6A70
72A74B7AD3A4D0C8308BDC202367C37C6615448BF21072A1BFE01300D6167637
7F9FE3177757275EA78CC21950740878C22CF096597F4018424A3E2AE979E475
67FBD0BFC8245FE88C89F060B4107768DFF791E3D0600252999B96905AC37919
23B8D8C893029F49862E56A34AA32DE21FB86AC73BDC164C89BA686FDC2283FA
AB49AD53C1E216348AB87BDA39B8C0C01EDD7CD4479D3510389E21777258F5E9
042A414C81272E6C8FABCA39B0B97BA9608E6B64A4313623749326320AC6E320
94CF5CED13A86D1C3E1179CC3A52FC973733616AC0E915E6F7B17A6CE67D2B84
2029288785C9A4A3EA746C5AEB56308C23925030C7E63582E580FCA1D131A60D
83A12E760061CBD44D10D9396E954865D42A6A631BDCAB385B36E86302626E52
6CDEEBCD89A31B31AED85C534DE011FC9576D758317192E43A5D41CD29420DD9
B5FA11327963B7C0352320F65C2182C068C7968AD16ECCB19B57BB46B05D3D45
14C50720EC3657763F90A5799019D94A89DB5D5D41519FCA615B0F398B6E850A
0C9DDDF5C2468986B7CE198F35352F5833EED37165109B5A6019D1F199D6825B
690275E1A1D224045F74752801336CD246765B26C205DE1692D95D7455BD8C99
D5ED1D9668B65E407BE67D6C94F00ACBD90BC5D3F56AE9CB9AE91B92F38F5A0C
71E6CDF30D207152C97E37FA73E1500EB17B90BBE079BA2DD80D9952AB21ACB4
D3268F5020CD8F0ED5325D190ED111F08CA06603A5C5DEA56B6790ED257D077E
F250A962D6CDAD1BD46FC1A69FBC7B9774B6F7EB5CA6F8770D066C5816CDBF74
129B92CBFC5E6C90D4996EB76F46A68F41FDD43A8AAABFDDC990557AADAE820C
57375688D863985CB288833D3ACF0FEACBC40E7B49494D0C24777F537591D81A
6B20470EA66A64955A638CE97FBD3285F689A85B479D785D5C174F6D6F9F847E
FB5662F31361ECAEAF26FF6D1603201FB86CAD75F402EB3AAAC0A3BE8D3B2A42
158249999EE0C521E6B9F8908C74AEDA5AC3ABCC2DEC7D929012C69973F1C3D8
C25BA0C51811F0BE278CFD5A103C0CD4F881EE1ED0C8F8DC7CD61A0E69B67C34
45F22B15DC13468F8C7DB1384C901EB6236570E7EAA17220B9EB1EEBDAFA7798
049ADE8C30E68727283BC83DD0867302EEF27332744B51E7E3E155F08FCC4270
8D993E2760928312DC229C246E8F533EB8CADC7A56A1657D37D8D9A6252519AB
4869A982293003167AF0AA0024D30C0C69CF8642F07A82B3C3E2F0F9A8B25D63
712C407075404CDBBF5EE4EBB22327F04E63570668054FAC22D7938132F68B10
C259F99D28706119530954B67DE3839D85E7973AAAD4DE1F0F76A6A0CD412930
023969C435010A9F0F127A61F5887DF9EC972C651DDDFA582090CED4BDEA3978
BA6431270A21082AC1156979FADBE8E1EDB7774D6A1D8AF2524DC9E33DF4F04A
8F0F6D7F13283BD795F7840008795AC7E709D8C906E2E0A729C4B3C4BDF8995D
B5183CC100A2BB727336BC457B1CEB3D3A2836A13C1706DBD292CC369F64F5A2
30AB6F6095B1E5A4837A58235D939EE9290798A25DC2F39BFE921162D30BC74F
3E14C9239E2F5E1C4DD18A49FA2D467FAD80A3693F8047AD97A4E48D10BB1048
EAC290DABA7022EA5A0D3DD2171F8CCBFDDADDD6E5DFC608A39551E8D6904EB2
E397055FE54A490CCFCE4CB8C230B378C4C576C59B84BFBFCA06D0FD7CA0990C
51A77FD9E8942F9DE51D85068088830F1C489CA10664A3C74BC796485743CCE2
23D48A23F6371FF11C92F36752DE1B6AE4A9C76A24953E89F6F71E755C262A6B
4E109648742F183A7755971B049F90411497156E64D0BB3C9782292366992306
9714033B1250F3EC3AB876B6C93EA09B89804DD17F5EFE1919B673551C7A34FA
F9DAC41CA5DE1DF2A0283BBB5622210BCF2110C5CF3BB84867F794C8AC97AF85
5EAF7F9B469D56E1F1E75D12229EF851D818FCB6F797821C05DC6FECB0A56253
046BB6DBB2F0F5776D0DE23FC80FB3D28A9861CBF05368BFA1474DD135AA6254
916312B161E76BEFF0635E7DD6CB64BD58DF5DA6DA93FCD417D43FC5664EF907
F79EE675F941C6073AA9E15BFFCA4A645D2367E981886409A19521A2295C794E
51588314885C401809DB1B2480A214E4FBBBEA16E40B26E8F7FFD025079AD9C0
6C134B53B13D3EF7613D94FAD5B69F4FA641B1171A670C8C303FEEA3EBAE226E
0D5F95978A65D10D601551B653C75542CECD53B8A8BF3C87F48A2EDE6AD8CF3C
30117797F00FA8D8A36C55D1FF6C8C0F4272305AC010CB5576C136E14E64F8FE
B14FC0DACF156782913667B1F934B7D215D7AAF85B31D6CE5220A48723909351
F3C14FB3B91BBECA08E90635E4674F4713006EB8A5CE4B1035A3B5FFD87D0A30
661F1C1A73235CF79F2053111834CA5066BA8AA57E02E40E35DC701D99DD681E
0F8114C561E2123198B14A9518F128BE68DE8EAC4A48BA3220228F7CCDF98D87
EFD456FA5CC73BDBDC73BE5A04BE66872CDB152F637DCC26BDF20B4A7122A863
9193D8EB82B681BB7CB23ADE62961EA2094DE6BB1DFB5932E79727ACF46429A2
8D349DD526F6AAE5B4560EC93EC6F3D91BAB662ED5DEE0B5E5FEB3745728F74B
64EF18ABBDE37987AA1BFD0EF76BA7D4B9322ED2B70750D52F4DA5E8D16B0BD9
62181C99AA1D0D28C719C4AD73D8C45A182040ABD4EA1804EEF45D48E69B86FB
064FC281171C0544A77DBBCD18F6F1AEDD7D7EC7974A8A0EEC14C7EFF5DD8220
1956F38BCDA4C6F45E118EE2B180A1EED0B73EF62FF947F03C1C305B981DE29A
7F8F75FB342ECC6629E7D828C36AF71962EF8F6931B36AC645855195902855A3
C227662513D62187B82880E5E123A2A011B431F63629599B3052C186FB7840DE
D3D2C08052934BB0F45BC3AB16A53215E227874F6EF3AA00E8ED4D5FB3DBF967
F2FABC5F8603D87166B0DD6C86CE322EC6569B064DA9E370DDE8DC45D7D3F78B
120010332BA75C24A17DE315C7BD7BA102D5549F3085E1A7939EFF1CD21B7C96
03FDC0AE6B840D3A38EFAA7280FA8EA8AD2C07FF009FEBEC8D9E49D888E08062
169B9B930FEAFF9CA4778D9A95A5EB30165EEB8E43A9E90E54D73C494235CFD4
E44F7B057E7B111F88C699DEB93857343DD4516325120D3346A69EC7640387FA
4DEF2A837B9C1F5FDC63D80FF5680BD31CC64F03E8E69578D1A4DBB3CFF13971
A92CF946C4D93525036477221DEEC63400FF4FBEDE0DA2913BCE8BDEDA59838F
F097C448DE0792CEC4C8B19DD69874EC3BCB0E96B31C3CE4C4F6B1D1F60F66D3
CA015B4CDCC5BD6EC7F7FD578F2EC6DDF320871C1DD429DBE9A3BFD9691686B5
C9A20151761C03171BF79281BB80ED3BC8D9414EB2F45692C825792664717C89
8A9511D022EF964AF573309B769C51929A35F9F97D66393BFBE27C28A334E13D
A93BF77654F10E368969578E4AD1605EC6964D4583291522A95471AC2E2E003F
F875CA98E76CA87D2DD0FA6EDEF54FFF46565F4314CF8E448B782DF11EA2AAFE
804B12F0176FB12E46D2F7BF945125B3C9A7277D2AD1FB889F3A3381983C494F
4E8FB1E5D38E5B4CFCBBB1D3ECA0326F52474CF5EBCD57759DAA185DDA3152F1
BD8915B5E1AC612B96A4FD4DD4C23F80F547FA1E7842D1AD795394D311284F58
2A1C43524A76C6D3700969CB212E5904AE1082B4D8C8D083620EEC01CAE480AE
F0DBEB6F1C268D4783298666C2834CEB2DA2EDA25B0DA63717FF25B0E45A8A6D
F19085211F83EBD37F1AF29CE79FC4EAD7D6D361CFE8533E5874D8933C6BFA89
CEC7A03047E3F6A51806DE7DF868E77AF76CE482195676B4D858463D146AC7F8
0BEF57F9D16DBD57528B640D452DFDF4B7BFF72FCE525E802884320CFBE230C8
5159CD7B97E5ECD2DC4853BF1215759CFC339AA023811489F7FE83C9039D71A5
AD02821A793E0DD9AEA137B369A524FD07D9CC5DE23598AF78B1615A2B971F5B
DB5DD6F22118414F03ADC2D36E8401AEB890CF19E38A5EE6C1D1F312CD893766
852DDDBFABAAA255B0465494489086DDD39E2A2362181C03A306DE371DDA971A
76FA6BF6AE79E1B634A82D0F2B847DF3D7F2E2DE1EE52E3A6173AD28863FD2E4
AA888EF298897954298CB022D934B975EE9DFEE38775DA39AC69C18EDF6AE453
7F801883438C27E429C48A97CB61B75E35C57392FBE9ECEAE3F81CFC5EB7E068
1575EB923451E71D5B414EAB70FA98F6CCB9CA7E63234CBDD7CC3FF915DB9D75
788179EA4780D9B43A2E722130F3AD8162E7EDE66B3C365806101A52B84DA69B
1F7B8DE6808BB137F6604FE512F0184628A8290FB771AFA2CE3D5166F144342C
F2224F694087FEEF5CBE55EA2007F815FA8C4579BE41C19884EF952C35B374D7
75AECB7FF1E1DEB9B4E8F1D604CE7BA3CCC129DBF402ED9E3F0B241E1B42B6FC
73EE663029C821C8D82AB4EECBF6FBE5E047487C2A414CFDCF726FBFB053B951
1FC53424B70D539A38E3F63671D1BC06DB3C9EA108725E9419E2FC9AC85D0DED
14FC6EB64D8C7E67FC0CAF32F5BD00B21B2B3426C430CF2FD0EA2DC5BED0F165
5A65E98E6FC3B6A1EE2E9AEC1EEBE3B1513A2C71F469930F29B22E0AD33AD116
F5848874B4320D0FF04460709F41F7FD7C881B5BAC77DFCA4E6051842E2AE0BD
472184D29C46BB141271E11E0093D50A7C1599E62D4FA9CF7C2D880A4E8D8E51
64B456C10FF412B7AD4F46895479FA64864830ACD199897FD3CF991404086E77
9B0E2208F44FCE86BAF58A8BE136913B4262F61B6AFD9A145C7CE68107DEA444
16238B1C623AEF7986A4C9E237CA0202285775BA1445F9825CEA9C49F76347ED
BCC9ACB6D02B2079BC5109E4F914CFA256624E64FE9762CDBDB6053150195E66
961E9C0C6F6D09749CF3AF76A1F343BB3E10612D5FE506997CC6859A34796972
1DE8743FF57B3CF280155C4433C189197145A81474A3F7E2C9197321B8F63E61
692C9C807E3A300D3C2C872F6098DC14A7254E692690AA4B4C072EA2FFED341A
F0415E4753CCE4855219AB3B7C45A9EAA232936195F47C6743A817410E5AE3C5
E4D23B13EDCDACD7E2C3CB1B7395A15C8A5152950568BB1421E75C876CC12FC6
8CC97FAD356E02CC50AB0AE1142ECCEAB69B736AC995D04C830FD933D20F4771
8392D4509A2F25621BEF52E1871E603415F3136F400950D943BDD5685F48B20D
3A80591438443C0482196D1C61904409D80161282BC0FCE698E059E81A871172
0B832A90157F46368967DDC847DBF9CA935157F03426C5AD76A3BA12363A0A6F
C3CFE34116FF2EABD4B521921A83E971938E47E27FB4A944B5702D62C6733123
82F87DCEF9C4B88407158375F390CE7A3FFD5A89D23E952CFF02A7D38EFED0CE
608C0DB10A9AAD3E27017D0FF0B4B7A3EEE60DDBFD6ACDBCD787128FC567B53E
BBAD49262B22C63F5538F8C4BE2ADCE87137D7B68FE984FFB8ACAFF516B4B0F8
FE6FD09114238B02862516CA04CDA4100A50CF3C12563736F472DD62151BE63B
4FEFC7B149FFE142E4FF35815E8A3026182FA0199722978386BD128C8B001A71
332AA6AE19BD05E512479E750BA889540F6E097DDD67BC28F0DCAC53CAB5C8D4
6BE3575A499561C343DF064F2D2CDD698D66637F0A168E46A529CA1391FB43F7
335E07A3012D09816F23CC8423BD8B5435D8638BFCFE10A40CF28655B5C9C957
97343692F07113D93CB86268A65A2DE7A06CC54113ED51D2083E71A7A5924359
AD4DE1C55CDEADC12AD6045C7DCEA9B426D77C043DB320E1C82A432A92465135
B2F96E0C656ABDB71F71BB91D166C96F367937C3A03732CC36CFDE6B5F7734FB
2EF48DE12642982101BDD5B1F3590135FAD1A313F3BB8B0B38091433DF1AD95E
CFA19B5AC778386D764BDF431299458DB73414CD8F27C4B9DC8326E2FDF1FBF3
E787524E2C61482C330326616B8105B8F2C1F470B8D7AD589DC7346D5D6071CA
15E25CB65BFB44C04733E5777B90AF27C6466A31FE0B8C981962294D8515DA96
222C6861BDBCCBF523C7EA0CBDF49050F6DD286977F9AF87435A448CB19FC636
7F1AC2C847AA5F994BB81237DCA7A66081934BFF635F445DBD8D857C16EE0485
85C5F5BBC6A4D2AF9070A6757A5BA92B26A8E88E46F246CD1350E9BB70E77896
134B0FABB7BB26D5DD12874F360EA5166BB8157F20044233E71BFBAD65E95AFF
5FE30EB5B0ED8298A69ACC0E2D1B1422961A36BC4C4185AC89B5F62F16AF2792
4F7E70394F321AFAC7117DB884848B077732A38356691987B1CF0D561AE30264
9019F92E160CE4E7E14949CDF87DCDD27B7CF287B66A7283E767B48B0F2039F3
C2AED8146F04D27743E71872CD30FCDF1E0E953E1D5A7E9CE28FAB388774216C
BAB096E880B89B3D6B7BBC421F648C718EBE1A32FF1FF3B1FDD6400162CF115B
50FB9B2475FCEAD9EA484A635101ABD67037C62FA0121E78E383BEEA7CD37DB8
D67E285281AC3B832FCDD0B8FC3039EEAE6B94E1E04038CC6283EB28756532D6
DD2801A6F933F9FC92C3F32F9A7C00396FD4A80D4AE5142E0CF310389FCE65CB
F20C9E1AA5394D4152ADFFD5AC742DF7B0880787CE10F412BD9A61B6F0D587CC
18D2344BCE820A1A3620FA941CA2BF1F811766B1DFD3D8FE7A74E85A6886BECA
8B368C8DA9BCCE828AF671C59B5741A324ED10CB87ADF5BC71FDD9C2A6079298
E5E82E31357E8326EC660A28F25059B407AB69D5A081158C309327766D1A18EF
59D13A57B878E6439679C4C214AA8DE823EF687F5EB2FA5E39B1C74DFE533E20
CC52AE73F1EF12F06BD5E42B9D85D5245AE865DFA801CA85B968D95F9E02395D
F510C18ED6964894F44F3931CECE42A5D32FB415E2525CA6EB5A8C229616709E
0176064E7C1322A3948D8D1FEFDA41704856E14F0149D7AA7EF99CF5B63880F6
B2035093AE8EBEC3C684BDCB6DD236741EB1569139161AE3CF89C892F110F93A
F96E2CA0A0485510E58B1ABD3D73EFD2376ED2FA38525D2886D805D93D37A7CF
3B06C5E07460D0B43D33FB9E17EA627A61556231695BA0ACDDD7C5D9DABC71CF
F11AFB1C0BCCE26382B82D95336FC074602E69BA86B13075D85BF0ED68C7C8B4
1981BF3FC1289170BEF81325264217E826F1CC7A3AC7F73100B410E470683505
BB0EED37E1E41253ACCCB76C974A8DAB65EB04E8690EC96AB92E134CA15DA553
B2E643E187D60C6A9EE83B04222D99C721E8A9D8271DEB2FE6DFF202833C5329
836397645C3BE2CDEF1D971A7455285A543459CF0BD4F9648C777B6DBDB7EB2D
845AB91032986423BE1A8D98A28C2E6B9A21ED58671607B060E8909E390B6242
CBE089D6296F040E77FDE1A63C83E143564C08631C5020219AF7083D08D24D83
93A14CD93DCF12DDDDD09372111CAF8AD7CDE47FC0875103E9FAF6EECC41FE4B
51F7FD1E4A62007B07A5489ACAC49F6813C42CA03F33D1DC43E79B71B94F57D6
A184BC918D659422B81EF2DA85FE76773AD89CADDBCAA825B8A9F717C58A2F6D
B50CA8E15EC3485AE2E185F70CC2E0E3FA544007F4DBDC51750423B7BA4B654F
9FE97FC8DFB281FCBDFAB5E46B49E4EE56432D2F9973539DB46C17F1DB0C97DD
631D27CEB25F6A2220CA636362634B7D40FCD3CE1167A96FEF163F044D288624
11428E727AD8660FB6948A9BF856B4DFA7B8501EC5C4B8521A3EFD24AF4933AB
5236B4B95CABFF5A0594676117CB23F52A052B09CC110F9FFE9DDF2ACCC2CD20
3068CB7CBBC5D61C926FBBC46971493C48CB837179C29E510701CA0C49279E23
7DE912928B7CC5315939831897EE1465E5C335400A63079235C60E9E5FE7D736
51B76120CD6B1785FA66F73F9A1AA28EA02C69B8B29C78BA8DC61E75F93328C6
6EF7AE7E246E0273C5A156516C09B760FB04F31061B1E4AF9AEA93ADBAB6B866
35BC2194DB4F25D519367C089C51CA145B33AC063E5E2A85A4325E177C9642DB
679D2163242F02F6294893A5BACDE346545C3FA9CE9D477E42EAEA5EC5A8F447
723EAF61834C232F07071DA55ECCACABDDCE8411EEA34A593B9CB12492B5F3FE
9093AF04DA044624503C485F85DE611BC2E5BAE10247B4861B2648C457082E9D
24748EF5C011541006D939F70721D54A874D7CE73233B0B23DF18228B2B03E74
AF4EF90FDEE7B800330D556456193A0DBE763C6A0CF7FE9C2A780CD127C10F12
3FD7F87CF12A795AC29C5AC89C20B752E5DE102C83DD32445DA310824FA27577
51A12034CA0D42C99347FB2D77ED154D85C06F8F312656C870EAEC1A4B268F12
48F765E5B0EFB4B875D4C818867E8497E5DA50286B5D5ABECBD11A69C2E1F0F8
923271DC673A43358EFF263E17DEE51101B45596DD2150B3E854231DEFD2C2ED
8D57BA6C5B68A329EEF22635D1D8307102B65542546F7AF56E85D5BF8497AE1F
6A2F80D04FB5B51EF61E1C56EC7888EE61742A0249CAC01120B8D8188EC82A82
2A9A740D8F91725C4B9E81E96A1781BD57DD1F371CFFE4E987E770A4A751FE77
74167FEF29857CA8447C865BE9B191121A4E2C4962528593FB11C0844CC0557F
3DC9B66E51D449ACF9F84BE6E06209EFB344A0DB498BAD155519C81BF9AFC350
A2D413A05D1C3E5742A678C3B7AD685CF50A226F2506253894A40AB5495D1CCD
EACEBC4471E6D112BA5FA3B60D1CD2EC84914F0547CC3C8B37A107D0AC6A58ED
CB7D5EC25DE4F18A498EDF3E57E6B62A7157EAECC98DFA2778C7F73936F15D2F
75B5596A31E07A0CDA79E00685865173422DEB7F5AE964EE3767021D7165CDA2
4DABBFED3ECEE2FFF88BA03819543B5AC7AE3F013BC8368F367B14FDB7F430BD
22D1B4465C7FA87B096FFC6B59DE463157A4B1243CCD51B662F58CC67AE9B903
3E994DC4F24518B79605F13C3C2D6A24C0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 62 /greater put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD2A85F717630
90740F78F242019C349B65C2A455597DEE127E914C372C6EA0E250402117B903
1D7D6FC7153D77458569B2E0E6FB978B06AAD616BBEB70B58E0BCAE1013D4405
873D2AA3C41309993563E652BCF2B244451D8FA1305BD9BC2C57BCEA7F065670
A5059B0B17303312E8B787E02152FA92480CDED118924A9D490B2BCBF9A560A0
D4B55DC4968ACE1019CC2840E1AA0596F8E8D4BF7119B047E55B0FA01C69B9A9
F79DA6C9C9B49EAD94943613151247423679B7A29AD2C71BD077306FB9EE0AAF
9AE4B268C8BEDF3CAE8CE885ED53184F9BF2F55AA05933071F536B7180F6301C
A04438DB5BE00037A8145A4475F5930C4D0DAEC2B0A82F4E6387C10BB2521179
EBC45ECE1FDF92A6F41A24D9B74A0FE93A6AF3294D4A5F4429D4BB1607B9BF7E
0271BB498F2C74BB9A0ACBADEFD4CD5D4137299D430ED6CC629A151199728D3C
6B7B2B7F7557A9CD965E271328319D7D10F00C8A12B2F9887D5C9E98662200C6
4E39E234880D874E9AD30227766D27B7AF8CA035ED70E1B95175D7838ECB8119
EDED8026B7CB0BA9029E22EEDE03E7A4BB7B4288012E7F66444C883A7F06F352
EA2D5ECD7F499DA798AE3BCE4F7AF94A30D61FB7CC2BFE24DA7078CDC50C0957
09F949F4049023D1310D6EB78E2137D483E535A2C48A56FF7326EF80CAF0D0F6
B9F4AE0E532AB72CA08C8D55CAD55FACAFEFCE5B3B79E377D4E72F4AE9574E8E
2392D5F9B2B6D3BFA673A8200E331CF4AB2A555EE9A6C5255849151CC1E2C993
10FBA0BCCC3510D113AF350C6B21662EDD238036C9A69319F44902115C5B0429
67AF59FE21F6C5E8F6E08757647DE68E47E174127C412B2213ADAE2EFAE78EDA
4319D186DB7F6A6676166ED8CCC18180334E61511A21AFABEB40DDCB91BE4828
7FE286760FC14FEC2E9F90F5E62A7CA32761D161DA68BD938FDAD4BDE5254C46
60986A0EE5B6D73764C51AB10A7FFAEB0146DA48619CD29142BE1AF94C8B465F
FE4C793133B0EFB3F8FA1CBD9533D27D96DBA765C0CF4627025B1419EB68CBE9
A94F31D62F1792AFBCB8BD0950B2D17A28F8C6F5B65F92D1731E065C68659E49
4F507D000BC9087A7B49756962A27F19B88B12CC2A12D02CB29583A7904BC9A2
C94E2AC872EACD8367330901C58369A07A5CE8C3E0828F85F3608EE021987E02
DCAEB634BE461EACD280DFE12910AEA276DB928F1BB52E7B15630ADE44B6E692
9B9CF6F3483A0AC87D72664A03618681663D7E8E475CE2B4FBF66839ADA093A3
50836D12C4E3DA12E5D40701D9514FC86F6EF5ABC605C63289177B5A2E1B97D7
74E0B5414584C0A59F1C63BDF2F7B431271387D3C86E54D39264B674E90AB382
4B853C2C8FF955C6361C51843CA29B55BB99CD5B11B13892B0D1F6451A1A64EB
173A4877CCB26F0A98D714F0E7357B6BEC3C158D6A7EF7DDA5E8FB7D35C6DEFC
D8FD9E4FCBB5878F1614178FCD196E31F603AB0616A61DA2DC3E6C4BB2537FE9
15A8CCC583574414A03273E8C2B9CABBF6A172FC0CF2715AEAE352DB79E3432D
B11E9C13B6E04D0B73A387D8F2DC0D3E90A6C11A1D92209CED950E4C0FC03340
88BE2C5F62145D586CE81E06216EA24CDD3A576DDD73F20CAD3AA3553AB203AD
6E562DA2BB04D3E10D7BAE971B5CDF27B4487B497B8DE5F4E08606FAA6099E3C
C5BF70875F5D49F1B82F42136D3A0EE6ECC9887E4B236D81E3A0A9C32247EDC6
9018CE105B7747759982A1A816DD7F5EAEB21AFDB8A6737CE7CBCE0139936EF3
45B735EEE02F54D6479B0D1E7EEBC1ACEA1E9AB00241A2724049405E1D7F7217
FA25CBEFE47668A773D6F5C3A7086C51F84924D64359AD05C83A7A66925638AA
1F5BC1328762B93E8D3EED3AE54ED0F966AD23889D64C70CEE4A8CBB44BA61F0
E13ED1BC269A2948568CBF747609F0DFA7E7425A649759437DF266E94A0C39EF
2F32CCC83FF24CC8D4515FA048047C0B36C9EEB33F7D14B23AF5C662F4AF62E8
9593BB3A5C3E3DC7493F2FD74C2E6AC36721B7F430C1BCB90B7235F3EAF29F48
6E02539752ACE8003984E5AC0DBDAD1D253DFFEBA25795E45DB14DDBDF529BE2
719B2B7CE8FBA573B55D27147D3466B87D5403B8E72320F2A304A224EE03A59B
34C8B21C2AE22EF4B8CF41EDE405753D58A74E6059BA4444D57150D830E5B6C1
6A21A22EA61E445C98B68C23A6F4BB67CBA70D609E9A34109111FC8DF2C7EA82
7E5C786B137EF3B8EA65AD5104EB56542FE02F0AD767EAAB9024E81AF2AA7CD7
A71E1B2A5DAF998BEE1EE298715E7C5A63AE747E8AAC0079487C00233DDAD879
26F199E865CED4AA29757EF441344A97ECD2E5D33B6375732520C995E7AD8F54
86898FFEFD4DAFBE68585744B5418476232B5EA4793E76CD78D07AFB68EA6C9D
A81A3A7001FFC6E4A71B4AEEFAC401C0F307C967B12C9A7B023451ADD94BF751
931A570DC1403106BB40773B476E2A6C035B062B884E658BA844FC5834BE546F
E780F7EFC185B03015DBBD7DEBBFBA38D7B3AB169BDB3C308B68B276AC72D00D
D4B29BC3DB57C64140C819BFA7D6AE9E8EF368AD6C2F961121EF68B4EF66525E
8F15F69D8C9450D4DDB60F3796EA9969BDAEACD1C5184B3194F9B2D346104AFF
EBF9B200523281DD9A5598E7F442FF86C9DA7360A0533430B4E814ABF3020407
70CC5429FBC3141FA67DDF1FDAEF413746BB62DCF48E1DEE984EDADC4D04F73E
7A9E235322AF74EBF59304B2FAE834A0571C818EEC0FEF23807BB719C67E23CA
3D2F7EB5D6A00D0E7AE1ABDB34ADB15038F24C6971B9F24E9046B07D937EB41B
7BC572CB9F3974CAA56E8F4FEA950330D93844EFEA84291C376E47E33B540070
2F772E62864AD88D988DC6F88CB213122E49E45E47E9B52F1825546FE85F6072
058BE81ADA7C6FBE44B46054419F4A61E95ED5EC43F73F05E5D3AF299A9995D3
C4A47E1DCE9C4A823DC3E437A036728E639B2EAC402AC8889194B8F201543B44
53AD8336B28B87C62160FD4BD2F00A12C4F204AEEA1589E5522E16AB9CBF1192
1EF61701F711A13A2EB4EB417C447AB14ECBA8456BF681EB9BE4482B7F568555
37496D51CED290E6AF29681EBB17764521357B65E43E34350753B5EF8B3AB244
29301DD6504E7FF3A51C462CC02D185BB6D7167A9B3AD405943C71418D678091
22AC7BC48D18820F8674CB16E7A7C184813EE7E688C7601EDB3CA2B2344D8CC2
F5C5861ADE1CA06E7E0A64A6DA55B917B66CF9A90561B7DE9B0A2CEDB4AF8A0D
EB930C4ED4E16E72796C8F52ECCA9E4F9D8F37FDFD4DF37A5E66A76C30C1AABE
F8A347AC1B8061B2FB6ECB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
dup 3 /asteriskmath put
dup 15 /bullet put
dup 33 /arrowright put
dup 50 /element put
dup 94 /logicaland put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
dup 110 /backslash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E9338E1559BE5FAFF381BD82A6C71C267409468B3C0
2C1A29F4281D565836EAE57F680490FEA4A952FF64C8CD11C377C294DCD1EC25
CEFB2B6DCE959D0208F85B6E32E9B44FD455F9B134A5306D95EA29F37BB8B86D
9E592159338E1293F449380E13C21AE42E6AEC29FB4B96C5C05E07ADD8D6ADBE
86281D1F3B0104BCBC60A1862CF1709F6CBF8C3ECCBFEB84BCA47ACF0180F631
4F2987648B81436F2C075B87AEF6FEE028AEF40644D128B79347B03DC9AD3E3C
9D84B5157E4F2D1A3780515395CCE6E9CD4BCB348A04D497AE2153F897E2310E
573D6C3047E444F1A29FC0DC2EE33F6F8D4FC6388D39693D1F3F67FC8F55B05A
69AA0D65DAD0ED6D3BD69D6CD407FCBB7B6FD1810A7AA2CBF70724B3BB6D7BEC
8D7F208B4A9738CCA532FBA86D673C8874CE16C313AD5450414A6FADDADE65A9
B4570A6025C6DF626B74B981D8F65B291F052D881AFD114B6580E7FE958C73C8
A103B7DE9343C2B4692047D5E3D773BA01775A6DC7DEAFFE700D3DE335C4DDB9
1530CAD9B20F119A08F0519FB2909ED603996F60471F752C131CCFA722266A13
BA5CA32FFEF64A1DE9651E89DFABA41063EF9B1A88B1D60B0A58C3787D560925
377B14933386DEEE7927CADE81D972CAA96717E4E0E726833802F2E38D605EE3
F8750B6014D48B81A5D9A81230F27B83D955EB2CD9B4CADB1AC7AA76E3BD3438
1649EFA66B27B762DE8964D784E48A672C2967C04D725BEB5564538096380B25
76321B5D4810E8039BEA37B61591C5408D0C51C538CDAF61F7B0DA1BD2763B1D
74CA7895F96B6696A0D702C537724AAF410EA5993FFBC19257AE7E1DC42399BE
9F667BAE6266ABD094E18799EDF2BB88A9D0EDCB747C8E40C3A00B0DC18CFFC1
1FB0FF2442BD6585F4B8B5B9F62E3A3E95193534644852FF5FABFEEF1AE7F5B3
DBCEBB674E5A1235775FC39D9493DF7B2C36280A27E55D97F903892B85F59478
4E4E671991F67C4D9C852C20D443066FA462A091F81ABC9C06C99E82F3609CAB
1E6DA4A866F5471667A8886947D70504FB1A158FC1B950C8579E2245FC37AC08
4946ABA710B1F58DE01A504F111885F9F49448D7F90325FB5461B64AC315C0BB
C7524FCA1CF337CDD90017434A39D7FF6DF7D380DA2E2F5FE37CF31F0674B749
ABC313B45E3B6482F6B86E9F61D0DC2983CFEC9E320D891102F1AFAF37660F73
D198CFEE456974AFB0D86747D6ED1B7EE5120B072255F7DB275E9DCDA6533FA9
9D92248937ED791C30029BED6D804C57C789E6488030167FE960FAEAFCB4B635
CC9D8811F2ECF1956583099DE4807C15A99DBBA8B017C04DD0BF0753052C979C
19ACD12B62D570A4E0FE98BEF4570FC2424579CAF5C47A4262DFBB1EA92E230A
AB6E477A716D3F19768B10F60D1D3C31C462EA14FE08EBEC57125D70E92C9B0B
983D21A51607FE4A36185F84FBC36E6F6EE4CE4ACFE84C1681868313E7886BC9
D46875D606893BBC1E58F337DE4A407F2EB54722A25F870A1099D84CD144F143
340F396C144B3E660FFD0FEE827E98232155EE6465D6AD2BD1921976A819D2F5
8258C15CB48E37184E9A7C6ADC4EEC4DBCEAD240B7D58019184D546C7A77E7B4
CCFCAD214E085B95C976F17C81B51B6E2CE083A0CD8E11116218D2E4E9901CBA
7C56FE8BBFE2AF03B5F4B10AC60828CC80455F53487DB88D5EBF364B2B6B3DCD
604E451B60D9E5207138758ECCF3D290989027AB9043E2D72575EF448EE15636
557BB0DCAB5646D4CD688A218129BCCD51971308B0A0686A44AE918F270E5979
043D1892C6BA7606BD6B13307C1A99E890AD9860199C4B5F40837A952366AD94
D5B486B3841AAE1F1ABD7A20ED659D760F60D3F0A05F1946E579CF1BE5CB6E29
309D62ED13A58AE4F26F0A416CB025D2550544CD06247027DF9EA361C0A96283
FEA2ED17352E2139E7907EE83DF85149793FA1FCE6D1138CFF1714820FADF0D4
D65DA193EDEE6090B1B755EC5E1B8A02A8896E5803019C1CC41262129F43949D
DFF660E6009B62EF72D612CFC326EE976683300A36C23797636D69D271DCAA8D
61C223202DF6EF1D0FFE62487EB20329CBC2AC27533136FF2B7210A2AA75BC88
72B4C83118A2DC0D6C346B3AF4AEC59B9B3C4888254BF5A8CFC44232857CD9DB
2258A6AF84F72F4982A183C66FEE6E6DE18DD29C7DD63D14DB1E473BF8EE0601
27E41A25022486046718DABC9BAD64F0F7B02F92C2BC70DE52FBA90B0ED51806
A1B18B9ABC2AD5AB49048CF1647203823F84DF5CB483096F9D96AEE3A2855E47
9B72A14A67C633CE99C101CFEFAE939BF9B02E710D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /N put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F48833E9E
B7BFE6134591C923F2C91D77A132347F5F471F1139B9938E880CC5B3409B3385
9FE870D53EC343C11C946BB9B5FF1454AC7D547539FCBD3D77D83180BB4741A6
90189230B9B61C6C54309B61623636F98871724F9A85088E44779264257FFA0A
FA05C2842C534A411593D10A76CB09C8FB45E6E44703FC7A51D81D3C1E8F27F0
3AAA9F00AA3A998A0C661B72E46589CC08EA87EECFDF36B819B07306C38AD155
60CE44A39581BD6B555165091C5D4107149E976E2488EBD830CCB0A350C695E3
ABC1069A94F16744A6F2D97BFD4E208EB2BFECD6B74C35310CC3567F94414FB8
334C42FEAB58B02F67E9CBC1855FE7DD7C1B142979D80DAF96A3F3517933574B
07E1CAD5FEEB9AD584935A58676976DDD2B6E118FD1D46453894775B2DF1F871
924CE2C0479EA8C8C337504C1F456B77CD97DDCF704455215B860BD0241DDAC2
F375DD996474504545DD2C1B775E4CAEAC1DA45C79223AECA9329513ECA625CC
1C5FC3AFB291A6B75A593BA8B9CA4954AD9069797717CC0B929BABA88F67E4E3
691AF74A94E95E6AF67C7B550FE44C63FAA5B404457CADEA896C69E5262430E9
787D1CB2FE11612EB29CC828ADD9B2585FB30DA75565D2D87C4AFBAEBA55678A
4E32C9C491BC85622463D65C0E9723DA72D45C6893928AC6364278958FC16CD1
F7C31DF8E2DC3521CFDC4A1218F6F83BB3974123A362B879F4A7F4F84113A514
3469766791AE6D34BA5058A534B06FD147A2003BC9217289A93C5FD02EA25058
5D1D0C5CBBBD31AF86DE7198706BC7B22AF5E15A27DA30541A8DD534DA895517
EFD347C1B0BEB3D33CED9047C473A7ABD9E68F03E176745F59449B537F8A8BC1
3F149C3D94CC01BBC61D9DDFC8CB1C2D3F0A65354054433B2A57E23265677D37
989168AF0874D0D8EAF987BC4A15F80B3A1B1FE1855C92998C5E466522F23F9E
FD77D816658CBAB9131893E6F3C64A7ED38F4DCBF7291B6D7A360BFC79086819
4D35709FD0425F4D6E66251ACFD3FC990F6B69E2E1EF111C312D6EF7E4FFA2B3
15D200DF39BF923747351FE56D3D574A24B7AEC29044CF792D4CA7F2B6D9AC0C
62679B92C0F90D0B3D453EA1013FC138E71EFC4EF8F9AAE35F11A49414815E8A
07CAE9E8B59EFBC26F389D8399
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 14 /ffi put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 88 /X put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DEE4B63A8FD2929735CBAADF336DB2088C0BAD9
B79DA00F002B98E0B4790F729DB337A63C1BF138947E9552402C37257019A2AE
6961E7DE6E5472914BBA36D0E9F53FA5771D2801267609C8B8B12A11E0AB6031
E251D1F7D5055B426B1CEEB8B386F92A8661CE6E429DE0B3A612D6CDE03DDBE2
AE36B73CE97C83E306D223CE7774FA5AF973D985C5120978E1A02EC362C66754
4098AE47E5F9E0807326E42BF2869A9A97398E0C20F5F017CA9DB7BAB3BAB101
169D9B8A4E33ED8CE8EC3AD987CE15528ADEA1C2830CE749F731509FB6B90869
5967DE2A007A5F489E6735A959D465B74109BA1843085C27C269C751AB2FECDC
406C8C00B476F321DFBDC8D8B289265FD8D01FF1F9B088F3B7381972A2A314D4
867EC2F837E964D40073422394E70A122045215157AD16CCAB7926F4F1CEA52B
22A941B3A6E2513C51161BFDC5FB8C082473A6EE0344C6784F9E786F5877EB86
3B1FA06279B9C1E83A892B97373209A6972B43BFA2363CA74FFF2A7B4452762A
3C1E9D32C3EBBAF1BA08EC74B50FDF64C717BCCFB274EB380E9CAE69BDBD0776
126ECE16DBED360693C351BCDB705B087867230DEA93C45C41F3F40FAE414194
9746804557F8AA85D9D935932875AA91C5E230EFEEF4CA1441C63477CC928B58
72580E379881BEF1D8F38130D3744FFC148705ADBE24E27C33500A37FC32E50F
7440F4CB911212A5529FB7CDE3A1A0DB98D05D8301FEC82EBCD708DE2AEA6F52
6C3E6ED56F4F96C4AF24C358D7ECDE6A048AE3F0F5A682A5AC8003324E2127A4
6E9DBB7C15D19EFFEE955E7C8A927D14C02EED76EF13F07889ED98C9F45A14CA
3C5CB20ADCFA37C13EEE7388C91B223748F7A097529B9CC4031E4AD706487568
808BD2D614C76F2EA654780ED60ABD9581F43C59651A87E0A69FCC925C5D25C5
DD9A0B88F9849C369A01EB3ACC951078DD8ED2C2FAF116165A7FEE27DBE7A958
CDB9870799B77666DF1E02BF6E50377D60FAF08C9DC83C7398B0C54F44F53E48
D9642B558BA12411DC68261B3BE2BD081CFB9BE1245296674ABB5F5882369863
C6CB3D5BDE8C57C129B75E11F48CA1AA69D058F4F34CA619BF17A7264AE1EB38
77A4446DECE60AC0DCE98C9064D9B141158E5BC3F0B29A22BA09654F29BA3DF8
C8B5DBC1339D085BF92634D018D751553D7380FC3563D88A938AD1B548682DAB
8ED226AF2AC08198E3243FC6A2838980277BE4E8ACDF17099FF777109E00BA3B
D9CC087085C70610CF615E301E54836B662B142031E55EE9A586A7A61967F079
C4B3C2F9289477405E1AAE17E74B0BAE25B89A447152D1F443637E52565B9843
419386D754F974A142800F1C2D7B0D5B8916D491301D6F8FE03D76FC091AC01D
1AE5A21B0595338C201140B743ADE3EA140A91FA09DB44E55FD49474D98EFD76
F36904E76CECC4DCDF1BDDB132BEA99EA4C95704BD0DC0919BAA073453B24AF5
E2BBCCFC61330B589DAFE409F390F29B4CF63FC7754281F89BBC59FC1DA5692C
23ABF1A969DF366D3E1335A76674BA54BE9B8E6527568ACED98508A80EE4C59F
79DF6F875D73E1AEEA857364EFDF10C337882B429B1AFB33D68B3831D7B5D966
6E0A3E862344CD4B341C6AEC94CBD224C3534503E79C04FF94C5059BAC10947B
A16CC916C66B1A02D034F31C23B04EE90FCB4484AB2053E8DD69A2E930FB4DDA
9E1BD3A55C4D59BBFB7F5EFB232FCBE3C23BFE2144681E7CD633056BC77D95A9
16F54291575FE398A333D20D4CD01885C2AF1FA17CD5DC6C38DBE2E41914CCF8
7401373886FF9B7EA3F4EC07A50FE8D824A4F86103F574280612F0E05BCCD097
059201A585AF2CE345DE6D4FB84B2846FB79465FBDFCD26327C8ADC87407BFE3
5E82F9F20C92E257EA85AD854D9A7D706E846D02F57F1878EAD602C6CF843D52
4FBBBCCC4AC3C3FBC4C0740231310CF32A9EE66503B560C49D12542EAA423B1F
B8020853A1B0E9FADC0984FF8E0AF8A0ABC2E7D3B1AA787428233F8377E4E03E
6CE9471674E5EB3D56DA479E3876BC9388C67A6B10685E9921C790177E6835C9
FD1FA0EE61B939ED08F884480A3E19DD134A3AC3651A3B3D100EC7F458B977A9
F37112DCFE34DB7286720908BBEBADC84A7E00DDB6B54EB604ED93FE32E87E98
6FB567CC439EFA04C620B8E3F22CE2C0394E8C573B347ED45E1BD5D27218D41C
5B4394A637962FD5015015990901C4649841788BBC97901F1534A0FEFE1385D4
56D4DFC90FD74A9588B2A62F13024B4DF386C4FAB91EEB7EE98EDE8FF62505E7
73E0925B683C38C9C33EDF74EEB735CD1C985EEDC5651033C961F6AC88EE9699
0C162F9B7210012EA356D8CB8C9F7F7F265666D7579B3D2AF65CFA2F780680E3
AB840B324B3488C3E69033424895129BA9D0BE4F0EC928544114DB706F8FB29E
107C77DBDBFEE4FA9528484AFEF77CB10151594E33D198A43D47BC2560160FF7
C7473C6E60CAB0B99AC0692768985F1E90F8CF66E540162F6F2FC154BEA826E9
6D9B73D06F1CFE28F830562887FD245CA441B9F9CA4F8DF2BE3B0CA7108BA257
70F4B82E4F4416057D404F351F8ED22F8D659ED866D0B629FA661440C3615D01
5B6830D039971E4AB48D0FCA5AD6659CF51FA17CD5DC6C38DBE007F08F45C7DE
891D22C01EB98C05CE616CD3774A123CF2E462DCFC8E8D408A04D9EAE9B90595
D1305BCBD8C33EEDB7645170A6A63D60BD407E338E47AB74ED71D9AD8549F127
F59229D78A0C17BEC5FF6211B7398B058DC741C12B1E42EC0E47F3D481EAC8CC
F48F64AFEA26885148A988EAFC7B4DADA7731003385D82C58509CC2E624EF8D0
A9E890224F71B87819F315D643037E7BC148486C5D96FF0A334DD887A795F068
318256A7F5F7002BBEAEE7A398255D80F229B001830444948E4CD782CFA3FC10
6439F5D28862998F74B32F2DC260C88BD7ED3ED91C93B2EE1679D062FC4F3E06
E34688036EE18D07609FA6FA09E78C377E448EDBB082BE514F666B06F2CB50D2
21F717D518BCA39821B2784E050A11FE8B18806D5069729E9026B048BF610A11
385DBAC2FF3997A06C5C9877630A42CEF5C7A339DEBD77917A6A986CF2AB652C
FEBB053A5CD6FAF490734DC0750BCE9F43881C3048BA623714AFFC9D062FE75D
36E1A40A7BD1957A9655B657066CB2EAA3D2D282DBB600935FD6AF7718DF1DD8
600BABE13D70B037C6CD1CF46CF2748A3D67A7C3B7B7006B180067B2F9E60CA4
6B1D092566EC68BE683811E15B9D42176DEA4E100EA56F2AD67487DC8A611FEB
52A12D9D030405FC314ABA0CD3643461C090498AA7064CD84DC256855A3DFCCE
C4C3CB07A43B0115F76BDB7569396DC7BDBF5D483DA986622495D179CB9BC397
D456E05B2BE7B891A252FCC4FF52507C34739F460BB573B7E3720F203A5F6AA4
A14E28AA61733CF1C3EE17F2E7C45AB2A3E6AC49D2ED9C6538773522108FA14E
8D106D2BC86615784AA3AE0601DB63F00AEEFDFAAEC0CC686A7B59F013C81DCE
CEB76128672F8D9ADD0EDA3C0728080159EB390801AE93936D39D96375E24539
43788C4CCAB2A9CACB7D20FE3CD946632C115EC6E9F1B55597831D98B64F1D46
4B4E56627B9A8F49219BC81163EEE7219394BDC17DD0D4C8F02180B754547432
8B7AD72AF93B67D7F661C4D7849494E3D850759058124A322F6FC67BF3AAC725
0F76DCEF9C88E1931C59D868369477E62EE85A0E8DC4A1C038E454265488C359
5A7C32912EABCE113D0B701684EA5C55AD278CA8D55CEFA61B040E7881848222
220AE3ECA7347E5C4F354C7BAD4D22D09C7C55626F5C6488D48ADDBF3B3B3B2B
D37B09BD7BE2EB7483439B1F3424C4D8DB008F9892055891BA976FCE8983482A
D76EC46683A81AE2BA8335BABF1080C4D89E137AA38D631F3B213CDE3086E3B5
33ABF062C70E3342C9FC75F522C48D6B5AAA16617E30D73102E5ED3187B405BC
6D7D4347562C44875DA058E8CBBCE530216BF807A1FEE046E346C7836F4D6ABE
BDCE2EC459C89A76097ED8E51C94C8E1BB7887E2F0C36E3729C71FB42DC4C1CA
746D830367FA87B88CF526AB2A32A968E98A8E2FD588E84A9C527CC34D63D1FE
FB4F4436314E8CB4C207F5E12E9A8703DC532718909C62B146503829D57F3768
C1835CA5C6DAFB390C7631F9CE5B0EA49868447A51B01F009D09BAD4E0A3C78D
03EE6A6F5DD566CD2A6228577299FAF90989A6464376636848549F749658F105
9A606F0E6CA0E3DDACF9424E3830E0F850ACD7039F482AF773AB97B6AAAD315D
48A3439BCF541048119EA32762103C2E31C5E3C295C0185EC345D5B2A9196E73
6A9DC28A538D23CB74AAC0425BB388754AE915DD90B90DA35A18C332D39E16F9
F5AB7D81B729ACE4122D79E9E395F5CAB8B4637839E430222CC6CC25CB308386
7D0B6044853C5346E660D97B8CA0F4F708D38EAAB7EF2279803A63BEA1F15544
B2F519FB38556A9CF9FCEF9D3EE785E863E59B3680B123A78BDC41906F64BC59
7B1F6A6992CA421936EB61C2B6E801D6486AF60CBA3476D1D2CF67C6EF94263E
F3F5C75C854E8A492B03905D9BE1F15C450A2957916CC7BB04CE348FD9E05B7D
A8C435A28E8967B7085D40333333278260141F354A7B745BB332313EFB3BAAE1
5BCC039B1C6A9499644AA78A90251F8BE10CC0C49CE6C39841112FD4C9F05284
4D9A5F91C78387B17D4B05540EDA577F37F74DF2B80E113CDD9D25E3E151013D
C0CAE3FE9FA8A34ED86AB771EA5DC776545F2F128D0D344F870A289C7C044E58
FE6FFB3834F278AAD56DE58F85FCDE5158AEBF878BFD7FAB0ABB2758E37DC5F4
533724D77A716584F48251935A1FE730C24DC45C73B3253B2D433881466AF6E2
EECFD1E1ED07C39F59AA2320AC4AB4CCA56A1656BAC37091F120EE4A624B0A68
1ACA448B59F6408A0F6951FDEC61DE5EB3898556A1D1CE55AF968570AFB47E4C
81BA6C9E6F7746D5D6E933C3C0C6CBC36D086043A9717724488997F48D2B23E9
2C436968578DD4AFF52F8D1698E144FA5659049C97733E416A3738C5F709190F
983BDCCE6C1265063C005981526C0065297888486E21D23818374F463CDE9935
AC7BBC362F8F472D50DE38A6A3D470FA7C4923D00615318DE520D3AD4BC7933D
A3008E2110E10E7EB60ACBA75D1B7693A4EFB225DC60DB0D0562E9D7B9943D60
35661CB4F79F9ACD138B0B2F4757FD5C69D67842102E3D50A2B03174B498C868
4F8365FDD4E57F13B531E23FBF5C33155A5407F2E3AD1C1FFD73AF16B83EBACC
41304CD6C4D96EFFAC21EF99B045AB682736AE538232C1396651C8E2B2EA247B
DF5B3A58B5DC1D6EDAF23D160DFD2814B4086904BEA2FBCAACA414D247FF114D
58583ED9984284E2A80BC822471F645F0EBA352D5F91675037D2AD9DC90421E1
DF79C832A603BA971B90AC20AE803E11AC351A20D539D57E90F26183E8CEE959
3EBC66A8E1D0A63640EE9E4BEEA437CF29789CCCE5820A4EE449B2AD085F45BE
686E726A0A8E46B0955D424182D40C20291767CA9251798220A006B1063D304B
D635EC6143B87AAAD5280DB4A8FC5FEDF20F55B5A16AE670F49EA51A193E4221
9EDD560B156AD01F93F29B3793EC970E6576C1E561EB4AA1EA4D4DD0755B5A93
D32E1A2D5F830D13EA282BEAF3C06C8E08BC5D11585DEEE9B5B94906B8FD3FCC
6545F19364B23D3C63395DBB3362516BBF0B92517B5D085627A18C9826AEA846
9EC3C4256AD1292F18D81C0F1E59F5A8F86026FDAF2491B3BBD03636B3D6E19C
288789D26F8D00F20141E050873E5654CA8429E0738A8E7A9836AC76A1F343BB
3E1061255F619321BD2323DB0C45E5890FD4B6BB53BFD99D2DA04CF484D5CEE4
B6EA7A59B0CE998DFA1381D5649570F813F4F67E7BB946AEDA822C5B74156A68
CC5FDB506FF42E5997C0BF0CEEADB782FFA9294F2D2D596430E16D04D6E2E6E1
1B72F5CA0D87C845BDE37E16273F2160398FF26577F557623293BCACAE3E0170
B746132647C4D96F2023D9C2AE449B06F6AD76EC3F65CF7B37D015049A6FBEA2
C37F60201CCCECB06B08043BDEBABB3349E5BC5F4541EFF95009A249521F7AEC
CA252BB3167153A24382DE162F08CD88369EBB2C5F4F2992754563BABEC86698
13A90B9BFDD16A5D94BB64DA7E8389C881A0743F50787DBEFA6E0DCEF9365F51
4A0A91C538700A46E2D0B35421CA523490B55C6B5F28D5374809EB0CA5D9643B
6DC54EE23749324F7A66A747B5028AE7FE5C28BD51DB6AB1BD0A0147E9BCDF28
AF89A4D0692AA8D6F92AB8F1B9E1A350810E6A7BB9ECD053C7D390DEB1A5552E
3A18B2E9912D63AFF2AA237958DEEF85F62671426A6FD4C7089DA7582A583F2F
C1302F182A8C156A52C0C5DDDDEB6A97287D89D7EFB354EB84DAE5C92FB94D0D
39FB705653DF8500DEC81DD31EFA3E04B5FE8BCD9840167A88ACA24933E24CD4
6D5930BECB3DD80CC90E4BCF70D313D65E063B530C5F0092EC98B39AD7A3BF5C
D338444227024609E3F2813362A58B24ABFADF8F241C7D505EA51205D63A0703
ED1B58310444C4348575D2E99EE376F6D68992B82DF239947017824B96490BA2
C9DE8024F7755297D0C5724CCE279899D5256288A8A68734C5CE7AE4491B81D9
558A94F3D83BC75FF682C15E8969A82C7A8E07AE342565F7D19F05595E161638
33B2D0B4CAA88BC37E81EDB547E48413B0B2626CF4E4BF64B385E4470ADAF19D
2F12E8B1863B211CEA056936439F9F637C1116405FAC3CE16817C0274AF2D0FA
03C75BD28A1437FB4B40E5C82E31E638E64D6AD8550C26E3C4035C4E63E63715
1B405031C66665331896B17D2272A88C1A0A87132A003A553B6AAC420FBF0AFE
2EB03577DF8A964B76C96196EB7056CD5FF2F6409D963D89EEE48A6F67A514FE
C3F92B0538FEC8CD9F7B8078685BF48CC245F864DC6AF1715FEE87ABF20E83F6
E3EB93266141D12A5044AC6F52BDDE51396DF837D6AF7F719C6AF609ADEFBF0F
F67D18784CF49CDF66CC182FA1B706B900A5886CC43455C6C44E7A0B8D995C35
5DF37F92AF37B1A33EEC425FB7C04C095A6E91B47114C4B2AB394C421E235030
28C4CB2A3D597095C3A578B53970B5B686D19E03574E8DA4D6CBBB3A70AA4F8D
ED8ECED9EB27F32701F9CB7C4421E67D1D3DE046E794B57F67CD5542D9260267
52D2EA078A6E3AF6896B8D6157FB3AFE01E8647BE25173D9C0204E29E58ABC09
EA76F151EE740E0D1E3E747A82271E4FAD633217F0546E5529089E6EE1C26BD1
E7E723E7D78ADA6CEA1ADA10887659F3CCB984A236FA4CB5863BDCD789A6D665
D55FEFAECFF1ED15EBFAA954ED6CC48AECAB4FFD48D5B75746918730EF1184D9
48A1CB576325BE79DDC45097D9D36BBEEA1CF22AAC741004841F4602F377A8AF
C301211D02FB0F06D383B0E306C30888B19DE052F6DEAE47ECDE0C193B535695
D96D82ADE8E8686685BD74DA821868D820A814B32C20E4F21016EAD9A52CB3CC
3DD9A1C2B5ADF5F9861632EB43F94CAAA45CC6A99CE73410353CDABA5C69AB24
F141232B7B2C1DC91A000461C5E76FE8DF2A47FC87C5E3CF18244B3B1F16548D
DDA52B2000E8E32431A996B0FECF1518FEA3BA1C781CC42005B99D58516F1BF5
9FC142DC93B57B434DABB1A9BEA16561A8F949289BE12FC8058FB99820FCF9F3
047658ACEA38515205A61814235C99CD861FB4830F7C91917E9858A43CB97A06
0C90416FA37D5C5210D0BB0EFC9F90D47A97E8AF8D1D86FDD14B6B270102A6BD
E9004BA25DC78D32157B0F5A5FCFE9C22C6E6BF2368290F3293330C748EE8C70
E754DB338FBDAE5D4D6EB47E9C146014BF9630255186C0CCB623AB938CBA6D95
C14B00710CD483A29E8485ABF647BBC8E6BC7836F37A20C52AF18205565F74FA
2CDB3812DAB503753CBD6C02F07A07C7D2ECDB43FBF2C08175F1D4A7FDAB8389
03789B723F6CFE03752E07391A107F8791CFE077122B804F6B6D025A97EEAFF4
3C606BADCFD972B243FBF42973BBECE50DA5F07337479E123CEC2DF747B91D9E
1C54A105463778F8DC536F8064015261B3B89B13856E8C83BB94597DBA1DFFCB
040B2FF7CEE14A89D33862337E9DBA6EEA67D00DE061BCDC2D8F931EA6F7A573
C57D97B57196312CEAF3ACFB6CE4D8CB5AFFD6FFD4FF8E613AA7E60E5F4AFE92
EB90D58884910A954EA35EB491CA2268692152B813342BC5029221021D8A9146
0EF078E153CCC746BB46BB2EA31EA37F25CD6D38FA3D637606AD2FC87BD1FF59
6191BF0EA2B214D15EB0F669D04EE4F3E4823F634BE2FA5A4F855005BB9B89B2
E3CCFCDED52D6E5131D094BA8C89414A18948EE660247E9C2A7AFC55C3FA9121
A9C12462F581F7EFF8564069FAF664F76601A025E4B1D6BF14DEE35D348C61AD
87065859E3A3DA90E469303139B0A735E24EB538EFC355DE418F3ACDAC41CA90
9585257EFE6B8C45AB0EDF192686600920BAED3A0DFB7162822348ABED2AFC5B
2892CFE8A33E7D386E3DDCD49666413D9971304C2D445FA09F0F1110786F17A2
2ADC32E032376C704A8FADB61ECED82521FD48011F7969D20CA2F7A6AAF2FF36
575434CEFA50C86D9C444A63D5C444FCD6ADFFA973060EDB85CFFA9BA1183E72
7423AFD71F366D561EE19C0ADFCB1F9C935781D22AA1489C926F758419D8AB87
68AB4602511968D6B021C3D7F41EA05A0CB2D69ABA96673E3925CFC9ED05E260
EF92A6F38BD60899AC9D03BAD085E620123EE389C826F0A1204F1C28E7F31108
6063BDC642C709DD4F0539C98C450C67932279DE57603BB87CA17E9713719ABA
00713B89FB09BFF9BF49D7FFB923A68D4032278AA7A3F76A25F14899714F295C
E5FB0F234A08321883C68EE6AF858F058F0C3680E89C9CBDC472274ECDCB62B7
64D7495F4E2E8D693E05A26C16FF4B479C59DA3C8B74A15455D3A8630BC7CBA1
2A8A9F3F3C61C365F6476A6752A189312F1BCAC1E1BFC49068A60BC32326C2D3
67FCFC0EBEDBC83C8E7745647D36D1CC2085FB20B1F2B28C1583043C5575ABA0
8876D2FA4338A08EA2316227D1E70CB8742455EAECCEA20772D03BBF525F66D5
E888CF03F13381FC886BB2A835346EE3395513B9EAC8B4391A04CB2F4A2E2736
AE7E9B6ECAE0C8088A6639808665EF1A367DE8281C047AABA7A8E7B5BF257349
E08BEB0C79ADF12CC169B8E2D845AF9B758C18152D921E1F450000BAE6AF1023
2775857EDEBD007A616B3BBEFEEB4D343ED3208DEAE0200D0365C603A231BE39
3BBEC6BF7A795D8C15DC8E65DD4B2D08392ECEA157FFEB1BCD9D301A3F1D3594
6CD04FD529879DE259B2675993D2686304B0CAE37B0575AB3A9AF4C229F1C25A
2D8FFD104550CAC46D91D36631C12C39A04D5F9A79B74A0EDCF2D2468C5F0B95
C6D70714D11D6955B0F8DDAC8B5FCC875B3EA97732A9CE3BA18BEFA880F149FA
8BBE8E95A9E89318EE6E165881507E354E7FA3E88E2F240CC76C71CCE258E386
FAC5C41C283E03A66B0FFB638B2A73A62400CEE1513825289E59CC5438B717AD
29867C3E9022ADD0A453D609382D6FCDF22EC365DEE23B67304DAA8CB5E0F013
682F4749162B0E8255880343E49C1307AA3B5E78363AE4D391A5E4BC1A6A0470
02D09BB3147FA30521980A2F726D59C257DE88B954ADA3C9A1F579D4892EFCE0
034CB58787AA7232F96AA9A9DAEC48C6305D480C37587749033006F44D700CFF
FE1076A19DB6F64CCEF14B3F224805638E9941529AC5427232900913AE77B108
6F2B4C0D703AAB5BB187404E151B275026995107A1A5E8C73B1A0A730FA46865
23130F73E21D4163B32071E26399780E01EB91BC7EC72322EE38E1982157D621
693A9A661CFC2AC71359ABEE7D552CBA9B0E94FFF36761C12C01A01A780A4C62
468C8F105EBF41395C7FF1BD13F7B97B8BDAF3400D60E5B815F0A3BC3905ABC9
ECC6C0B56CCFA9549BB81C8188C2828A974B3DC3085DC5905455A8E27A8BB941
115296673BE621EA16A1303055F98447C3939544D09DA67D3383B788F049ABA3
CFB029864B395876543033C8150E80940B4CAB6D230A376C8759D3800E7F82F2
E8731154CF9BB33CC8C54E71E07539335421814771C71D8E7F864B0B79410DB0
831840FBFE69C2B90A4C8A571FC4BE853E34F89891FDEF7FF9ECFB5C41D1ADD2
0AAC518C3850BDAABE1DADEA4CC419F1C78F0C27BA3743D40997008A94250715
D47F7877C71A385C3A77DEB03D33F78D74E4CE1171584F74CEE9987331FAB870
93585A1D3DB55EAA412EDC0C1D6FCAD13144A0080E532E57F66FAA7C377FD1E7
344F76297C38FADDA24A07C938034D5D9B3225CA23DBF5CD6EA751ECA522F4F6
74071F5BD4F9C782873F26119BB32115266D920DAFC57EFADDD3B8E61965392D
DF4A5DBDCB596DB450CDF5F4C219C8B3E7B1C3F31F24B6A464FB1021F7E2CBFB
420524EB953E74EF0A41F12C2E5ABDF70EC3DE174B8385A4361EE1B0AFB5068E
DA15F7EBFD15375EFB291F5BA29C8567D7683B594102C5FE9BA16C9EE9BBAA5B
E47BA7EF916B6A2EAFB65174F16B71255F1F4D32C77D6E4537DB00745EC404AE
7087F18FC5CFE0EEB094E6C5A9F9F11704AAF56D8924B379559DBD0E6273A87A
136776F920AC8F981994D4C06B242A7E88921ADD7F0D15041273690DD69CADC4
F919ABA46181721F31D19568C483E9E979FF41167F13F8EB33D3FD8989C40F43
B1C83F6A77CC30D5C6344A3E267618AAF0F4E5B7678F96A4B3894F22D04CAEBC
AD0D22E4E3FD43ECC3292512E58CFC8517EBABE3AABE46341E9E98ED57F96A98
69565FE6BA89B8D9BF3BEC6A8D1DE6715C7DF6BF9A21E13F559A649130A71D7A
F8D4A18114F05D50B0D8ED003A4A6C44E2D02EE583BFC462D81413D41A51BF79
DD632F0055D16BD4E281815BEB60FE5B9879542707510E49A4E8F4BAB7658434
BA4757CAF14B34FCA46A189CCF822573D04D66C00C28B2A1F41E2406227E3C7F
C9A8A22465ADF83C474F5B19496C365B70374B233A32AC347D7BF19A3137D025
06B6E7FDCCB88D4DFFBEF51D6FFB5883D33D9843038C53FAA6C278897701F215
6BBEE421BB2A6F83AA16F3AE2D6B2E67DFA6A403A69AF94C4D150A1136EF822C
4D4A289E8A1F16F5D846F2220FBF86BB8ED5C3FA2F957B675B8B1EC0E835010E
19ED9100F8A408288F5ED295FF515FAE0F8D98F3DB8429E01EB3F9E10B51BE77
B4FB04CB2232491FB0C60C5226E8041880881B5770FD14F50236E50A2169204B
4EA306465C7916B0074CDD4CCEB8F6C30CA52EF93D3F0CB27C9C745097068567
BBD0BC05EC5C580F1987BC1C259AA12EA3F3C332BC819279E56FC1976A640F93
FA574D342571C204BBAD7DE6DF7B3BE95608FB0B7376D701A2B655606BAA3738
CC6831090FB756D71B33CF6A2E9E62BB0D6DF510F338ADFD1EAC01B2BAA932ED
774BE3BE3BD979BD14C6A73284E28E016C62D5734ECA00597B0C30DABCF15ACB
E458BB871FDD69089C6D3126048B20162FEBAACABCF05CFB7919D5FB9D824BDC
C561C3FDA480F029E91A1442432211E0A95EC604D0A8E492EA7D137BD22578DD
AC9CEA9B04D90435F57FCCEE6375BFEDB2CE528D058B6E11CBFC08347B0D5F0E
3CCD6226261E21EF45684865A03DE3AA75BB54FC98A2200718F6D811A852A1C1
A97CC0A7458B9A6D05B96F2BA3A8417A9BF35EB53743AB56EF033237D7255BB1
420FF3233520596A11A6939D6635B721B31071AC3EEF2F822AEA4EAC9D90CC79
07A36A5E98E90B350173F0E5ED500BB9750EFF88A70F4C360879760E6E7AF5B0
D936C9D277AE48806675E0960B445246347B7391AB6B23033E585988EBFD81B7
4C07B12C080C511EBB935370AE7C4368797DA0119C8AAA6AE12C341E20F68548
D13BB0FFF42DB9E7E771F0AC4F42E3689DD4D3D024FE286363CFBFCE9D9B11BD
432A7C9272DA495B71359CB04AA6B7716ACD5C66765BC01C8B410D45396464E2
2D0F4468BFE3561563E5D61C3DB4728567412438DC0A8C10660081998DD68C2E
3A7BF1DD0159A6C4F59CC8C39E97C53CEF2548059720507BF6BDA740BBFCF156
AFB9385303BCDBA7284062165C0A181169B95F5FC63AA5DFC5635D0C19847907
A4EE1C693525B426AA918587ACF1CEAD88713B289E127005F93221C0A6BBAE29
17F53039BF6BD481DC82C2BDA003EEF72CABA56F57AE9F78A3FE5EB4CA199748
820178A2004C2E36814A0A50D720DD530F4405C0D233F39A4873D890BB193723
A5CBDCA5338DFE882F29DD9CBC8A98CCE3383D08E81FEFE0703E9544535E0187
917464D882094F1C5059F3804F2C2CDF1CDD0DF0945960F772938D9126B4AE90
10DBDA8CC01A471BCB94891EEF503440CEF79FF103E9B171DD1A073C754560EF
0DC8512E10440EF1A9E6DC4EADF0710EBEE540017DC70B07785C5DFE1798679C
BBA989685176F026393F49B240A65F73AED95051BDFBB9FEFC6A36B6FC76F46C
17EEE709FB1D56B1D1D014C58557FC59B2A21392F7BDC4C053CD33C73723A102
1FF7C27432C4BDA952B8F115C3FEF8E886DF40B99F86BD87A7C6CC7E89BA81EE
6E462BBD6F51062106D8B86AD9F82921402BFF6F080A0E110DAEAD180D2DA082
42E510B2F7A2E3BF20AFF80A66FAEEB2845F6D447F7B0BC47782714682337734
11BDDCC320318D5BD79B2023B137CCAC0680AB38526268B869DA1C0E2FA789DB
C5C7D10A76C5023E2496C4FD094BCD3575B35CC6E0E408D36060AFE02D76B2E3
075686AB77E9F58F6ECBFAE78EBC53E2678AB180F127DF19D624BBA8B687B02D
062C7B798B247BF551BD9FC2F43C82794C0CD666A25D66518586780571A1AEB8
1A68AE24B39753C05F791B542A86657B3A8F94914B4476FC3D5220B5BE05442C
E8F58C7A9CCE773198F976C37C7AA14DECC9F8BE1D4C6E43EF438CDF5D150539
BAE1D6043194A4BE75AE3187B9D56671A5E0A77A9EB96BC6A50AA6B4B6A230D3
96B8972F1B74CFD024948B60AD093B98361A95649D6F62C306C62DF4DA32C9D1
8CF11E38B823FD0AFC0A0A91CEBEB656D7ED4622F58D0B4A16C4AAF88663508B
D8DD0F3BC79AF0C7C1220469040C73874570CEEF325D91DAAE876BD929B5FADC
6372845A9CE86320741FF3F8FC2CAFA02C741198AF6A356D8078F54F98BB34ED
575CBA0F1CCCDB468CB9E1F204BBF100226E5F46F97D6667DEE90F6A18F429B1
68C80E4539020E531E2E03909478A5C5BD250CDBA12D43A1A0A9C4701A7DB168
E7EE5BC6CC0E6EACBAAF3FE1EEE02DA40CB86897C0171C16163D90F5FAAC504E
3638855EA29B988002FB2BDC048F4C0D47ACB25DBBC0B6829B8571C0CFF80BF9
00B909F831CFD01D709F7AB97C94278404F1AD7D90F3637033C5734A0C6305C6
F82EEF7DDA8ECD59C59BD1CDD0BA57280026A40D7FE8ACA5E8E13E685BD96E4F
AE60015545027C5DC2F7CCDB29F1C4CCDF2F3A5AF6DBFE3A382BA6385407B619
9698BD0C98FC7DD5C1F81EF11001742B0A4F68952B762E3B5474FFD649C405F6
3B8D902D4AF524DD1FFAB3EEFA241933EBD3947C1A130C3F1182BC26575B80B5
8FDDCCB2BFAC85DCE15B03C9502B2D1CF1AB2DF2FD3662AB8F3CA168FC5575D8
4DEBB843E83A5E9AC3D6533120E4D3E7E78D7E5E3B97101133884103CF53F8C5
E6A84D714754DA5D76D3814913CF3F1D6EAE926F436C08003E4376DB426E6677
BD01076E31FEA67A34CC51CCA1A102DBFBD6EF0BDAE5181E177DC656F6A8CA39
76B7B511F8BF40FD7A1A9849B65DDAA51BF4F40F49CF050B733366616A8D273E
08047C568A03B1CA25290AB45E26900C0D7629D86C02E6F4D2FD8829F5465234
1C865CC90F59C8D517B6262E2AF2E61F8D1ED9B76A906D9A82A6AA1A1283E335
F4884B4AF751DEC09D4ECC573353F341308612AA38B982E46F3E68E096127F30
D49B9C4542B316EAC205AFE2F3B0CC8EBE6AE2886024F2233CDB894DAFCB4F4F
E972D4E609919B219E3913BAA8412653B1A58428AB704637703230A06980FA60
2729EE4A27DFA75EF4129F00CD7B065468B913E037A70722DA48D3DE62679884
FBBC374875FD2FE6B68D23B7B6C46143AFFD6E485390568018A893435850535D
A2DC26B9567BF2A913FB2CE662416D2C9FA42D1398DA286E386E798E223D710A
422C8FC3A2B4C3790274013C34A40BE87E0BE3F8798886D1767919A9039BB4F1
1F1158CA41F88EDB34DAC5AF337AB00C151E5AEED3FA32D369AD1B8FB6ACFBBD
8CC0C537C1CDC3BAD497EAEE22F580B500ADA16BC935D780767070A78E103BED
76A543BAFD03849E3BEBA3CCB891F015E4E2BB33DB4A8B3134A3FFF5A32D15E4
2C51A5167881C063971596525019613A21D5FD9B56DA04FC5E6DE5691BD5FD9D
6C2EA6224F36487EAA03CC29B7D859BDD2FCEB9DA30A2BB3936B14623A5BB90D
B4B6BC62EC7F7DAB3EB940F03369AD9E9E25CC4E320077D0DFD7D713B73AA1B5
455F4C3869CB74C6265730A98F45C6C8FD1CAAD86EC57D59177E91A4A56DFF83
09F40454712B445A443B3D20344B65A7E0D32D91722985C15907EF12290F0864
5721D7171DFEBEB920CFE3720743B2F69E440F77C523A84128BD73E08F8CEC57
D53B21750BDA28A8988D054A8C48C4A3B0B785459366F2AB48FA18536395E91A
F65F172CA24A95D3960D937345E257ED726C0D10CFA7EDD26D40E1335E1D42AB
092C9C421669863CC87F78AF5C341231B57029239EA064EA642810859396F0FD
C98F71A5BC0BEB527038F41E0548A6037ADED9E3B4A0231701E4C2008BE1DE72
42778630F6D93DD1F961ACC58B397A115BB892D68DBB56D0AD23D1F4272AFB68
1F23C34770662EFB31C35B3C0A1D3CD6DA2DBE1CA76FAE084E71D0151CC1EC79
786BBC75F2A50B2BBF924F16E6A2C204120990B322AD481D043B6165EC862B38
62D2F22C03ABB72F3FE026E0D86E90C39BDF733025835A85DCF5FF2A7A3A6A06
73342E52FDE52D1360C247126303B3D927C20463BB05504207D598112D83B907
46BEF3ECBDBF561449A72B650CC63389F49BEDDCC0F8854B3E287E19061C5C45
56155A651BE62F01A45953A064F5D398211B736886794E8DF3EAB4E72BFB41DE
4EDC82EB359A0DA2B491EB915118A084FFCE35D5DF388419D40CF49BF9ED53DB
D3076661D0BF5541EEBE5214C0E589E54BCC2E0721419078FB0DF34B48F1E3ED
7B1A029571D54F89CC09A383505CCE589F32278D20AEA574B8D66D4E43261465
26C6CF6BD7FCDF889F4EF7A48D38800E8C06A35C81FEE3F17CA18C2C9B2D4FDF
E4C1EC51D16A427661E9C8426E141D28F90141A9719E74800EFDE98F1E5F353A
0713D87CA55BA5EE9F3F686456B8F787D7CC293A62AEA6631D6F2BE749AC5AFC
674EBC4224EAAFC9E1706782E9F449F7CA948EB882249C6AFBCE90E3BE69BE33
34634AFE1EDC9D28C96D55321CFD0F31E57B505510C2CF67E755BF0C09CA2289
1ADB1C2ED5AADFCA29E0496E770CCB581728AF311E5EA93952A532B34ABB2E95
C579F7D11893FB0EB7948753C5D0F62F4B729EDE6EC17DF5CDBF25F946C3121E
82C0DFCE24265786CDBD267EBF26D141C75F53F0850D00BD0C4B6CCE28A6436A
7985C4689BC9C3B765497DE2FC478D45A7C8DF324434310EE0DA7206DFD94821
6A222BC44C8F6D3D1D8FE0D418147A285324249CD5F710D96BE0A38A01E69FFB
99C3D46847884A6539B7DE7B818401CEEDFCAABE8E6BE1F21B1D114CBF70F832
99FE030806BEF96DAA7D72CAFED16D3045E3348A44B8CCCF67B963604A636B24
EDF7E110E52F5D5C031E355E911996B79C7563DD941E999CD65251CA613D3012
4D01A9420B2F6313FBB89ADBA319F15C328119E2F207C51ADEBA262AF31B2E84
6B69E98B428D5DD914C8E99E44C31114B07871ED00CD2FB192A6117D1C279D3D
B14CE098D30038B30FFB28388A3942BB2019BD5301886CD5D0F83E209D804F1B
279E6F1C7C8DED4697B4FB09A123728DA703DB08A4EA9570CC2FECEB1421C231
54AD3FD07869FAFD33FF3366EF277DFC4AF6D0AE6EB349F1FC09DD50390E88FC
217BFD9DDF6085DF40892FEFF46A0FA10EBF5EEFE25CC6FD403CFB3BD1B70DED
0986652E1667225225B882A53488D2591B5C4CC7F97C1ABC273F159C8E52DC07
E2799BB12795F5F46F1D3D0C5E1E0CC9EA7B47EEA548BED618B25C36082F618C
7C9B78533264CDB3F9558420DDA59111879646158CBDD898F561CDCDB84D4F27
AD37F0630A3C6D57587FA6CC99EAABC7C4BA4CBEAA90DA09056E35E7EBEE6FE9
3986C6E3693C948AC94920A188EF2B5FEA229055383CFBE41718BD4BE8C679B8
826F7F17E5F5D569D9FA74B8EE5EA639B601C5F4DABB81455C811A855704DEE4
8A4C0F5CE154DF4A421BFB1EDC1A3312FB8FC2DF756A9C15DFDF514915BBC071
9878231CEF6B72494EAF7D6082B23D97ABF0C72A70AF08040F50E78C4A52A966
85F1C8968E570A281EC4DA91D51C0354E744D95086526E9D0614E1A4431AB89A
23BAFC401CB0E989B13EA2230208663DA81A227FADE29BF13E05A926AA4AACCF
81422E9291885BFA5C4751B33178E8E33B7525D5447A3AFBAE3CA791F275D3CE
FCDE900A63B509B1FEEDEE6D1C2F5A91BD309F309FFFBC7C8431A12536B464A8
B89EAFA4628B9D105463735D470B03EEFCFA8F7A929DC5777E552E344842FCD8
4C38308EF23DA9FBBC346F1FA074AC3066D66BD0B0D502750247BB25ACD15D5C
9A136FCE1497E9DDD1BD310617132393C7714EEB5CD48E0390E7B897BBB5DE99
52CA13256EF4FA847C5BFA60A53C225C39132D7A088C7306545775F80DA8E8B8
A41BFEBE0D0CABC00815BE96F4684E496E1995AB382D3F311F01BDEF2A4B78FA
38A92E430B192AA04930C4C4557BC8526F69340E592ECE4CA1D5D3E26B3BC78B
34276C5D642C1B2FBA0160E1373F29D74A7CF820F1674E197E068651C054A508
2DE1CC9C289A09E5A308FBE6657EC108C52F9065D4F56EE97F10372A98EE3F9C
ED8A6E387B347F9E4509203BFF586051DBD409B4EF450DB5E4D6C6B1B6A905BC
933401054760F3A079E06E7C1BB28D198FF090192BD0FEE413E38FA28229A413
1805839B02CB055FC3EA42375BB856547B2562CD79B94B091F6ED73BC9CA2FD0
8CB0BC71EB5217153B66FF7EABD26171C118162C9F82BC3CEEDA41FCA5400A9C
6469F0D97FBAB2AABFA88577CB66E9CA777F6B4A61CC9D677B0BDBC035949540
272BFD22F1B422B0FBEA87839A688443EC011796F76936B532EA37986750ABB9
9597E96DBC95DC7746EF6511C11F1B818F9E1464555988C216637A82DF0CBD99
B17C1239EC6FEAC18D3C6076B90C850F3E23E10B0911689C6B6B9D9713EDB005
BFE273B3C3B2958E5E01482CC5CA689D2A7F9AA7429458E0906AAD8244ED7E5B
2632EDB9BC0829B684673F0AA679188C7BF2D7023A678B8829CB73856DD06EF2
8B89EA5979B6DB97F966547AC0C0D8A3EF373F693583353F41FC0940E5AFA851
74790369A84481A052F9E45B6F03CD535DE62F64BEE11B3BADF36313028B8539
786F8331FF8B5505631659B88FC4AB5A394E7FBAB59FE50AF069C353A3BEBBC7
F70B0DA4FFC1234C7362BE80576B622CB46ADB6663458A55D9C6D203EEEDBAFC
44F0B600CC36111E31CFA4AA5A0CB2E35F74FA1A4F44C2BC0D4DA4445A5E1F85
3052970408410F6EB1C2C5FADCD8CDB3CA1FC7D68BC463F284810709512D9DDA
92E37CC525B999B046C0A73B53B87E53E886E77A247CA75F2DA43A6490BF7363
F6A4E6EC66BF381B9E4A0D3FD249413B553CE8FEC6B70E36FAD27B42ADE5F68A
9AF2EBBBDEB42F16038AA605CBF2F7E4BF5D700A85CD0E1E6BCF9728F0B7B061
480945F7F69FCD2E17D0BD1BA63A7B008FBB807627C611B71D73F145994DDD14
F48D8672D2AD063B67121340FC497DEE473FF0AE9FE46DFA7438D2053CB4F872
D376CF76ECA4FB891CAE0402644E83479EA2C90DB33DAD29055476153CB0238F
B9BCE619BFFAB9ED5EA6A607BD5F688B066BC31D94B5E94562A0FE6C2760DED8
57906DECEC2179541D782363A8F215CC58346952C4949105B6A569ED5FDEA6EB
8F58972EB0EF6818734E5B9C5BD6170295359DDF1F2B46A1EC414B94FC4CBD89
79B4FA38E27DF1DE807FCD6E1E8E7A7DD57398AA416BC7EF731A205C97B733BE
1BD0F69781CA9108A8C99FC44D5AED7695AC272DC95358729454ABE1D0A93D77
06C08A243980E9D1FAF669705E7C9A5E6A472FFEAF35D15513365CE60AF311AC
4CC39AEA4A817462F9958BFF6CF1817DEFF4B6FA28EAA8712F47235DF38A5DE4
42590CBFB5D912BD717A4DA627A396B844594759F8182C2D8897D7177996831F
B5D04C970AFA3452E5D87859DA93B4AFD862B0EE4585C260DA98211087C0238F
9BAF75A7C4134C4BF00ADDE3FB4F9CD60DE0EEDC9CD780A489B5682CCE1DB374
45593EBAA5246490908E310B2EEDD0FDBC5AD37F80E05BB112CC1CD336AD5AA0
B3C93561050CADA7F2914F778B1DC54C842F525FBBFF5E47174B03519740751C
1F4ACA5BCD49370E2BF7ED087D143B551F86B39C586DAD33DA3E7B88F13B1329
6A5794D9C35D88F75F7119DEBB1C966590718E1B422EEF2DD999E17E4EA796D2
7881B928A19FFA44D047F4F3F6747EED957CB69037360B3249E6694A24DA005C
28D932F2D7AFFCAB40ACF06CD2F7305E0EAB751A767F81AAC5BE2B48C7E48216
9B9C7AD5C53321EDF01BF65BE899FF68F3759F338B32E053286DF574C02F11D6
898679AC3D39F9FC55C357CAE00DDAD0D0B06F7AD69CE768E0408014AFFDEE00
1EE044B59EF84D27400782D0844ADC4C8377343FDC740034F81A15EDFCEBB220
5F3AF2AC3D520F4A20B403EEAF50450AA9C08E121D9708D12E90D1BBBB4BD8E6
8E25B764156FC2F6BD2B172B53EA21E263BCBBD95A625D7EF787ACDC0A530E62
2D5ED53D5E7D40BD839A469189187932C09A130F59BCFE7A0523C9B244C3FF15
4B129CBE4F5B508E2FB74B86D88D57196D556D6864D8DB171CC792E8CD5E43D0
24800F3E7EC87635C1CDDC50E434CAE3DC7CE649295145E057A900C5FFDC54BF
0D9C0B4F937A235C2417B29DA177DD2D1348588A353D777383971981E85F9874
98900489A777C9B5E9DD6C561B41B41922AAEFB3A719CBF2C5F77B1D2BBFF74C
518C728868E82484BBA845343B52A51A85A161CDA2C0B64E3A2D6EB9FA0459C0
DD02C5032AE391A556E06FE6DC8022CCF570726F24C7BCBA0872898A4D0E06D2
632364BC8889407C0EE424254EDF206F81353F71A579FBAB9D4E44EDC1DC4B92
2A909E5529215414AC13FA5B1B1354E1CBA8B5DF47C8CEECD751C6259ABEE324
1D7CC18869EC37A4AF47AB3D0AA4765FEC56CA1B9268249CE62B1D9DC6885C57
9CB545EDA2ADB0DCB3C7007F4A611E9D0511F45867E306F40DDC660CDC466D91
CDF6CD0E0290CD43820FD5291E768A405B52C4D828BC46BC823FA6ED82F300DC
91EC3B6BFD99A0653455F70BF6EA881F82D71AD528B9CBE1663F8E613BFF162C
D3D60C0CB77D719C15DA0A7EF017F47587363DA015FAEE3209023366845B3D5C
FFF49F98323D02A90AA20CC11EEF3A47AF104BABA5C6AA94F9EBA7CA600D8820
0B8AC5EA6BCBFA976484F18C0E43407FFF7529C7A73360168351AD552BB6981A
5161B70AA3705AA35C4841E5E84ECE2F0B8A2B335FC610439CAFDA86E85B1C99
0C5FEEA458470C6DF04DDC558A4D1CA125B1D9C37AE81FEF566D3AEF127DB533
83AA2F6CBB0B0876E1EA4A51E638798DE51310C461E78A3C30123DFA50D2AEE1
C1E26D7DF4FD62DB07E234DCDCA0F34174CAE85707433E804FC0DD54F841603B
AB777743C6B0C3C1242DE5D61F23F4726303D15E2EA6E9A0086E85CA18DC1E4A
ED6B731C69D3D8E9FAF32CA154EE3A473D8BBC060E2116ABFDAACCE6D9CAFEBF
29D69A46642ACE2C9F1971C698B2B2CB5262D671E03CD8E5C7479568442B5C12
B6F1B882127375B2423C0F363A40BDAA5D95C162B0439F43AEB06974D15D0025
82E7EA2BA41055D476FDCCAF6619A340470060B27568A7DA486655B600D1D6C7
1280A47A2D9D823CD99612A7D8E4D4C55F2E815E6B023BD758B126479B559BDA
634D6DFC6F4D6AA79849982462AACE451D67B6941E6DE5F69DEC673D59E74AC0
AE8BAD3B4BB689B4B43F0A28B98FF8EFC8DA34C873E5E14CAEB9E64C0B53B95F
74FCD3DFB03C43B1352C158633EFB401E24EDAA0F15BD44AB17171DDDC979DB8
F7AE826FABAF75FAAB276070BAFD7C64B3F2E2728ECCDA3AA945D2B94BD23233
3D1EC9D98A3C57A1A186B3FC76307FDA5B9703302FF3450509FE6B2A4CC0BB71
1162AA85DFD1FF5F2E4CDE7C4F21C7E1C93C3827F6AB723DF2D7131BD73C7380
8D6623BDCD0370916949B140C56E833ED605E9F68BB41B3C40F8E038C46D6985
2D0AA9D23EC421198AA7C9560FA7A66C5A5E2D3ED2DD340F11FA5D6EECE90BB0
21CD5FF0099684F3A209611719D9065FDC0AD5AC06AC46FC014B09EF05C09EAF
E71CC5AF3485A73993B98806B6B87EE7CF2F2688AF786C72E99BB8A3454B666E
FD860146E7BF5FC5F9ACEF194EBBCCB148832E6EB8BC6256C0BF75C407E2FA2B
0AAC6B0FBBFAB3DD468DBA4554EB2B2E0DFD0CBD526F17E4BD8EE8321169A1F7
30CB48DA6611E0ED9D852B94433BDE5944294F204E8EDA4AC198AB7BD2BEB836
159C406DD896329FC78A91711FF4ADCD0B9CC908E8408317EE63750D62F4E2CC
CF2B2D252E22B9A429468303D931539911BF9646CE011E7F6AEB17D41EF37ED4
D1F7B79A42B2DD1674DA76F5542462792675C26D52760805EE40492A596FBD8C
9B100510CD68D070784F0C2BF01E51143051880B380AEE66BECAA69596E20EF3
73E6754B04E6271A8BD6DE8B9F7E0626CD61D8A916C25C789C82D8D6C6F71494
A69596B768A8AE1638EFEB23DF6C0D93C5DBA0B8CD322713ED1A40028C4504CE
26813EB406AED2505B216ABBE35F039877824CBC5C4FE88E965BAA9A89CCF8F0
57766ECB19EB6B4C32F737F9B7E832CC22E44651DF76DA95290B0E2B54C7198F
BFA5D7543A59C4AE93549165C251B6E8A3461484C125AD54738E1519DAE24C26
C856AFD3513D7516BB0E84B8740D2AF7C7B21BEDDD677470F439E553156290A6
308C1D89F0946483901DAB88EE1749E662ABF22F313F9FB2FDFB71CD5EA83626
9F1301CCDB223581F469BACD356B09DD78ACCB083A875B47620651DA8A709926
2C9E6BA15920FC801C73CD5B06825A129A62C6F399A54715
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 54 /six put
dup 56 /eight put
dup 65 /A put
dup 72 /H put
dup 78 /N put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD75529DD9C606301104573BE52595C9B1077B0D91AE55242ABA9BD995B97
52BCF5C8B00400D9EB69441F5BF27D7BE31F67423A3C5A0DB25DDACBAC1620BC
E6A86358D4D8CB7F5BBADEA1FAAFAE84A72D0651115A552EA34758B8342ACC92
A24301AE3DD7CE12F28F247B69E8B560065A80608FC7DFE2A33280F7D016909F
822BA892754E5AEF31D662A395BBDCDAEA57F7C78FE64B0FB10B28C52B18762F
7C3094CCD05EB3A862384EB6687FCCA91D51B22CC22FB0CA8D4CB0F4BBA97C07
75FFE9C32944E91C54B0DDB7836C89B9B9F063D53C828987100560B3F66A7F21
D8266A9509093958D0758F9A24E29F04F2732C9B41EFA78314BB63E95F3F578E
B3D0B41C877CE655D16E8460D894623DD486CA1CBE5BA7674E41F315D3824503
B8CFDCEFE9AB8FEDFBF3F5A0AD37C94A21D9D1F042E9F1D5FECD7AEA05AEEE22
FB41DAB8F9041C564626D9A623B1ED71CDB49BCF45B16997DD3E2977CC55345A
4EB29406ACF4F84C3486D4379E2245DF669131DF9D937DA7EF8F33E1202C18A1
E2C8F9B172A73844A7A4AB5AF8B201E2E001F8DD56BA309E805B66FBAC323DD5
2CFA87E0817AD0004D0C33DBB3B3C253BAD3085324DA60C8F84D51CD706693CB
31649F5BB2B274B27F3638B59766AC98132623E77F6AB055AC5E0306FD4C97E9
7BA7068393110AED9C406FE9CC11F629EF8FF1010AE7DD60BD4AEB26F83AC589
4D0DB7DD93DCDC093CBBD838CF997624C9347B7EC44E68B94D251AC87916A9D5
B5A217DFCF0231AF59AE5A419568E2B22625F199F9735DA0EEFAFB78338529BB
7D591175268661C97580B1F987A8F5591C32CCACB1F138F0588B812279C49A48
C6301E9D924A765DABD3CAB2BEC8A3425A27C27B6A5952BE9982F297A5D9E90D
F62FAC22E4FCD76EF66D33D21DCE70063CEA58657720235F2371814CCB3DD49D
721204D8E5BE1491B52B1F4F05084DD1F12683B69DE199037FE9765E288ABA81
F0698CFA65E6C62F8919634EAF7C0F661EBC74E7174AE772CD90092BF013F2C7
BBAB315405D2D4C31494D21B41CD9D68C48A3389E8AF1C55748030EBEDC4B2E4
118524D3384C97BF7D6E56D8BFEB56F3B9C5A52BDF037940EC1CC96E7EC0001F
83849285DDEDC0462DCBAFE28705AA8138DFF573416E253066F1FA66DF6393C0
3E2EF1620993CBE5B0CE12D1A45EB505E76AEC6772B55459FC30098A25155962
C45CEA8DEBCA5B8602978A2236CEAFD6D2BCA5FECB33AFF23A68E0EAC9FCFE74
3A69BFDCA55BF065138C089FA54615DC82807118445C334C71FDAE1D01E38BFC
5C5998646EB229139797E51E2B694582DBC021CF40429F2023843CE69D9C48A8
DD0C3CE2F3FE8AA650DAB13A4E222E9C4B8134389A11D5D8AAAF91E15FEEE9C8
2BF4299CC7BAF1365C8CA87706286A539BBFFC63D7BDD0716A264692913C3F13
5B877D0355093C917F97A5E41D64E6B5E9B7BC3C89FFB854D3B472003016A947
6B01EFC12588A7BAC2195CE5F9064087F78B353A45533DD5F9A5DF0762943523
BD1F1179BEB9A4F354284462D262CA7B1D45B72E983AEE1D7DF81BB307079363
D1C1A66D0DCF357D1C14429B613092DF2C709ABAA9E103958C7F9748A803E9EE
7A013916507F89E7E2A7D96F6C7CF4E01952345F4EE3F2E3D1FEA02006F2FBFE
830E0BA2C46C829468888FE3ED873F5A759A9DE0AEF0443A4B6E5415D7A57DB2
6B8434F893899C17B86E5936F01BE3C3D41FD974D29CB89F572DF1C9BABE5EFB
25132BEB26D55BF514894B396D47DDACA7C0924C1A7E9CDE9847786F5883383C
FD92A56181C69F4F1C944B03F6AED7352EC15F1325654C624B6880AA108F5A6B
A134B00D20EEDE888DA4DCEAD3262CF69B3F7633BFD78D312907CF201304BABC
5DECEFA4EE8D534D25E284F3503993C04D01CB144E78F7BF54FF2F7E9C48D01A
B918D77E60F61929F32A892DB16B31668323CD850373D4C9DDB60745F55E3742
FC10E34825762782568CACEC2A5A22B0D29D0D63CCA7F9C0446226E794371BF6
860BB32BCC31337CEDE84F3CD782C2A307F69EAD898BFF3D955FEA127EE8DF86
3BD95020BFD253C41450286FC19405DBA984806B348EDCE842542FB26147104C
9117F5F8F664A5CF9087FFD226EC3E4033B3822403FCB85C79E136DA6602A611
7A6BA5B6E46DFA62474FA7556AE31207749AD3B8096778486E0FA01FBF11D5D8
381F0E5B89F583590EA6ABCC2F4AA5A281742FFBD0133EC1C764A6F8EDCD1CF6
C49CD9C46A8F19FE14F1D2C8060A683ABE3E50DA5CB23104E954C6E8081BA05E
29C45052762AFACBE66398B145327507C09905F3E00784AEA001AFDF5A7ECC77
EA1B49706E7A8B4C7A31E76639FB5FA52C9196CA46C5A96217226455CB58E77A
3969715EC49103F19F6933186A5DEA66289010CDB1170B5C4D656E7B41EB1F91
1D94613886168EAC84AF47356E9F8E4D76B26671BE5198731EA1689B18D83F26
B92C98E20DBA3174A479F115CC2DE951C974A86ACD10911EF44228D6030A2698
0BAF96E5B8B0375153FEEB69960B7456E704B74EDEA0F27309A0A9AC22D42091
84BDDFCD38078A0A8773299334ECA4CE004FD2B60EE0B98CF03C8FCF46B3B469
236D50881BC37D0C508FAF0FBAB90D364EE0AB915D4FD997F856C56C84BB8052
81C1B4C082010A8EAD728D1BFD30C4E4B612FFD1767D834FB1DAA67F3D01C291
21CE16A02C7BBCB3422047231172DA01DAF96F121ED5BB2E6AF297D09DDD0DD5
2DB1623B9FFCA871C057BF9FD876BDEB49C24B7E24289153BB48B060B6142CAF
1E5EF69A0DA7ED21E9618413E34E3F11DC4AFBD6A5B07727787F1C44625E8C1A
058537FFE8DE0BEDD6B9E821A82505A3581FB117189D39E25007D9A94BDB4C7C
C77602FA696693EF0271CEC9BBA6E219F586AB2F3D17B5A34540E8CB3A8661F3
F085EE066380C517FCF03682F99CD4B659A118EAAD434AE9CF8DCEC792CB728D
E8A8C47F447EE27B952301326E65C9113D0BE6D212015E526B68321558C6C2ED
1DC83BFDD52BD88C92CFE5318DB1BFD6199D9D2BA3AA57262407ED9CCDED1226
210375201E64911C5325B664FC1E150E02DA3231A23BFD8DD023A3BE218E6576
231BF843B65F5B7EB97C48857D314E493E7EF7A9D4B95663AECD038744534628
304DE142C467A0B0B342BCBB8F6F9C08B63E2AFEC36A55080A5FC87F24FAD5F3
470BCDA61590489E935BA08AC275C0342EABB50D77AAA01814395D407A80A235
E7E338A317589FB23B0F0991FF635FA33809C8D70E8288F8A8D23B8C422F7EAF
40D5567EB8F290F368DEDC56163EBB37E78023CAC9323BE6C29E7FE66F608B41
570E56B328E209EA6037F385F418017F10E0B5715EFAD08AABBA441C97065226
879552603756380F634E36C3CBB28497C8412E4EC063D3250D224513956F5F5F
6B69FF6877BBD40B459E921366070B3DB4982222623654B5AC7E064AAA6048F4
D07EF08C0D7D1EB096194B61B7AF92D7A199C489A3962E8995160075D96C5FDF
82C29FFFBD309A8F3C67F5CF85C0D59CAC96C4239BF8BACAE05249B6C8AFCE3A
C727345E363E240A0DBE4FE8ABEE6253B67D4A78CF5535D959D0CC58AA2067C6
3E6A32534893051EEC54C11657B5A87AA3C0D9AE6A7FC8D348A240B1209D9A8D
219FFDBFE3C313E0EC917DB2E6AF35A5DAB0ADDBB8397173FE341A49FF63B6DB
A64D06A67B23C82E0BE7F3CC8EBE47D465BFF6E7569511EA5F0F4E8EDA9BDBB7
760449D6D39060BEA4D9DF391A407C769EE639E816A43D5672E3F33CB6DDEF2F
5A1CE36A3EDE161CDB058AEA46B11170787B5FBE6D1805061CACC40D580A9A50
820780B3D82F430953F80913149D2B2F1C77B98D908D937CA709CAD444B25B1A
1CABA93C4EF7A17703CEFEDF2F1B57727EB5471F255FBD5AA11DD95C73F83340
CFBBFFFA16FA67F3D5BF5DF4C8930C27E9FC56CF1CF71CA11AD6B0F327BCF6C0
313EBED1692B656660FEAF4C1DE842EF89F9CE0B0B6B5A2383A7765EE6EB37D8
31E4E5A4C372D6EFDA32DE6E4FF6307B51588C5FDCA48DB841D533296FE0A3D5
65466B44D64278CFC0066047253D42A75B5D0A02DE14C07B93302779AA17A057
A484CA3945C8DD9ABBF883B0ABB0BD1DB418076F2281B8F6A6538C5F9C62181F
E8F3363F4D71C299B5352737E7D9A5B6F9C786C27EEEE66D01C0BF49BDCA6E24
A2707730B805EA390089785798BF2B42AD72661B0651F082AE2BDE83E736522E
5BBBC9E1EC6D9C844A15651BE680B429909A11EEFFB699C2EB3513B8F87C5B5D
33EDCD5C44F76F08788463C0BC7023BFE37C768D82C97D574F1C09073ED51B7E
3D14667B504A10FD4F47D239A9EFB2ABFD8AA72435BC590F44229B9DCF48C888
FAE7E9BC723DE364BC70BACE6ED42EA43F1F11E98EDAF2EA208940058B23CAE1
216FE7834B203B519B7308C82034DB1F1BBB5DB2080C3CFA63837B5E32D90A2D
9E23747D5CAE947616F76FE362D794E73CB277EE8C6532517D9FCBD9F1ACE4B6
C9C9E96FF20CBF991622E346CF848A8AEB1272D191654297B2947860F456BFB7
34E7A6107CEA386B9097BAD4173B8E302AE2444057029E04426B5BFCA3C493C8
A094FD7673D4A286E7FBB0DE251CFF8AF15D12D18E861B6EAA9F5E1850B90C5C
56A6FAA8536156C14AF9720D0C0D5392DD47BBAD6F3994985507AB121224A84A
B0799782C40E9D1CAA0EF7061684CF6687FE73316AD3CFA839A3F2DEB1949115
BC7724F679E49BECF9C565AF90E617E9BACB1065369A67C2C2BCDF0F02977B97
C59B048E385BD6ABA97DE61A47C30B7DFB3AC1FF2C71FC6EED01A27969AD7099
29C4FD812AAA7408FA3A0623F90A0C3202A6D705FABBABC49CED72624316B29F
89EEE44460C6E1C14F27B3BA1BAAAAD247CF12E008715B3F26DF5248AD41A2E7
5ED85F27880A465402B7344FDB2D8F577689EBEAA6F6613D2DCA53DAE212A36F
5D208E54485D1DF70B2A2B183E266519D538A5D554824CB18516E452AE332526
33965A8E073F501F89B777B4A1C2109C95607E3B1BDBB77773F591024A5D47AB
214DF68C24AA9BC2F2D4285DD5CB257F542883102A26EAFDEA3D9B4E0B689596
E8849976CC126634395799E0355E36D65A25701F4BE71432DFBC45B8504CC152
556E819343381C856C24C9D4B8455AF10D78414D0B1A1C7AF19C045BAB665CC6
4137F7D180B3B1B1A0A7B0F8A9F0FD005417630E0B6196F5815669581477FBFD
61D1BF4E5CC89E1CCE441DF5760EEDCDC217D1E3288592DD1A9BD6289E7E581B
50E9CF14F29644A7A3022236937BAF5A8646B7553D87C6FFD479E799BA30BABC
8D66AE70E3980CE748A8243D98F9BC9CC03021CA983C304C872E559CFA1783C8
50C04BC1F7ADD2005F419A1254C7EE1AFAFE02273701877C0D6E19BBD4418480
7F588C12163471A54C9D34B1B89423856ADEED1864A45A9311F4F48CF1E7D302
AF5AF0EEE1E67D0EA7822784E81A1FD1C82CCD0513ED92AC19F536D72E84D53D
874D0067A27E0650D2074CED7255589BA33397C76CC3921AD28C2F14B5AF9584
4E04C4192189B451DC8DCA65261BF1997AEC2AF93E8A74E9FC772C15031B0F9C
3DC0343AA710C4CBB2C8FE37330EA9C1C3E83CCA65BABDFE35BBDF10F2683E3C
FA92064F97B2B7EF8CF042BC552578EDD211A7F78282F13B507D4232D14668C4
6DA31A02D3D888EEB131FBE7C66C1BA339A61B55A96F1977D489C869F4772FCD
094F9078E9B98EBC3E5A9862A9CB1BDC4C534343234270329AF97976387E3603
DC459C3D90C64882DCBA6C84BA0C885CCED84E6A9B242B043A071EFC5786475F
58FB9136CAF191E973C5968FFB73B1E1D03C6E7EA859BB8AAEE1E278DC51577A
5F8473B6AE90327EADED1EE1FB46B9794AF9A65F6EE1A3B08DE785EE64EAD153
06E2CF66B31B49B2542B88CC4DADCFA52BAE1E0DCEEE01EAE7BFD2CADB9266B8
6698F231335B5D2B50E905BE8D4076F86EBE6F0A863A936B9B220EF21E3550BC
F62557B2B9BD134D9661F2AB00C72471A8E5CCD6E2E73AEEFBA5B9920774D31D
7320FA9D53CD96F5647EF738081A0F78668246DAC0E751BD9E70AC1A440F777B
EF1A5A403B6ED74F178BAB9642139F7DB7879E0589AC2796DEFF13810D291EBF
E9E15A5F50111920ECA8372BC3745290A6EE584117F337BD9AFC68B1F9E8925A
3E0183CAF07355E537366E1889BB6C2F3792E9E8C372082007C2CDDF60E74007
72A3CE76D0A6AEC6570C29106BAC70B0C445
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 67 /C put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B57252D7D87CFB7BE009E0E1AF68C57E2041CB837A1F9DA290FC07240D616876
CBA29ED23952F977F27ED97503F6C6CB48DA6611E0ED9D90FA865D099740C6CE
8A5DDBB1D6550B208321C365A5104F9ABD66A9238B8A2106AA74CAC58D1163F1
DC4A62013C0F6DD8A3E8E1A6CC6E553746D570A744863FD8EA705890890AC5BC
2F0A068C740572F045B32289A2AE66CC44A1C13FB8BBD4E1834995731D19B47E
7C2FE360AE79DACB95856B01EE39EB3C7C9EAEB3D47348C47D928BC883B8E760
6724D80DABC4D736411942BBA8CF08157F21D63C18924282193C5C8E44E09048
FDCB8DB2E01C8A496FEE2CFC19A3A0EACA508237C8BD988ED6D33D01EB548B14
61A546886AACDAFB7C8CA69056B1F428D7254298F83B02B2B8D351F4C6224F59
0D09878AF71FC956876344B2C821B3BB3A4EA8DE8EB346E75EBB000FFF2763FF
8713091A00716AD45D0FA0FCCCC6146EAF49A71260032268215EBBE57901EA4D
DD68E9586E221E391AA96494645973FBD63552D548D7E5B56061F384A431F37E
57308D4C29FCE2D18CF36915BE5643CA0C712CD55C42B36EE168EF8E11F3E419
F2B7C3DF4E23A07F6C0E13353F03D44E2FD7848BD7A52F328DC9AB7B93CFAF34
F7262C5F4C905AC7D43661E06670EFDAF578C95120CD467B7A7D2A212113C325
5C66724C69EA1AE40C0FC4BECF008AAE33EE17FF04D91FCA67067C1F70A48F58
B69937D6317FEB5D935CD25F63147BB65863FA08F2AEC4B1327D602807E54C75
D96ED5EFB4AB69AC1C7979AA0EADBCC528BBAC2E3221B85FD4D24DB03D7587E5
CA4A96834F5B2FFA32EB362A3B763BC7685BC712C51B82088D443725CFF6FD66
0C5E44C9577A056D9331D86F0D902852A37ADB89A363DE250854160FFDDCC7FA
CEAD925A9E4CEBC6D70442CE14F0D70F68EAB290DE906756B85A39CAD28ADCC0
4A74E1C54E9BD8A64C56BA1A35C20256FDCEB63A2EC683FB41CB348A328D9047
B02A866AD166F9C199554561DBE79EFB79B591B6C8BC1B490ED33125A524613B
9FC10AB8980561DB55526122D3D5E0557BC00915E9F18BA251E00806A73DA4BE
3B05ADA4BC027884F6FAF45C45C89593F44498F16637DB747DCD30F0C5C91B46
94CA2FE62D588C497F645D6B5B21F5B7BE1B68BED3DD83C0C75069CC3404BBF8
FC867CA9204D1CEFF7B320968B81CC1392E7406CF91DAD9F83696384E6741492
4DB532E97F037E37B8163670652AFE01EB8D194994A690FF0E404BC40ED9AB78
081B8759025ED7ABC65427F714025E68BA442949FAC19A4EAC24E38DB8B3D4B1
D00C0A9B0F4F7F7DF81FE4B3C4C9FEC3B599BA95F9D2F62A85869F25A9D3AD56
942F5655433B73ACBE893B6C812552EB78860F0A129489CF11D990764A91FE26
63E5861F9B1C6A638B0883FE112FEE5EEF369F649C43AFE937CF7C0C82A37019
A1D3C5D2991FD8CCC05A5F8866AA38C0052C0725379B95951271B3BC941D7A20
2F37756A709FD362A2F47624CCEC319BCFF7C84CCF231DA31B86CC8314988643
A922801A7AAC3397B67C26F03B1A7291ABBC123624B20AE7CC11872BCB43AA6A
DB4517DC08800A0068AC48266F830DC8325D33877D7CFC8A3E620F7284093022
F07197C1DAF08E065E1E74633431EB0887773BDBA1A50777D3518F31E41079A1
FDFB5330869E652C089670AC4EE38846BA2B3B5C13B375BBAF6107EAFF6EFB57
26BD47D6A7B6B0CB1D3ED62666F37FFE4BD4F2B80D6E3CB9C0D5FCBA25BB789A
9ADC439B42586F1C25FA2654E1BCA1D0FFBAAA54A0FFE5C43CF4C92E1963D75F
A15FBE3CCFC2977DDC8279AA4BB959FD55FC80C7ED28B1C8C86EEC389E036083
E0EC0780267C33E30ACC10D47AB5DF38C61C617655E92B5DFB21FB8721F8186B
2B62FC5A072278CF957FA891656AE065F345DEDAE6827352139B4CF44FCE5222
2B5099693F158E7AFC63020268AA9907F6E74448102203654C6FF599F351FEC4
F66BCF28E6083324C323F4A4E2A1260FD5DE3B9725C76097AB0F92413A1A6856
035E32DBA143F6A868626DCDAAD743DB2F624232E2BF7FE56CF65098D054042E
61413F20A432567E210BA9926D609D374C60ABDE8644701C51F5680E63CCF863
0DECE1FC3594857D1C0A09EEFCB5099A2E83CD8F8084902F00A35D82796700DE
2921AE3A91987B1A9C867738B4A9325D6694D527DDFAA09E070F5FAB7465945F
860C515F8C8E6CC6CC495EF425A6A412DBD0540B3BDBFE56459F3B2148CD62B2
4EC6A7E2E66A67463DC45B945BCBCEC75E70646D3717A9A9AA5F3ED4899A74A4
0D87F71533B1707E1B36D8565F120D3657FCDFC557EDC26A3598E1B1A29BC516
90A9BD7C19C718A8DE301E4FB7FEBFAB84DD768E7A2789B152223DFFBD5EB57B
6C889B4B1486BDADBCBA1842E4275B325C7E2A2DE0063C8CA3AA6B89019D37CF
E9832EFEB5F6F97D42FD046CE94F4AC72E1B01A3C218397E04C6D1D874CD6013
DCC8EA3F0178084AC5D5CC4A4BBB7748A61906802C5448F4CD8FF3C0C33F58EB
2A95F79561A8C9829B3A71B08A31075D21A7AD3E5CEB22E76FA19F6CF4DE9691
F1F29EA1A587445500D07BA104F47C5E1F64A174720CCA208E806531C7C10523
777EF710E77992A721791F4E0E76CB5837C87F379495147C97AA77E19BC1A5E5
A2A0B6EC3D9659B406A83FB8C92F9992FB0C321781D644FC343DF5832D128D6C
6479377FAB6F89C561CDA264E61E084E37BCAE81BCBBDBEA37E435E791C89467
508CC24C08419FF322AA0F017975B7F72086C28FF8A33D1EFC6FEF9656960CF6
D5586DB8783F0603AC932C4C242CCE499132952AEF4353F825AD5A1BF49E2528
B97ECED44DAD8EFE8224D92B9F12CC40017C0E36764ED366A3D4ED5A0E0B0B40
CE0080B698516F4BA0FF6B72C96EA1DBE027234E2DE61D4782782AB891ED774A
2310AD0C614A7169DCCD67380AB1348AD242E09FE5165E01183BCBDED6E8F292
01FCB4F3080F54ECE300184673D253D6A771850F1B1093962DA01C9516B6A742
6303E1222B933B159420D2B5C4DF89733AC5102A933BE0A95F182AD283E08A01
466B402D3C13E45485198CB97C79B09AC4F26D7302246E7047D545BAB340BE54
432948D09998AC03BB45AA3ACD6FB43113133552E7ECB34F4DD259AC3E391CB2
CDB180B71D5ADF8C10F5A41E6BDE5D3222E7038F65B515AE975881CD4BFBAB2C
A97960DE7D8F2C269CD86DB5437CD308132AAE78A0DD39BF6D3D47002CDBC2BE
0ED5008DC9E65E8942AA1B9B4D0BB894F5162AC51A6AD727D9E57E3FB97648E6
9C9952D87CBDCA351F4FCD01892601E404F6E630F86D600C5D7E7E008DF38FBC
753BC301C0252680486A4F90FBC37E801D3BC9417F371BE1FD95B4B19A5C4278
BDCD3C54C8266E5B8799D925DDB3FFE571E2765BCDB795AA28A80C61C07E630D
584C213A3D131C67357929B271D3C0D81C54E35F8C85721AE1480907B01FCC5D
7CB22EB5FE1298E8D6F8DA43370B62C4DAF2F33FEB81C5ECFBEAC7B2D30129B6
6AE5FA9B1C05278CCD9AA0395FE4E8434A6014930D728B5B4771249BC09203DB
8228F736B417058A7C1745C366BE86AC868584673BB9B9B6524E75E29D56AC7F
92AB25C046D575986358BA3ABADC8D68471A90D4D877AD2E45965070D27A8C2B
7A826A06BDC3E4326E0459D9BC8A974FBDB5C1BE9E2A7DBB6EECCB48C101215D
E734D791698B870532B30B454954E40F9EA32B91D6CC6A6C4269E9F35DEBE9BC
693142E231C8EC56F84EA98AD06C3C2A0E005938D5AE1F53EB121DDA17D8B572
2F9EA1E00CBB4CE8506531CDC5A4141266762412BB15A77EDA88E04856CF5979
8C310C9278C720301E34226D961D4485227396ECF3CFA1942F7CDD4338ABFAE1
D75F2A59B5575D1E00CB5D81C0522D6D0C0FC49CB95F54B38C5002244DC6A6AE
4A3A453D2DBCA90485B4D027BDC850C7DE1A7E640467242EE007C782A792BBC9
503F78DD9AECD4576F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 28417720 23681430 1000 600 600 (lab3.dvi)
@start /Fa 138[62 44 44 3[56 62 93 31 2[31 1[56 34 51
62 50 1[54 38[31 58[{}15 99.6264 /CMBX12 rf /Fb 138[53
37 38 39 3[53 80 27 2[27 2[29 44 53 42 63[80 35[{}13
83.022 /CMBX10 rf /Fc 143[44 10[44 2[44 41[44 5[44 44
7[44 44 2[44 2[44 34[{}10 83.022 /CMTT10 rf /Fd 136[40
1[31 22 23 22 1[31 28 31 1[17 2[17 2[18 25 31 25 31 28
13[31 5[49 34 8[40 1[41 13[28 4[17 46[{}23 41.511 /CMR5
rf /Fe 229[62 26[{}1 83.022 /CMEX10 rf /Ff 134[40 39
55 38 45 28 34 35 38 42 42 47 68 21 1[25 25 42 38 25
38 42 38 38 42 8[62 3[59 47 2[56 2[74 52 18[42 42 1[42
42 42 42 42 42 42 35[47 12[{}40 83.022 /CMTI10 rf /Fg
138[48 6[50 73 25 2[29 2[41 39 43 36 36[65 1[65 23 23
58[{}13 83.022 /CMMI10 rf /Fh 145[42 3[23 2[42 42 7[55
43[55 16[83 17[42 11[42 65 1[65{}11 83.022 /CMSY10 rf
/Fi 177[60 78[{}1 83.022 /MSBM10 rf /Fj 133[37 44 44
60 44 46 32 33 33 44 46 42 46 69 23 44 1[23 46 42 25
37 46 37 46 42 4[42 3[62 85 2[60 46 61 1[57 65 62 76
52 2[30 3[57 63 60 59 62 3[65 1[23 23 42 42 42 42 42
42 42 42 42 42 1[23 28 23 2[32 32 23 1[69 42 69 42 23
18[69 1[46 12[{}68 83.022 /CMR10 rf /Fk 139[52 53 3[67
75 112 37 2[37 1[67 1[61 75 60 31[97 67[{}12 119.552
/CMBX12 rf /Fl 134[51 1[70 2[38 1[38 1[54 49 54 1[27
51 1[27 54 6[49 12[70 54 4[73 5[73 6[73 8[49 1[49 3[49
49 49 3[27 44[{}23 99.6264 /CMR12 rf /Fm 138[73 51 52
3[66 73 111 36 2[36 1[66 40 1[73 58 1[66 29[96 22[36
44[{}15 143.462 /CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-300 -300 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -300 -300 a -300 -300 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -300 -300 a -300
-300 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -300 -300 a -300 -300 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -300 -300 a 0 TeXcolorgray
0 TeXcolorgray 279 132 a Fm(gcd)43 b(function)h(in)f(sml,)g(C,)f(and)i
(asm)706 372 y Fl(Sa)m(w)33 b(Think)-5 b(ar)33 b(Na)m(y)g(Hto)s(o)922
568 y(April)g(8,)g(2016)-300 925 y Fk(Con)l(ten)l(ts)p
0 TeXcolorgray 1179 2349 a Fj(1)p 0 TeXcolorgray eop
end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -300 -217 a Fk(gcd)-300 -35 y Fj(The)31
b(greatest)f(common)h(divisor)f(\(gcd\))i(of)f(t)n(w)n(o)g(p)r(ositiv)n
(e)f(natural)h(n)n(um)n(b)r(ers)g(is)g(the)g(largest)-300
64 y(natural)22 b(n)n(um)n(b)r(er)h(that)g(exactly)f(divides)h(b)r(oth)
g(n)n(um)n(b)r(ers.)35 b(The)23 b(gcd)f(of)h(14)f(and)h(12)f(is)g(2,)i
(while)-300 164 y(the)k(gcd)f(of)h(14)e(and)i(11)f(is)g(1.)37
b(The)27 b(gcd)g(is)h(giv)n(en)f(b)n(y)g(this)h(sp)r(eci\014cation:)866
347 y(gcd)22 b(:)h(\()p Fi(N)c Fh(\002)f Fi(N)p Fj(\))23
b Fh(!)g Fi(N)230 529 y Fj(gcd)o(\()p Fg(m;)14 b(n)p
Fj(\))23 b(=)g(max)o Fh(f)p Fg(d)g Fh(2)h Fi(N)p Fh(j)p
Fg(m)f Fj(mo)r(d)g Fg(d)g Fj(=)g(0)18 b Fh(^)g Fg(n)23
b Fj(mo)r(d)h Fg(d)f Fj(=)f(0)p Fh(g)-175 679 y Fj(One)29
b Ff(algorithm)i Fj(for)e(calculating)f(the)i(gcd)f(follo)n(ws)f
(Euclid's)h(metho)r(d.)43 b(If,)30 b(for)f(t)n(w)n(o)g(p)r(os-)-300
778 y(itiv)n(e)i(natural)g(n)n(um)n(b)r(ers)f Fg(m)h
Fj(and)g Fg(n)p Fj(,)i(w)n(e)d(ha)n(v)n(e)g(that)i Fg(m)d(>)f(n)p
Fj(,)33 b(then)e(the)h(gcd)f(of)g Fg(m)g Fj(and)g Fg(n)g
Fj(is)-300 878 y(de\014ned)d(b)n(y:)822 978 y(euclid)23
b(:)g(\()p Fi(N)c Fh(\002)f Fi(N)p Fj(\))23 b Fh(!)g
Fi(N)279 1177 y Fj(euclid\()p Fg(m;)14 b(n)p Fj(\))24
b(=)826 1060 y Fe(\032)930 1126 y Fj(euclid\()p Fg(n;)14
b(m)23 b Fj(mo)r(d)g Fg(n)p Fj(\))p Fg(;)152 b Fj(if)23
b Fg(n)g(>)g Fj(0)930 1226 y Fg(m;)701 b Fj(otherwise)p
0 TeXcolorgray 1179 2349 a(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -300 -217 a Fk(gcd)45 b(in)f(sml)-300 -35
y Fj(This)28 b(can)f(b)r(e)h(written)g(in)f(SML)h(lik)n(e)f(this:)-300
76 y Fd(SML)p -300 231 4 108 v -283 192 a Fg(f)9 b(un)31
b(eucl)r(id)g(m)h(n)g Fj(=)g Fg(if)41 b(n)32 b(>)g Fj(0)p
-300 347 V 363 309 a Ff(then)38 b(euclid)k(n)d Fj(\()p
Ff(m)f(mo)l(d)k(n)6 b Fj(\))p -300 463 V 363 425 a Ff(else)39
b(m)f Fj(;)p -300 579 V -283 541 a Ff(euclid)k(558)j(198)11
b Fj(;)66 b(\()p Fh(\003)32 b Ff(exp)l(e)l(ct)40 b(18)k
Fh(\003)p Fj(\))-175 724 y(Although)35 b(a)g(short)g(program,)g(w)n(e)g
(ma)n(y)g(not)g(b)r(e)h(familiar)e(with)i(the)g(use)f(of)h(recursion)
-300 823 y(b)r(ecause)c(it)g(is)g(not)g(commonly)f(used)i(for)e(C)h
(programs)e(due)i(to)g(its)g(ine\016ciency)-7 b(.)51
b(But)32 b(let's)-300 923 y(implemen)n(t)c(it)g(that)g(w)n(a)n(y)e(an)n
(yw)n(a)n(y)g(to)h(follo)n(w)g(the)h(math)g(de\014nition)g(more)f
(closely)-7 b(.)p 0 TeXcolorgray 1179 2349 a(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -300 -217 a Fk(gcd)45 b(in)f(c)-300 0 y
Fd(C)19 b(source)i(co)q(de)h(written)f(to)f(file)g(lab3.c)p
-300 155 4 108 v -283 117 a Fj(#)p Ff(include)40 b Fg(<)p
Ff(stdio)5 b Fg(:)p Ff(h)h Fg(>)p -300 271 V -300 387
V -283 349 a Ff(int)40 b(euclid)9 b Fj(\()p Ff(int)41
b(m)6 b Fg(;)32 b Ff(int)40 b(n)6 b Fj(\))p -300 503
V -283 465 a Fh(f)p -300 620 V -218 581 a Ff(if)18 b
Fj(\()33 b Ff(n)38 b Fg(>)32 b Ff(0)11 b Fj(\))33 b Ff(r)l(eturn)38
b(euclid)9 b Fj(\()p Ff(n)d Fg(;)33 b Ff(m)39 b Fj(\045)32
b Ff(n)6 b Fj(\);)p -300 736 V -218 698 a Ff(else)39
b(r)l(eturn)e(m)6 b Fj(;)p -300 852 V -283 814 a Fh(g)p
-300 968 V -283 930 a Ff(int)40 b(main)6 b Fj(\(\))p
-300 1085 V -283 1046 a Fh(f)p -300 1201 V -218 1163
a Ff(printf)18 b Fj(\()p Fc(")p Fj(\045)p Ff(i)8 b Fh(n)p
Ff(n)e Fc(")p Fg(;)p Ff(euclid)j Fj(\()p Ff(558)i Fg(;)p
Ff(198)g Fj(\)\);)p -300 1317 V -218 1279 a Ff(r)l(eturn)37
b(0)11 b Fj(;)p -300 1433 V -283 1395 a Fh(g)p -300 1550
V 0 TeXcolorgray 1179 2349 a Fj(4)p 0 TeXcolorgray eop
end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -175 -217 a Fj(The)28 b(\014rst)h(line)g(of)g(this)g(C)f
(co)r(de)h(is)g(an)f(include)h(to)g(get)f(access)g(to)h(the)g(library)
-7 b(.)39 b(W)-7 b(e)29 b(need)-300 -117 y(it)f(here)f(to)h(use)f(prin)
n(tf.)-315 32 y Fb(#)-9 b(i)6 b(n)g(c)g(l)g(u)g(d)g(e)47
b Fg(<)7 b Fj(s)12 b(t)g(d)g(i)g(o)27 b(.)14 b(h)-5 b
Fg(>)p 0 TeXcolorgray 0 TeXcolorgray -300 182 a Fj(In)27
b(ASM,)g(w)n(e)f(do)g(not)g(need)h(to)f(include)h(an)n(y)e(\014les)h
(in)h(order)e(to)h(link)h(to)f(the)h(C)f(library)-7 b(,)26
b(so)f(w)n(e)-300 281 y(can)i(skip)h(this.)p 0 TeXcolorgray
1179 2349 a(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -300 -217 a Fa(gcd)37 b(in)h(c:)50 b(euclid)38
b(function)-292 -14 y Fb(i)8 b(n)g(t)71 b Fj(e)12 b(u)g(c)g(l)g(i)g(d)
23 b(\()17 b Fb(i)8 b(n)g(t)52 b Fj(m,)72 b Fb(i)8 b(n)g(t)60
b Fj(n)10 b(\))-296 86 y Fh(f)-186 185 y Fb(i)k(f)24
b Fj(\()61 b(n)42 b Fg(>)53 b Fj(0)9 b(\))62 b Fb(r)5
b(e)g(t)g(u)g(r)g(n)67 b Fj(e)12 b(u)g(c)g(l)g(i)g(d)23
b(\()10 b(n)16 b(,)54 b(m)30 b(\045)43 b(n)16 b(\))f(;)-191
285 y Fb(e)10 b(l)g(s)g(e)61 b(r)5 b(e)g(t)g(u)g(r)g(n)45
b Fj(m)t(;)-296 385 y Fh(g)p 0 TeXcolorgray 0 TeXcolorgray
-300 534 a Fj(These)29 b(lines)h(are)e(the)i(function)g(de\014nition.)
43 b(There)29 b(are)f(sev)n(eral)g(tec)n(hniques)h(to)h(b)r(e)g
(studied)-300 634 y(to)d(implemen)n(t)i(it)f(in)g(assem)n(bler:)p
0 TeXcolorgray -175 733 a Fh(\017)p 0 TeXcolorgray 41
w Fj(syn)n(tax)e(for)h(function)h(de\014nitions)p 0 TeXcolorgray
-175 899 a Fh(\017)p 0 TeXcolorgray 41 w Fj(parameter)e(passing)p
0 TeXcolorgray -175 1065 a Fh(\017)p 0 TeXcolorgray 41
w Fj(decision)h(\(if)h(statemen)n(t\))p 0 TeXcolorgray
-175 1231 a Fh(\017)p 0 TeXcolorgray 41 w Fj(conditional)f
(\(relational)f(expression)g(to)i(compare)e(v)-5 b(alues\))p
0 TeXcolorgray -175 1397 a Fh(\017)p 0 TeXcolorgray 41
w Fj(return)27 b(statemen)n(t)p 0 TeXcolorgray -175 1563
a Fh(\017)p 0 TeXcolorgray 41 w Fj(calling)f(a)i(function)g(\(recursiv)
n(ely)e(in)i(this)g(case\))p 0 TeXcolorgray -175 1730
a Fh(\017)p 0 TeXcolorgray 41 w Fj(calculating)e(mo)r(dulus)p
0 TeXcolorgray 1179 2349 a(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -300 -217 a Fa(gcd)37 b(in)h(asm:)51 b(main)-300
-64 y Fj(The)28 b(main)f(function)h(is)g(simpler,)f(but)h(w)n(e)g(need)
f(to)h(also)e(learn)h(ho)n(w)g(to:)p 0 TeXcolorgray -175
102 a Fh(\017)p 0 TeXcolorgray 41 w Fj(call)g(prin)n(tf)p
0 TeXcolorgray -175 268 a Fh(\017)p 0 TeXcolorgray 41
w Fj(end)g(the)h(program)-300 434 y(ASM)i(co)r(de)g(is)f(put)h(in)g
(the)g(\\text")f(section.)43 b(The)30 b(en)n(try)f(p)r(oin)n(t)h(is)f
(named)h(\\)p 2178 434 25 4 v 29 w(start".)42 b(It)30
b(is)f(a)-300 534 y(lab)r(el)g(\(indicated)g(b)n(y)f(the)i(colon\).)39
b(W)-7 b(e)29 b(mak)n(e)f(it)h(global)f(so)g(the)h(link)n(er)f(will)h
(mak)n(e)f(it)h(visible)-300 634 y(to)e(b)r(e)h(called)g(externally)e
(\(b)n(y)i(the)g(op)r(erating)e(system\).)-300 766 y
Fd(ASM)20 b(source)h(co)q(de)g(written)g(to)f(file)g(lab3.s)p
-300 921 4 108 v -283 882 a Fg(:)p Ff(text)p -300 1037
V -283 999 a Fg(:)p Ff(globl)p -53 999 25 4 v 72 w(start)p
-300 1153 4 108 v -278 1115 25 4 v -253 1115 a(start)8
b Fj(:)p 0 TeXcolorgray 1179 2349 a(7)p 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -175 -217 a Fj(prin)n(tf)35 b(needs)g(2)g(parameters:)50
b(a)35 b(format)f(string)h(and)g(a)g(v)-5 b(alue.)59
b(That)35 b(v)-5 b(alue)35 b(m)n(ust)h(b)r(e)-300 -117
y(determined)i(b)n(y)g(called)g(our)f(function)i(euclid.)69
b(Return)38 b(v)-5 b(alues)38 b(are)f(found)i(in)f(the)h(EAX)-300
-18 y(register.)69 b(The)40 b(euclid)f(function)g(also)f(requires)g(2)g
(parameters)g(whic)n(h)g(m)n(ust)h(b)r(e)h(pushed)-300
82 y(on)n(to)25 b(the)h(system)f(stac)n(k)f(so)h(they)h(can)f(b)r(e)h
(retriev)n(ed)e(within)j(the)e(function.)37 b(P)n(arameters)23
b(are)-300 182 y(pushed)g(righ)n(t)f(to)h(left)h(\(the)f(C)g(con)n(v)n
(en)n(tion\).)34 b(Immediate)24 b(\(literal\))f(v)-5
b(alues)22 b(are)g(pre\014xed)h(with)-300 281 y(the)28
b($)f(sign.)37 b(Register)26 b(names)h(are)g(pre\014xed)g(with)h(the)g
(\045)g(sign.)-300 409 y Fd(ASM)20 b(source)h(co)q(de)g(app)q(ended)h
(to)e(file)g(lab3.s)p -300 564 4 108 v -300 680 V -283
642 a Ff(push)39 b Fj($)p Ff(198)p -300 796 V -283 758
a(push)g Fj($)p Ff(558)p -300 912 V -283 874 a(c)l(al)t(l)j(euclid)p
-300 1028 V -283 990 a(add)g Fj($)p Ff(8)11 b Fg(;)33
b Fj(\045)p Ff(esp)38 b Fj(#)p Ff(two)g(of)51 b(them)39
b(4)44 b(bytes)39 b(e)l(ach)p -300 1145 V -283 1107 a
Fg(:)p Ff(data)p -300 1261 V -283 1223 a(fmt)8 b Fj(:)32
b Fg(:)p Ff(string)40 b Fc(")o Fj(\045)p Ff(d)9 b Fh(n)p
Ff(n)d Fc(")p -300 1377 V -283 1339 a Fg(:)p Ff(text)p
-300 1493 V -283 1455 a(push)39 b Fj(\045)p Ff(e)l(ax)p
-300 1610 V -283 1571 a(push)g Fj($)p Ff(fmt)p -300 1726
V -283 1688 a(c)l(al)t(l)j(printf)p -300 1842 V -283
1804 a(add)g Fj($)p Ff(8)11 b Fg(;)33 b Fj(\045)p Ff(esp)p
0 TeXcolorgray 1179 2349 a Fj(8)p 0 TeXcolorgray eop
end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -175 -217 a Fj(The)26 b(program)f(is)i(ended)g(b)n(y)g
(calling)f(soft)n(w)n(are)f(in)n(terrupt)i(0x80.)35 b(The)27
b(1)f(in)i(EAX)f(means)-300 -117 y(exit)f(command)g(and)g(the)g(0)g(in)
g(EBX)g(is)g(the)g(con)n(v)n(en)n(tion)f(to)h(mean)g(program)e(had)h
(no)h(errors.)-300 11 y Fd(ASM)20 b(source)h(co)q(de)g(app)q(ended)h
(to)e(file)g(lab3.s)p -300 165 4 108 v -283 127 a Ff(mov)42
b Fj($)p Ff(1)11 b Fg(;)p Fj(\045)p Ff(e)l(ax)p -300
281 V -283 243 a(mov)42 b Fj($)p Ff(0)11 b Fg(;)p Fj(\045)p
Ff(ebx)p -300 398 V -283 359 a(int)40 b Fj($)p Ff(0x80)p
0 TeXcolorgray 1179 2349 a Fj(9)p 0 TeXcolorgray eop
end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -300 -217 a Fa(gcd)37 b(in)h(asm:)51 b(euclid)38
b(function)-300 -64 y Fj(The)28 b(euclid)f(function)i(uses)e(the)h
(same)f(tec)n(hnique)g(of)h(creating)e(a)h(lab)r(el)h(to)g(indicate)f
(start)g(of)-300 36 y(function.)51 b(It)32 b(ends)g(with)h(the)f(ret)g
(instruction.)51 b(The)32 b(\014rst)g(2)f(instructions)h(set)g(up)g(a)g
(stac)n(k)-300 136 y(frame)e(base)f(p)r(oin)n(ter)h(\(EBP\))g(to)g(giv)
n(e)f(us)h(access)f(to)h(param)n(ters)e(ev)n(en)i(if)h(the)f(stac)n(k)f
(p)r(oin)n(ter)-300 235 y(\(ESP\))e(mo)n(v)n(es.)-175
1209 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 0  setrgbcolor   [1.0 0.0 0.0
1.0  0.0  85.35823   ] concat   0.8 SLW 0 0 0  setrgbcolor  [ 113.81097
0.0 113.81097 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -175 1209
a
tx@Dict begin  gsave STV CP T /ps@rot 0.0 def grestore  end
 -175 1209 a -175 1209 a
tx@Dict begin { 49.40546 96.3623 } PutCoor PutBegin  end
 -175 1209 a -175 1209 a
tx@Dict begin ps@rot  RotBegin  end
 -175
1209 a -175 1209 a
tx@Dict begin CP CP translate 1.0  1.0  scale NET  end
 -175 1209 a Fj(198)-175 1209 y
tx@Dict begin  CP CP translate 1 1.0 div 1 1.0 div scale NET  end
 -175
1209 a -175 1209 a
tx@Dict begin RotEnd  end
 -175 1209 a -175 1209 a
tx@Dict begin  PutEnd  end
 -175 1209
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 0  setrgbcolor   [1.0 0.0 0.0
1.0  0.0  56.90549   ] concat   0.8 SLW 0 0 0  setrgbcolor  [ 113.81097
0.0 113.81097 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -175 1209 a
tx@Dict begin  gsave STV CP T /ps@rot 0.0 def grestore  end

-175 1209 a -175 1209 a
tx@Dict begin { 49.40546 67.90956 } PutCoor PutBegin  end
 -175 1209 a -175 1209 a
tx@Dict begin ps@rot  RotBegin  end
 -175
1209 a -175 1209 a
tx@Dict begin CP CP translate 1.0  1.0  scale NET  end
 -175 1209 a Fj(558)-175 1209 y
tx@Dict begin  CP CP translate 1 1.0 div 1 1.0 div scale NET  end
 -175
1209 a -175 1209 a
tx@Dict begin RotEnd  end
 -175 1209 a -175 1209 a
tx@Dict begin  PutEnd  end
 -175 1209
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 0  setrgbcolor   [1.0 0.0 0.0
1.0  0.0  28.45274   ] concat   0.8 SLW 0 0 0  setrgbcolor  [ 113.81097
0.0 113.81097 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -175 1209 a
tx@Dict begin  gsave STV CP T /ps@rot 0.0 def grestore  end

-175 1209 a -175 1209 a
tx@Dict begin { 39.09995 39.20674 } PutCoor PutBegin  end
 -175 1209 a -175 1209 a
tx@Dict begin ps@rot  RotBegin  end
 -175
1209 a -175 1209 a
tx@Dict begin CP CP translate 1.0  1.0  scale NET  end
 -175 1209 a Fj(ret)g(addr)-175 1209
y
tx@Dict begin  CP CP translate 1 1.0 div 1 1.0 div scale NET  end
 -175 1209 a -175 1209 a
tx@Dict begin RotEnd  end
 -175 1209 a -175 1209 a
tx@Dict begin  PutEnd  end
 -175
1209 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 0  setrgbcolor   [1.0 0.0 0.0
1.0  0.0  0.0   ] concat   0.8 SLW 0 0 0  setrgbcolor  [ 113.81097
0.0 113.81097 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -175 1209
a
tx@Dict begin  gsave STV CP T /ps@rot 0.0 def grestore  end
 -175 1209 a -175 1209 a
tx@Dict begin { 40.79445 9.78192 } PutCoor PutBegin  end
 -175 1209 a -175 1209 a
tx@Dict begin ps@rot  RotBegin  end
 -175
1209 a -175 1193 a
tx@Dict begin CP CP translate 1.0  1.0  scale NET  end
 -175 1193 a Fj(old)g(ebp)-175 1193
y
tx@Dict begin  CP CP translate 1 1.0 div 1 1.0 div scale NET  end
 -175 1193 a -175 1209 a
tx@Dict begin RotEnd  end
 -175 1209 a -175 1209 a
tx@Dict begin  PutEnd  end
 -175
1209 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 0  setrgbcolor   [1.0 0.0 0.0
1.0  170.71646  0.0   ] concat   0.8 SLW 0 0 0  setrgbcolor  [ 113.81097
0.0 113.81097 28.45274 0.0 28.45274 0.0 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.8 SLW 0 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -175 1209
a
tx@Dict begin  gsave STV CP T /ps@rot 0.0 def grestore  end
 -175 1209 a -175 1209 a
tx@Dict begin { 221.64667 10.66977 } PutCoor PutBegin  end
 -175 1209 a -175 1209 a
tx@Dict begin ps@rot  RotBegin  end
 -175
1209 a -175 1193 a
tx@Dict begin CP CP translate 1.0  1.0  scale NET  end
 -175 1193 a Fj(ebp)-175 1193 y
tx@Dict begin  CP CP translate 1 1.0 div 1 1.0 div scale NET  end
 -175
1193 a -175 1209 a
tx@Dict begin RotEnd  end
 -175 1209 a -175 1209 a
tx@Dict begin  PutEnd  end
 -175 1209
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 0  setrgbcolor   [1.0 0.0 0.0
1.0  0.0  85.35823   ] concat   0.8 SLW 0 0 0  setrgbcolor  /ArrowA
{ /lineto load stopped { moveto } if } def /ArrowB { BeginArrow 1.
 1.  scale  false 0.4 2.5 1.5 2. CLW mul add dup 2 div /w ED mul dup
/h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L
w h L w neg a neg rlineto gsave fill grestore grestore 0 h a sub moveto
  EndArrow  } def /ArrowInside { } def  [ 113.81097 -71.13185 170.71646
-71.13185   /currentpoint load stopped pop /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 2.5  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -300 1320 a
Fd(SML)p -300 1475 4 108 v -283 1437 a Ff(use)38 b Fc(")p
Ff(fpic)5 b Fg(:)p Ff(sml)k Fc(")p Fj(;)p -300 1591 V
-283 1553 a Ff(PolyML)p Fg(:)p Ff(SaveState)d Fg(:)p
Ff(lo)l(adState)42 b Fc(")o Ff(fpicsml)9 b Fc(")q Fj(;)p
-300 1707 V -283 1669 a Ff(pr)l(o)l(c)l(essT)-6 b(eX\014le)39
b Fc(")p Ff(lab3)11 b Fc(")q Fj(;)p -300 1823 V -283
1785 a Ff(use)38 b Fc(")p Ff(fpicpics)7 b Fg(:)p Ff(sml)i
Fc(")r Fj(;)p -300 1940 V 0 TeXcolorgray 1158 2349 a(10)p
0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -300 -217 a Fd(ASM)20 b(source)h(co)q(de)g(app)q(ended)h
(to)e(file)g(lab3.s)p -300 -63 4 108 v -283 -101 a Ff(euclid)9
b Fj(:)p -300 54 V -283 15 a Ff(push)39 b Fj(\045)p Ff(ebp)p
-300 170 V -283 132 a(mov)j Fj(\045)p Ff(esp)5 b Fg(;)p
Fj(\045)p Ff(ebp)-175 314 y Fj(No)n(w)28 b(w)n(e)h(can)f(access)g(the)h
(2)g(parameters)e(using)h(register)g(EBP)-7 b(.)28 b(4)g(b)n(ytes)h(ab)
r(o)n(v)n(e)e(EBP)h(is)-300 414 y(the)g(return)f(address,)g(8)g(is)g
(the)h(1st)f(parm,)g(and)h(12)f(is)g(the)h(second.)36
b(i.e.)p 0 TeXcolorgray -300 580 a Fb(n)p 0 TeXcolorgray
42 w Fj(is)27 b(on)g(stac)n(k)g(at)g Fc(12\(\045ebp\))p
0 TeXcolorgray -300 746 a Fb(m)p 0 TeXcolorgray 41 w
Fj(is)h(on)f(stac)n(k)f(at)72 b Fc(8\(\045ebp\))-300
912 y Fj(The)25 b(if)h(statemen)n(t)g(has)e(to)i(b)r(e)f(sim)n(ulated)h
(b)n(y)f(branc)n(hing)f(to)h(lab)r(els)g(dep)r(ending)h(of)f(results)g
(of)-300 1012 y(doing)i(the)h(comparison)e(of)h(n)h(to)g(zero.)-300
1140 y Fd(ASM)20 b(source)h(co)q(de)g(app)q(ended)h(to)e(file)g(lab3.s)
p -300 1294 V -283 1256 a Ff(mov)42 b(12)11 b Fj(\(\045)p
Ff(ebp)5 b Fj(\))p Fg(;)p Fj(\045)p Ff(e)l(ax)p -300
1410 V -283 1372 a(cmp)38 b Fj($)p Ff(0)11 b Fg(;)p Fj(\045)p
Ff(e)l(ax)p -300 1527 V -283 1488 a(jle)40 b(else)-175
1671 y Fj(This)c(is)f(the)i(\\then")e(part)h(of)g(the)g(if)h(statemen)n
(t.)62 b(W)-7 b(e)37 b(need)f(to)g(calculate)f Fg(m)55
b Fj(mo)r(d)28 b Fg(n)-300 1771 y Fj(and)f(call)f(euclid)h(again!)35
b(In)n(teger)26 b(division)h(is)f(done)h(b)n(y)f(putting)i(dividend)f
(in)g(ED)n(X:EAX)g(as)-300 1870 y(64-bit)g(v)-5 b(alue,)27
b(and)h(divisor)e(in)i(EBX.)f(The)h(remainder)f(will)g(b)r(e)h(in)g(ED)
n(X.)p 0 TeXcolorgray 1158 2349 a(11)p 0 TeXcolorgray
eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -300 -217 a Fd(ASM)20 b(source)h(co)q(de)g(app)q(ended)h
(to)e(file)g(lab3.s)p -300 -63 4 108 v -283 -101 a Ff(mov)42
b(12)11 b Fj(\(\045)p Ff(ebp)5 b Fj(\))p Fg(;)35 b Fj(\045)p
Ff(ebx)p -300 54 V -283 15 a(mov)42 b(8)11 b Fj(\(\045)p
Ff(ebp)5 b Fj(\))p Fg(;)35 b Fj(\045)p Ff(e)l(ax)p -300
170 V -283 132 a(mov)42 b Fj($)p Ff(0)11 b Fg(;)32 b
Fj(\045)p Ff(e)l(dx)43 b Fj(#)32 b Ff(cle)l(ar)42 b(upp)l(er)g(32)i
(bits)c(of)50 b(the)39 b(64)11 b Fh(\000)p Ff(bit)41
b(divident)h(e)l(dx)10 b Fj(:)p Ff(e)l(ax)p -300 286
V -283 248 a(idiv)43 b Fj(\045)p Ff(ebx)f Fj(#)33 b Ff(mo)l(dulus)39
b(is)g(in)g(e)l(dx)j Fj(\()p Ff(quotient)e(is)g(in)f(e)l(ax)10
b Fj(\))p -300 402 V -283 364 a Ff(push)71 b Fj(\045)p
Ff(e)l(dx)p -300 519 V -283 480 a(push)39 b Fj(\045)p
Ff(ebx)p -300 635 V -283 597 a(c)l(al)t(l)j(euclid)p
-300 751 V -283 713 a(add)g Fj($)p Ff(8)11 b Fg(;)p Fj(\045)p
Ff(esp)p -300 867 V -283 829 a(jmp)38 b(endif)p -300
984 V -283 945 a(else)6 b Fj(:)p -300 1100 V -283 1062
a Ff(mov)42 b(8)11 b Fj(\(\045)p Ff(ebp)5 b Fj(\))p Fg(;)p
Fj(\045)p Ff(e)l(ax)p -300 1216 V -283 1178 a(endif)19
b Fj(:)p 0 TeXcolorgray 1158 2349 a(12)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
